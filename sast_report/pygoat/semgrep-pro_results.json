{"version":"1.139.0","results":[{"check_id":"dockerfile.security.missing-user.missing-user","path":"Dockerfile","start":{"line":33,"col":1,"offset":654},"end":{"line":33,"col":75,"offset":728},"extra":{"metavars":{"$...VARS":{"start":{"line":33,"col":5,"offset":658},"end":{"line":33,"col":75,"offset":728},"abstract_content":"[\"gunicorn\"\"--bind\"\"0.0.0.0:8000\"\"--workers\"\"6\"\"pygoat.wsgi\"]"}},"message":"By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.","fix":"USER non-root\nCMD [\"gunicorn\", \"--bind\", \"0.0.0.0:8000\", \"--workers\",\"6\", \"pygoat.wsgi\"]","metadata":{"cwe":["CWE-250: Execution with Unnecessary Privileges"],"category":"security","technology":["dockerfile"],"confidence":"MEDIUM","owasp":["A04:2021 - Insecure Design"],"references":["https://owasp.org/Top10/A04_2021-Insecure_Design"],"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/dockerfile.security.missing-user.missing-user","shortlink":"https://sg.run/Gbvn","semgrep.dev":{"rule":{"origin":"community","r_id":20148,"rule_id":"AbUN06","rv_id":1032972,"url":"https://semgrep.dev/playground/r/5PTA4lQ/dockerfile.security.missing-user.missing-user","version_id":"5PTA4lQ"}}},"severity":"ERROR","fingerprint":"4872cca5f01a6757549d5b47798e968673e6abb7dea2430f9082c7bba0b15fd69f2ebca99cf9589b573b4d0786637e686af5a6812dd7d4d326e4ff2bcbd7f0a4_0","lines":"CMD [\"gunicorn\", \"--bind\", \"0.0.0.0:8000\", \"--workers\",\"6\", \"pygoat.wsgi\"]","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.injection.command.subprocess-injection.subprocess-injection","path":"challenge/views.py","start":{"line":81,"col":19,"offset":3255},"end":{"line":81,"col":79,"offset":3315},"extra":{"metavars":{"$FUNC":{"start":{"line":68,"col":9,"offset":2739},"end":{"line":68,"col":15,"offset":2745},"abstract_content":"delete"},"$REQUEST":{"start":{"line":68,"col":22,"offset":2752},"end":{"line":68,"col":29,"offset":2759},"abstract_content":"request"}},"message":"Detected user input entering a `subprocess` call unsafely. This could result in a command injection vulnerability. An attacker could use this vulnerability to execute arbitrary commands on the host, which allows them to download malware, scan sensitive data, or run any command they wish on the server. Do not let users choose the command to run. In general, prefer to use Python API versions of system commands. If you must use subprocess, use a dictionary to allowlist a set of commands.","metadata":{"category":"security","technology":["flask"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://semgrep.dev/docs/cheat-sheets/python-command-injection/"],"confidence":"HIGH","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"HIGH","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.django.security.injection.command.subprocess-injection.subprocess-injection","shortlink":"https://sg.run/49BE","semgrep.dev":{"rule":{"origin":"community","r_id":31144,"rule_id":"EwUepx","rv_id":946170,"url":"https://semgrep.dev/playground/r/GxTP71A/python.django.security.injection.command.subprocess-injection.subprocess-injection","version_id":"GxTP71A"}}},"severity":"ERROR","fingerprint":"192d1eee38c041f7802829dd4e9fb53b89614d112151822192cafb3693484284f2a2136e446f3c8cb13f8124df4b11ce835b906a074d937b4517b9a983d7a352_0","lines":"        process = subprocess.Popen(command.split(\" \"), stdout=subprocess.PIPE)","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"challenge/views.py","start":{"line":68,"col":22,"offset":2752},"end":{"line":68,"col":29,"offset":2759}},"request"]],"intermediate_vars":[{"location":{"path":"challenge/views.py","start":{"line":68,"col":22,"offset":2752},"end":{"line":68,"col":29,"offset":2759}},"content":"request"},{"location":{"path":"challenge/views.py","start":{"line":74,"col":13,"offset":2943},"end":{"line":74,"col":22,"offset":2952}},"content":"user_chal"},{"location":{"path":"challenge/views.py","start":{"line":80,"col":9,"offset":3187},"end":{"line":80,"col":16,"offset":3194}},"content":"command"}],"taint_sink":["CliLoc",[{"path":"challenge/views.py","start":{"line":81,"col":19,"offset":3255},"end":{"line":81,"col":79,"offset":3315}},"subprocess.Popen(command.split(\" \"), stdout=subprocess.PIPE)"]]},"engine_kind":"OSS"}},{"check_id":"dockerfile.security.missing-user.missing-user","path":"dockerized_labs/broken_auth_lab/Dockerfile","start":{"line":21,"col":1,"offset":361},"end":{"line":21,"col":25,"offset":385},"extra":{"metavars":{"$...VARS":{"start":{"line":21,"col":5,"offset":365},"end":{"line":21,"col":25,"offset":385},"abstract_content":"[\"python\"\"app.py\"]"}},"message":"By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.","fix":"USER non-root\nCMD [\"python\", \"app.py\"]","metadata":{"cwe":["CWE-250: Execution with Unnecessary Privileges"],"category":"security","technology":["dockerfile"],"confidence":"MEDIUM","owasp":["A04:2021 - Insecure Design"],"references":["https://owasp.org/Top10/A04_2021-Insecure_Design"],"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/dockerfile.security.missing-user.missing-user","shortlink":"https://sg.run/Gbvn","semgrep.dev":{"rule":{"origin":"community","r_id":20148,"rule_id":"AbUN06","rv_id":1032972,"url":"https://semgrep.dev/playground/r/5PTA4lQ/dockerfile.security.missing-user.missing-user","version_id":"5PTA4lQ"}}},"severity":"ERROR","fingerprint":"1df2a38293af7b154e18050e3146a78a58cdbd792d951a60a2ee2ede385e278f88cb11c577122c13fe1446c42810bce95f3f881b6b8d44f8ad137057a4b288b3_0","lines":"CMD [\"python\", \"app.py\"]","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.flask.security.audit.secure-set-cookie.secure-set-cookie","path":"dockerized_labs/broken_auth_lab/app.py","start":{"line":49,"col":13,"offset":1462},"end":{"line":49,"col":79,"offset":1528},"extra":{"metavars":{"$RESP":{"start":{"line":49,"col":13,"offset":1462},"end":{"line":49,"col":21,"offset":1470},"abstract_content":"response","propagated_value":{"svalue_start":{"line":42,"col":20,"offset":1157},"svalue_end":{"line":42,"col":65,"offset":1202},"svalue_abstract_content":"make_response(redirect(url_for('dashboard')))"}}},"message":"Found a Flask cookie with insecurely configured properties.  By default the secure, httponly and samesite ar configured insecurely. cookies should be handled securely by setting `secure=True`, `httponly=True`, and `samesite='Lax'` in response.set_cookie(...). If these parameters are not properly set, your cookies are not properly protected and are at risk of being stolen by an attacker. Include the `secure=True`, `httponly=True`, `samesite='Lax'` arguments or set these to be true in the Flask configuration.","metadata":{"cwe":["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"],"owasp":["A05:2021 - Security Misconfiguration"],"references":["https://flask.palletsprojects.com/en/3.0.x/api/#flask.Response.set_cookie","https://flask.palletsprojects.com/en/3.0.x/security/#set-cookie-options"],"category":"security","technology":["python","flask"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","functional-categories":["web::search::cookie-config::flask"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cookie Security"],"source":"https://semgrep.dev/r/python.flask.security.audit.secure-set-cookie.secure-set-cookie","shortlink":"https://sg.run/gLkZ","semgrep.dev":{"rule":{"origin":"community","r_id":9541,"rule_id":"GdU7GR","rv_id":946215,"url":"https://semgrep.dev/playground/r/RGTAgj5/python.flask.security.audit.secure-set-cookie.secure-set-cookie","version_id":"RGTAgj5"}}},"severity":"WARNING","fingerprint":"777275684a265ac952461e80f8bc9d31b0f84ce43929ca57c7e17798bb48c5c8b63aaf7c49fed63c9e3d1fbdbd0a1c0e8eb16a31268af1b7767fa55c297dbf0a_0","lines":"            response.set_cookie('session', session_token, max_age=30*24*60*60)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.flask.web.flask-cookie-httponly-missing.flask-cookie-httponly-missing","path":"dockerized_labs/broken_auth_lab/app.py","start":{"line":49,"col":13,"offset":1462},"end":{"line":49,"col":79,"offset":1528},"extra":{"metavars":{"$APP":{"start":{"line":42,"col":20,"offset":1157},"end":{"line":42,"col":33,"offset":1170},"abstract_content":"make_response"},"$RESP":{"start":{"line":49,"col":13,"offset":1462},"end":{"line":49,"col":21,"offset":1470},"abstract_content":"response","propagated_value":{"svalue_start":{"line":42,"col":20,"offset":1157},"svalue_end":{"line":42,"col":65,"offset":1202},"svalue_abstract_content":"make_response(redirect(url_for('dashboard')))"}},"$...ARGS":{"start":{"line":49,"col":33,"offset":1482},"end":{"line":49,"col":78,"offset":1527},"abstract_content":"'session'session_token max_age 30*24*60*60"}},"message":"Detected a cookie where the `HttpOnly` flag is either missing or disabled. The `HttpOnly` cookie flag instructs the browser to forbid client-side JavaScript to read the cookie. If JavaScript interaction is required, you can ignore this finding. However, set the `HttpOnly` flag to `true` in all other cases. If this wasn't intentional, it's recommended to set the HttpOnly flag to true so the cookie will not be accessible through client-side scripts. A secure default approach would consist of creating a custom response class, overriding the `set_cookie` method to set this flag to `True` by default, setting the `response_class` attribute of your Flask app to use the custom response class, setting the flag to False on a case-by-case basis only when necessary.","fix":"response.set_cookie('session', session_token, max_age=30*24*60*60, httponly=True)","metadata":{"likelihood":"LOW","impact":"LOW","confidence":"HIGH","category":"security","subcategory":["secure default"],"cwe":["CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag"],"display-name":"Missing HttpOnly Flag in Cookie","functional-categories":["web::search::cookie-config::flask","web::search::cookie-config::flask-jwt-extended","web::search::cookie-config::flask-login","web::search::cookie-config::flask-session"],"owasp":["A05:2021 - Security Misconfiguration"],"references":["https://owasp.org/Top10/A05_2021-Security_Misconfiguration"],"technology":["cookie","cookies","flask","web"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cookie Security"],"source":"https://semgrep.dev/r/python.flask.web.flask-cookie-httponly-missing.flask-cookie-httponly-missing","shortlink":"https://sg.run/x8Z4j","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":116530,"rule_id":"d8Ur84L","rv_id":1152544,"url":"https://semgrep.dev/playground/r/ZRTpkKG/python.flask.web.flask-cookie-httponly-missing.flask-cookie-httponly-missing","version_id":"ZRTpkKG"}}},"severity":"INFO","fingerprint":"e92b5bb057d130f54828713ed781f9516ac7ae2a1db07e6b5c5b136dcd1c035e6246826b3fd4af2cfb85deddc93b3728d26864b35cd87a2ea6f72c710d305241_0","lines":"            response.set_cookie('session', session_token, max_age=30*24*60*60)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.flask.web.flask-cookie-samesite-missing.flask-cookie-samesite-missing","path":"dockerized_labs/broken_auth_lab/app.py","start":{"line":49,"col":13,"offset":1462},"end":{"line":49,"col":79,"offset":1528},"extra":{"metavars":{"$APP":{"start":{"line":42,"col":20,"offset":1157},"end":{"line":42,"col":33,"offset":1170},"abstract_content":"make_response"},"$RESP":{"start":{"line":49,"col":13,"offset":1462},"end":{"line":49,"col":21,"offset":1470},"abstract_content":"response","propagated_value":{"svalue_start":{"line":42,"col":20,"offset":1157},"svalue_end":{"line":42,"col":65,"offset":1202},"svalue_abstract_content":"make_response(redirect(url_for('dashboard')))"}},"$...ARGS":{"start":{"line":49,"col":33,"offset":1482},"end":{"line":49,"col":78,"offset":1527},"abstract_content":"'session'session_token max_age 30*24*60*60"}},"message":"Detected a cookie options with the `SameSite` flag set to \"None\". This is a potential security risk that arises from the way web browsers manage cookies. In a typical web application, cookies are used to store and transmit session-related data between a client and a server. To enhance security, cookies can be marked with the \"SameSite\" attribute, which restricts their usage based on the origin of the page that set them. This attribute can have three values: \"Strict,\" \"Lax,\" or \"None\". Make sure that the choice of the `None` value is intentional and that you understand the potential security implications. When `SameSite` is set to \"Strict\", no 3rd party cookie will be sent with outgoing requests. While 'Strict' is the most secure option, 'Lax' is a good compromise between security and usability and this default value is secure for most applications. A secure default approach would consist of creating a custom response class, overriding the `set_cookie` method to set this flag to `Lax` by default, setting the `response_class` attribute of your Flask app to use the custom response class, setting the flag a different value on a case-by-case basis only when necessary.","fix":"response.set_cookie('session', session_token, max_age=30*24*60*60, samesite='Lax')","metadata":{"likelihood":"LOW","impact":"LOW","confidence":"HIGH","category":"security","subcategory":["secure default"],"cwe":["CWE-1275: Sensitive Cookie with Improper SameSite Attribute"],"display-name":"Improper SameSite Attribute in Cookie","functional-categories":["web::search::cookie-config::flask","web::search::cookie-config::flask-jwt-extended","web::search::cookie-config::flask-login","web::search::cookie-config::flask-session"],"owasp":["A01:2021 - Broken Access Control"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control","https://web.dev/articles/samesite-cookies-explained"],"technology":["cookie","cookies","flask","web"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cookie Security"],"source":"https://semgrep.dev/r/python.flask.web.flask-cookie-samesite-missing.flask-cookie-samesite-missing","shortlink":"https://sg.run/Orzy7","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":116531,"rule_id":"ZqUQDGX","rv_id":1152545,"url":"https://semgrep.dev/playground/r/nWTo52y/python.flask.web.flask-cookie-samesite-missing.flask-cookie-samesite-missing","version_id":"nWTo52y"}}},"severity":"INFO","fingerprint":"ec56f00303418f946b49c82791de739b2c6a3cab2c806f0b4f15f5c724e14291ab31c07412748c618bac9df32caff91df592e07c4c3af6279e244ee5f15f553d_0","lines":"            response.set_cookie('session', session_token, max_age=30*24*60*60)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.flask.web.flask-cookie-secure-missing.flask-cookie-secure-missing","path":"dockerized_labs/broken_auth_lab/app.py","start":{"line":49,"col":13,"offset":1462},"end":{"line":49,"col":79,"offset":1528},"extra":{"metavars":{"$APP":{"start":{"line":42,"col":20,"offset":1157},"end":{"line":42,"col":33,"offset":1170},"abstract_content":"make_response"},"$RESP":{"start":{"line":49,"col":13,"offset":1462},"end":{"line":49,"col":21,"offset":1470},"abstract_content":"response","propagated_value":{"svalue_start":{"line":42,"col":20,"offset":1157},"svalue_end":{"line":42,"col":65,"offset":1202},"svalue_abstract_content":"make_response(redirect(url_for('dashboard')))"}},"$...ARGS":{"start":{"line":49,"col":33,"offset":1482},"end":{"line":49,"col":78,"offset":1527},"abstract_content":"'session'session_token max_age 30*24*60*60"}},"message":"Detected a cookie where the `Secure` flag is either missing or disabled. The `Secure` cookie flag instructs the browser to forbid sending the cookie over an insecure HTTP request. Set the `Secure` flag to `true` so the cookie will only be sent over HTTPS. If this wasn't intentional, it's recommended to set the Secure flag to true so the cookie will always be sent over HTTPS. A secure default approach would consist of creating a custom response class, overriding the `set_cookie` method to set this flag to `True` by default, setting the `response_class` attribute of your Flask app to use the custom response class, setting the flag to False on a case-by-case basis only when necessary.","fix":"response.set_cookie('session', session_token, max_age=30*24*60*60, secure=True)","metadata":{"likelihood":"LOW","impact":"LOW","confidence":"HIGH","category":"security","subcategory":["secure default"],"cwe":["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"],"display-name":"Cookie Without 'Secure' Attribute in flask","functional-categories":["web::search::cookie-config::flask","web::search::cookie-config::flask-jwt-extended","web::search::cookie-config::flask-login","web::search::cookie-config::flask-session"],"owasp":["A05:2021 - Security Misconfiguration"],"references":["https://owasp.org/Top10/A05_2021-Security_Misconfiguration"],"technology":["cookie","cookies","flask","web"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cookie Security"],"source":"https://semgrep.dev/r/python.flask.web.flask-cookie-secure-missing.flask-cookie-secure-missing","shortlink":"https://sg.run/d8O1n","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":116534,"rule_id":"7KUgKWw","rv_id":1152548,"url":"https://semgrep.dev/playground/r/LjTALkQ/python.flask.web.flask-cookie-secure-missing.flask-cookie-secure-missing","version_id":"LjTALkQ"}}},"severity":"INFO","fingerprint":"f55bcd2214ba373aa7575b2e0c7a0f38b2cd9063067572dc31c6dc4eab02dbf57e0e6d8989d224e467d39fea23d569cec953fb1dce725c3f2e1ff0cdb00538c4_0","lines":"            response.set_cookie('session', session_token, max_age=30*24*60*60)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.flask.security.audit.secure-set-cookie.secure-set-cookie","path":"dockerized_labs/broken_auth_lab/app.py","start":{"line":51,"col":13,"offset":1555},"end":{"line":51,"col":58,"offset":1600},"extra":{"metavars":{"$RESP":{"start":{"line":51,"col":13,"offset":1555},"end":{"line":51,"col":21,"offset":1563},"abstract_content":"response","propagated_value":{"svalue_start":{"line":42,"col":20,"offset":1157},"svalue_end":{"line":42,"col":65,"offset":1202},"svalue_abstract_content":"make_response(redirect(url_for('dashboard')))"}}},"message":"Found a Flask cookie with insecurely configured properties.  By default the secure, httponly and samesite ar configured insecurely. cookies should be handled securely by setting `secure=True`, `httponly=True`, and `samesite='Lax'` in response.set_cookie(...). If these parameters are not properly set, your cookies are not properly protected and are at risk of being stolen by an attacker. Include the `secure=True`, `httponly=True`, `samesite='Lax'` arguments or set these to be true in the Flask configuration.","metadata":{"cwe":["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"],"owasp":["A05:2021 - Security Misconfiguration"],"references":["https://flask.palletsprojects.com/en/3.0.x/api/#flask.Response.set_cookie","https://flask.palletsprojects.com/en/3.0.x/security/#set-cookie-options"],"category":"security","technology":["python","flask"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","functional-categories":["web::search::cookie-config::flask"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cookie Security"],"source":"https://semgrep.dev/r/python.flask.security.audit.secure-set-cookie.secure-set-cookie","shortlink":"https://sg.run/gLkZ","semgrep.dev":{"rule":{"origin":"community","r_id":9541,"rule_id":"GdU7GR","rv_id":946215,"url":"https://semgrep.dev/playground/r/RGTAgj5/python.flask.security.audit.secure-set-cookie.secure-set-cookie","version_id":"RGTAgj5"}}},"severity":"WARNING","fingerprint":"777275684a265ac952461e80f8bc9d31b0f84ce43929ca57c7e17798bb48c5c8b63aaf7c49fed63c9e3d1fbdbd0a1c0e8eb16a31268af1b7767fa55c297dbf0a_1","lines":"            response.set_cookie('session', session_token)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.flask.web.flask-cookie-httponly-missing.flask-cookie-httponly-missing","path":"dockerized_labs/broken_auth_lab/app.py","start":{"line":51,"col":13,"offset":1555},"end":{"line":51,"col":58,"offset":1600},"extra":{"metavars":{"$APP":{"start":{"line":42,"col":20,"offset":1157},"end":{"line":42,"col":33,"offset":1170},"abstract_content":"make_response"},"$RESP":{"start":{"line":51,"col":13,"offset":1555},"end":{"line":51,"col":21,"offset":1563},"abstract_content":"response","propagated_value":{"svalue_start":{"line":42,"col":20,"offset":1157},"svalue_end":{"line":42,"col":65,"offset":1202},"svalue_abstract_content":"make_response(redirect(url_for('dashboard')))"}},"$...ARGS":{"start":{"line":51,"col":33,"offset":1575},"end":{"line":51,"col":57,"offset":1599},"abstract_content":"'session'session_token"}},"message":"Detected a cookie where the `HttpOnly` flag is either missing or disabled. The `HttpOnly` cookie flag instructs the browser to forbid client-side JavaScript to read the cookie. If JavaScript interaction is required, you can ignore this finding. However, set the `HttpOnly` flag to `true` in all other cases. If this wasn't intentional, it's recommended to set the HttpOnly flag to true so the cookie will not be accessible through client-side scripts. A secure default approach would consist of creating a custom response class, overriding the `set_cookie` method to set this flag to `True` by default, setting the `response_class` attribute of your Flask app to use the custom response class, setting the flag to False on a case-by-case basis only when necessary.","fix":"response.set_cookie('session', session_token, httponly=True)","metadata":{"likelihood":"LOW","impact":"LOW","confidence":"HIGH","category":"security","subcategory":["secure default"],"cwe":["CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag"],"display-name":"Missing HttpOnly Flag in Cookie","functional-categories":["web::search::cookie-config::flask","web::search::cookie-config::flask-jwt-extended","web::search::cookie-config::flask-login","web::search::cookie-config::flask-session"],"owasp":["A05:2021 - Security Misconfiguration"],"references":["https://owasp.org/Top10/A05_2021-Security_Misconfiguration"],"technology":["cookie","cookies","flask","web"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cookie Security"],"source":"https://semgrep.dev/r/python.flask.web.flask-cookie-httponly-missing.flask-cookie-httponly-missing","shortlink":"https://sg.run/x8Z4j","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":116530,"rule_id":"d8Ur84L","rv_id":1152544,"url":"https://semgrep.dev/playground/r/ZRTpkKG/python.flask.web.flask-cookie-httponly-missing.flask-cookie-httponly-missing","version_id":"ZRTpkKG"}}},"severity":"INFO","fingerprint":"5056a9fa38e08638100681a74bfce370d0246a62656868e54ca56210506dbc71ad9d19348d190475131e8d52dd09e0c8219088e83ef2c8aeb7824bb6d9a1ef5e_0","lines":"            response.set_cookie('session', session_token)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.flask.web.flask-cookie-samesite-missing.flask-cookie-samesite-missing","path":"dockerized_labs/broken_auth_lab/app.py","start":{"line":51,"col":13,"offset":1555},"end":{"line":51,"col":58,"offset":1600},"extra":{"metavars":{"$APP":{"start":{"line":42,"col":20,"offset":1157},"end":{"line":42,"col":33,"offset":1170},"abstract_content":"make_response"},"$RESP":{"start":{"line":51,"col":13,"offset":1555},"end":{"line":51,"col":21,"offset":1563},"abstract_content":"response","propagated_value":{"svalue_start":{"line":42,"col":20,"offset":1157},"svalue_end":{"line":42,"col":65,"offset":1202},"svalue_abstract_content":"make_response(redirect(url_for('dashboard')))"}},"$...ARGS":{"start":{"line":51,"col":33,"offset":1575},"end":{"line":51,"col":57,"offset":1599},"abstract_content":"'session'session_token"}},"message":"Detected a cookie options with the `SameSite` flag set to \"None\". This is a potential security risk that arises from the way web browsers manage cookies. In a typical web application, cookies are used to store and transmit session-related data between a client and a server. To enhance security, cookies can be marked with the \"SameSite\" attribute, which restricts their usage based on the origin of the page that set them. This attribute can have three values: \"Strict,\" \"Lax,\" or \"None\". Make sure that the choice of the `None` value is intentional and that you understand the potential security implications. When `SameSite` is set to \"Strict\", no 3rd party cookie will be sent with outgoing requests. While 'Strict' is the most secure option, 'Lax' is a good compromise between security and usability and this default value is secure for most applications. A secure default approach would consist of creating a custom response class, overriding the `set_cookie` method to set this flag to `Lax` by default, setting the `response_class` attribute of your Flask app to use the custom response class, setting the flag a different value on a case-by-case basis only when necessary.","fix":"response.set_cookie('session', session_token, samesite='Lax')","metadata":{"likelihood":"LOW","impact":"LOW","confidence":"HIGH","category":"security","subcategory":["secure default"],"cwe":["CWE-1275: Sensitive Cookie with Improper SameSite Attribute"],"display-name":"Improper SameSite Attribute in Cookie","functional-categories":["web::search::cookie-config::flask","web::search::cookie-config::flask-jwt-extended","web::search::cookie-config::flask-login","web::search::cookie-config::flask-session"],"owasp":["A01:2021 - Broken Access Control"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control","https://web.dev/articles/samesite-cookies-explained"],"technology":["cookie","cookies","flask","web"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cookie Security"],"source":"https://semgrep.dev/r/python.flask.web.flask-cookie-samesite-missing.flask-cookie-samesite-missing","shortlink":"https://sg.run/Orzy7","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":116531,"rule_id":"ZqUQDGX","rv_id":1152545,"url":"https://semgrep.dev/playground/r/nWTo52y/python.flask.web.flask-cookie-samesite-missing.flask-cookie-samesite-missing","version_id":"nWTo52y"}}},"severity":"INFO","fingerprint":"3f5a3ead213ec79fee408b86a728df044e002a6ca2454d128274e49000907caa797fcbaf11ef85b8c7e2d370629d55762cc436d5000b53fefde6b070e188f1fe_0","lines":"            response.set_cookie('session', session_token)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.flask.web.flask-cookie-secure-missing.flask-cookie-secure-missing","path":"dockerized_labs/broken_auth_lab/app.py","start":{"line":51,"col":13,"offset":1555},"end":{"line":51,"col":58,"offset":1600},"extra":{"metavars":{"$APP":{"start":{"line":42,"col":20,"offset":1157},"end":{"line":42,"col":33,"offset":1170},"abstract_content":"make_response"},"$RESP":{"start":{"line":51,"col":13,"offset":1555},"end":{"line":51,"col":21,"offset":1563},"abstract_content":"response","propagated_value":{"svalue_start":{"line":42,"col":20,"offset":1157},"svalue_end":{"line":42,"col":65,"offset":1202},"svalue_abstract_content":"make_response(redirect(url_for('dashboard')))"}},"$...ARGS":{"start":{"line":51,"col":33,"offset":1575},"end":{"line":51,"col":57,"offset":1599},"abstract_content":"'session'session_token"}},"message":"Detected a cookie where the `Secure` flag is either missing or disabled. The `Secure` cookie flag instructs the browser to forbid sending the cookie over an insecure HTTP request. Set the `Secure` flag to `true` so the cookie will only be sent over HTTPS. If this wasn't intentional, it's recommended to set the Secure flag to true so the cookie will always be sent over HTTPS. A secure default approach would consist of creating a custom response class, overriding the `set_cookie` method to set this flag to `True` by default, setting the `response_class` attribute of your Flask app to use the custom response class, setting the flag to False on a case-by-case basis only when necessary.","fix":"response.set_cookie('session', session_token, secure=True)","metadata":{"likelihood":"LOW","impact":"LOW","confidence":"HIGH","category":"security","subcategory":["secure default"],"cwe":["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"],"display-name":"Cookie Without 'Secure' Attribute in flask","functional-categories":["web::search::cookie-config::flask","web::search::cookie-config::flask-jwt-extended","web::search::cookie-config::flask-login","web::search::cookie-config::flask-session"],"owasp":["A05:2021 - Security Misconfiguration"],"references":["https://owasp.org/Top10/A05_2021-Security_Misconfiguration"],"technology":["cookie","cookies","flask","web"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cookie Security"],"source":"https://semgrep.dev/r/python.flask.web.flask-cookie-secure-missing.flask-cookie-secure-missing","shortlink":"https://sg.run/d8O1n","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":116534,"rule_id":"7KUgKWw","rv_id":1152548,"url":"https://semgrep.dev/playground/r/LjTALkQ/python.flask.web.flask-cookie-secure-missing.flask-cookie-secure-missing","version_id":"LjTALkQ"}}},"severity":"INFO","fingerprint":"a45f7c03b2303eeeb9cec5f61c9bb21b9577a0ed475fc0b0efd62650babf2d03c998571777eef64fb81406ef6ba8bc2f4c2d3382898cadef1d97fb22d4d7d3a0_0","lines":"            response.set_cookie('session', session_token)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.flask.debug.debug-flask.active-debug-code-flask","path":"dockerized_labs/broken_auth_lab/app.py","start":{"line":123,"col":5,"offset":3966},"end":{"line":123,"col":51,"offset":4012},"extra":{"metavars":{},"message":"The application is running debug code or has debug mode enabled. This may expose sensitive information, like stack traces and environment variables, to attackers. It may also modify application behavior, potentially enabling attackers to bypass restrictions. To remediate this finding, ensure that the application's debug code and debug mode are disabled or removed from the production environment.","metadata":{"likelihood":"LOW","impact":"MEDIUM","confidence":"HIGH","category":"security","subcategory":["vuln"],"cwe":["CWE-489: Active Debug Code"],"display-name":"Active Debug Code in Flask","functional-categories":["debug::search::active-debug-code"],"references":["https://flask.palletsprojects.com/en/3.0.x/debugging/"],"technology":["flask","python"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Active Debug Code"],"source":"https://semgrep.dev/r/python.flask.debug.debug-flask.active-debug-code-flask","shortlink":"https://sg.run/lBbpB","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":116513,"rule_id":"zdUKBnK","rv_id":947918,"url":"https://semgrep.dev/playground/r/ZRT3q9v/python.flask.debug.debug-flask.active-debug-code-flask","version_id":"ZRT3q9v"}}},"severity":"INFO","fingerprint":"ed1aaf97e251cafb3b6a8676a4e63549f200b50b32a7629a14b8e2bfb4ed991bdeb68f5148a5544cd0e8eed47a5d59aff0e981b9defaf242dd3ff362218e4dd8_0","lines":"    app.run(host='0.0.0.0', port=5000, debug=True)  # Vulnerable: Debug mode enabled in production","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.flask.security.audit.app-run-param-config.avoid_app_run_with_bad_host","path":"dockerized_labs/broken_auth_lab/app.py","start":{"line":123,"col":5,"offset":3966},"end":{"line":123,"col":51,"offset":4012},"extra":{"metavars":{},"message":"Running flask app with host 0.0.0.0 could expose the server publicly.","metadata":{"cwe":["CWE-668: Exposure of Resource to Wrong Sphere"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["flask"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"HIGH","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Other"],"source":"https://semgrep.dev/r/python.flask.security.audit.app-run-param-config.avoid_app_run_with_bad_host","shortlink":"https://sg.run/eLby","semgrep.dev":{"rule":{"origin":"community","r_id":9532,"rule_id":"L1Uy1n","rv_id":946204,"url":"https://semgrep.dev/playground/r/7ZTrQkG/python.flask.security.audit.app-run-param-config.avoid_app_run_with_bad_host","version_id":"7ZTrQkG"}}},"severity":"WARNING","fingerprint":"c5ae0ec0d215b68aab4b56977c99cd4e0061f2ef02b0e1c6c16c80151cc2704f044fb2a708d3f785dbdfb5848919d88fac50ec38713d8505fffb584383836f51_0","lines":"    app.run(host='0.0.0.0', port=5000, debug=True)  # Vulnerable: Debug mode enabled in production","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.flask.security.audit.debug-enabled.debug-enabled","path":"dockerized_labs/broken_auth_lab/app.py","start":{"line":123,"col":5,"offset":3966},"end":{"line":123,"col":51,"offset":4012},"extra":{"metavars":{"$APP":{"start":{"line":123,"col":5,"offset":3966},"end":{"line":123,"col":8,"offset":3969},"abstract_content":"app","propagated_value":{"svalue_start":{"line":7,"col":7,"offset":180},"svalue_end":{"line":7,"col":22,"offset":195},"svalue_abstract_content":"Flask(__name__)"}}},"message":"Detected Flask app with debug=True. Do not deploy to production with this flag enabled as it will leak sensitive information. Instead, consider using Flask configuration variables or setting 'debug' using system environment variables.","metadata":{"cwe":["CWE-489: Active Debug Code"],"owasp":"A06:2017 - Security Misconfiguration","references":["https://labs.detectify.com/2015/10/02/how-patreon-got-hacked-publicly-exposed-werkzeug-debugger/"],"category":"security","technology":["flask"],"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"HIGH","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Active Debug Code"],"source":"https://semgrep.dev/r/python.flask.security.audit.debug-enabled.debug-enabled","shortlink":"https://sg.run/dKrd","semgrep.dev":{"rule":{"origin":"community","r_id":9534,"rule_id":"gxU1bd","rv_id":946206,"url":"https://semgrep.dev/playground/r/8KTKjwR/python.flask.security.audit.debug-enabled.debug-enabled","version_id":"8KTKjwR"}}},"severity":"WARNING","fingerprint":"e4790081c9c7ced3193b8336fe32b2ebd4f37d9a183f01514dc961d6c23a018fed477c4689e3573600b6e1bbc556566aa1d6289d6be04ab2244d0698834487a9_0","lines":"    app.run(host='0.0.0.0', port=5000, debug=True)  # Vulnerable: Debug mode enabled in production","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.django-no-csrf-token.django-no-csrf-token","path":"dockerized_labs/broken_auth_lab/templates/lab.html","start":{"line":13,"col":13,"offset":278},"end":{"line":21,"col":20,"offset":773},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":5,"offset":4},"abstract_content":"POST"},"$METHOD":{"start":{"line":13,"col":27,"offset":292},"end":{"line":13,"col":31,"offset":296},"abstract_content":"POST"}},"message":"Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.","metadata":{"category":"security","cwe":"CWE-352: Cross-Site Request Forgery (CSRF)","references":["https://docs.djangoproject.com/en/4.2/howto/csrf/"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"MEDIUM","subcategory":["audit"],"technology":["django"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token","shortlink":"https://sg.run/N0Bp","semgrep.dev":{"rule":{"origin":"community","r_id":73471,"rule_id":"PeUyYG","rv_id":946160,"url":"https://semgrep.dev/playground/r/BjT1NRl/python.django.security.django-no-csrf-token.django-no-csrf-token","version_id":"BjT1NRl"}}},"severity":"WARNING","fingerprint":"3518d322b3088ce785b93e5d972b723525b7c9f38a4f0f5c5a1be96a174da0ebb5085844a6350741ffb5aa06464025fee948d021e6d85bdb139387d6c49ce128_0","lines":"            <form method=\"POST\" action=\"/login\">\n                <input type=\"text\" name=\"username\" placeholder=\"Username\" required>\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" required>\n                <div style=\"margin: 10px 0;\">\n                    <input type=\"checkbox\" name=\"remember_me\" id=\"remember_me\">\n                    <label for=\"remember_me\">Remember me</label>\n                </div>\n                <button type=\"submit\">Login</button>\n            </form>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.django-no-csrf-token.django-no-csrf-token","path":"dockerized_labs/broken_auth_lab/templates/lab.html","start":{"line":29,"col":13,"offset":996},"end":{"line":35,"col":20,"offset":1466},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":5,"offset":4},"abstract_content":"POST"},"$METHOD":{"start":{"line":29,"col":27,"offset":1010},"end":{"line":29,"col":31,"offset":1014},"abstract_content":"POST"}},"message":"Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.","metadata":{"category":"security","cwe":"CWE-352: Cross-Site Request Forgery (CSRF)","references":["https://docs.djangoproject.com/en/4.2/howto/csrf/"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"MEDIUM","subcategory":["audit"],"technology":["django"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token","shortlink":"https://sg.run/N0Bp","semgrep.dev":{"rule":{"origin":"community","r_id":73471,"rule_id":"PeUyYG","rv_id":946160,"url":"https://semgrep.dev/playground/r/BjT1NRl/python.django.security.django-no-csrf-token.django-no-csrf-token","version_id":"BjT1NRl"}}},"severity":"WARNING","fingerprint":"3518d322b3088ce785b93e5d972b723525b7c9f38a4f0f5c5a1be96a174da0ebb5085844a6350741ffb5aa06464025fee948d021e6d85bdb139387d6c49ce128_1","lines":"            <form method=\"POST\" action=\"/register\">\n                <input type=\"text\" name=\"username\" placeholder=\"Username\" required>\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" required>\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" required>\n                <input type=\"password\" name=\"confirm_password\" placeholder=\"Confirm Password\" required>\n                <button type=\"submit\">Register</button>\n            </form>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.django-no-csrf-token.django-no-csrf-token","path":"dockerized_labs/broken_auth_lab/templates/lab.html","start":{"line":40,"col":13,"offset":1599},"end":{"line":43,"col":20,"offset":1806},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":5,"offset":4},"abstract_content":"POST"},"$METHOD":{"start":{"line":40,"col":27,"offset":1613},"end":{"line":40,"col":31,"offset":1617},"abstract_content":"POST"}},"message":"Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.","metadata":{"category":"security","cwe":"CWE-352: Cross-Site Request Forgery (CSRF)","references":["https://docs.djangoproject.com/en/4.2/howto/csrf/"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"MEDIUM","subcategory":["audit"],"technology":["django"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token","shortlink":"https://sg.run/N0Bp","semgrep.dev":{"rule":{"origin":"community","r_id":73471,"rule_id":"PeUyYG","rv_id":946160,"url":"https://semgrep.dev/playground/r/BjT1NRl/python.django.security.django-no-csrf-token.django-no-csrf-token","version_id":"BjT1NRl"}}},"severity":"WARNING","fingerprint":"3518d322b3088ce785b93e5d972b723525b7c9f38a4f0f5c5a1be96a174da0ebb5085844a6350741ffb5aa06464025fee948d021e6d85bdb139387d6c49ce128_2","lines":"            <form method=\"POST\" action=\"/reset-password\">\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" required>\n                <button type=\"submit\">Send Reset Link</button>\n            </form>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.django-no-csrf-token.django-no-csrf-token","path":"dockerized_labs/broken_auth_lab/templates/reset.html","start":{"line":13,"col":13,"offset":293},"end":{"line":18,"col":20,"offset":706},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":5,"offset":4},"abstract_content":"POST"},"$METHOD":{"start":{"line":13,"col":27,"offset":307},"end":{"line":13,"col":31,"offset":311},"abstract_content":"POST"}},"message":"Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.","metadata":{"category":"security","cwe":"CWE-352: Cross-Site Request Forgery (CSRF)","references":["https://docs.djangoproject.com/en/4.2/howto/csrf/"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"MEDIUM","subcategory":["audit"],"technology":["django"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token","shortlink":"https://sg.run/N0Bp","semgrep.dev":{"rule":{"origin":"community","r_id":73471,"rule_id":"PeUyYG","rv_id":946160,"url":"https://semgrep.dev/playground/r/BjT1NRl/python.django.security.django-no-csrf-token.django-no-csrf-token","version_id":"BjT1NRl"}}},"severity":"WARNING","fingerprint":"3ff034be415b628e3edbf3116e414c22193238c9c9ef2644c89d76eb6af949864f32b1c4627c8b226e95c386f63c0d58644f403fd23e57910d3b26b36e2a4f79_0","lines":"            <form method=\"POST\" action=\"/reset/{{ token }}/confirm\">\n                <input type=\"password\" name=\"new_password\" placeholder=\"New Password\" required>\n                <input type=\"password\" name=\"confirm_password\" placeholder=\"Confirm New Password\" required>\n                <input type=\"hidden\" name=\"token\" value=\"{{ token }}\">\n                <button type=\"submit\">Reset Password</button>\n            </form>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"dockerfile.security.missing-user.missing-user","path":"dockerized_labs/insec_des_lab/Dockerfile","start":{"line":15,"col":1,"offset":186},"end":{"line":15,"col":47,"offset":232},"extra":{"metavars":{"$...VARS":{"start":{"line":15,"col":5,"offset":190},"end":{"line":15,"col":47,"offset":232},"abstract_content":"[\"flask\"\"run\"\"--debug\"\"--port=8080\"]"}},"message":"By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.","fix":"USER non-root\nCMD [\"flask\", \"run\", \"--debug\", \"--port=8080\"]","metadata":{"cwe":["CWE-250: Execution with Unnecessary Privileges"],"category":"security","technology":["dockerfile"],"confidence":"MEDIUM","owasp":["A04:2021 - Insecure Design"],"references":["https://owasp.org/Top10/A04_2021-Insecure_Design"],"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/dockerfile.security.missing-user.missing-user","shortlink":"https://sg.run/Gbvn","semgrep.dev":{"rule":{"origin":"community","r_id":20148,"rule_id":"AbUN06","rv_id":1032972,"url":"https://semgrep.dev/playground/r/5PTA4lQ/dockerfile.security.missing-user.missing-user","version_id":"5PTA4lQ"}}},"severity":"ERROR","fingerprint":"521de38256ae422c42a916bda147dfc6a4d01a9b3e8424608886a43b5c84ddfe9ab7df1c70ac0f5a2020a7a27895cbfd775d90bf1761c9319de39a6dc9a2b570_0","lines":"CMD [\"flask\", \"run\", \"--debug\", \"--port=8080\"]","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.flask.security.insecure-deserialization.insecure-deserialization","path":"dockerized_labs/insec_des_lab/main.py","start":{"line":27,"col":35,"offset":730},"end":{"line":27,"col":53,"offset":748},"extra":{"metavars":{"$X":{"start":{"line":22,"col":5,"offset":489},"end":{"line":22,"col":19,"offset":503},"abstract_content":"serialize_data"},"$FUNC":{"start":{"line":27,"col":42,"offset":737},"end":{"line":27,"col":47,"offset":742},"abstract_content":"dumps"}},"message":"Detected the use of an insecure deserialization library in a Flask route. These libraries are prone to code execution vulnerabilities. Ensure user data does not enter this function. To fix this, try to avoid serializing whole objects. Consider instead using a serializer such as JSON.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["flask"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.flask.security.insecure-deserialization.insecure-deserialization","shortlink":"https://sg.run/N45z","semgrep.dev":{"rule":{"origin":"community","r_id":9527,"rule_id":"d8UjBO","rv_id":946232,"url":"https://semgrep.dev/playground/r/1QToKqY/python.flask.security.insecure-deserialization.insecure-deserialization","version_id":"1QToKqY"}}},"severity":"ERROR","fingerprint":"fa1ee2140f59595c3fc4781040ff39cf95b3cdd1e57635250cd6b9d51761ce41ba06cb11e163ced586bf29585ca4b60ad8eac1437f7e51fe2a7796b99bce2055_0","lines":"    serialized = base64.b64encode(pickle.dumps(user)).decode()","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.deserialization.pickle.avoid-pickle","path":"dockerized_labs/insec_des_lab/main.py","start":{"line":27,"col":35,"offset":730},"end":{"line":27,"col":53,"offset":748},"extra":{"metavars":{"$FUNC":{"start":{"line":27,"col":42,"offset":737},"end":{"line":27,"col":47,"offset":742},"abstract_content":"dumps"}},"message":"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle","shortlink":"https://sg.run/OPwB","semgrep.dev":{"rule":{"origin":"community","r_id":9675,"rule_id":"EwU2BJ","rv_id":946397,"url":"https://semgrep.dev/playground/r/w8TKJL9/python.lang.security.deserialization.pickle.avoid-pickle","version_id":"w8TKJL9"}}},"severity":"WARNING","fingerprint":"aec5f3b0bd805ad087a4544fe111dbab52e7582d9757cd1413a04a128a9fcc050a7c11a82559ef25857b56966677c1427adb794ddcf32b4216c083785b968621_0","lines":"    serialized = base64.b64encode(pickle.dumps(user)).decode()","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.flask.security.insecure-deserialization.insecure-deserialization","path":"dockerized_labs/insec_des_lab/main.py","start":{"line":36,"col":16,"offset":1109},"end":{"line":36,"col":42,"offset":1135},"extra":{"metavars":{"$X":{"start":{"line":31,"col":5,"offset":874},"end":{"line":31,"col":21,"offset":890},"abstract_content":"deserialize_data"},"$FUNC":{"start":{"line":36,"col":23,"offset":1116},"end":{"line":36,"col":28,"offset":1121},"abstract_content":"loads"}},"message":"Detected the use of an insecure deserialization library in a Flask route. These libraries are prone to code execution vulnerabilities. Ensure user data does not enter this function. To fix this, try to avoid serializing whole objects. Consider instead using a serializer such as JSON.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["flask"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.flask.security.insecure-deserialization.insecure-deserialization","shortlink":"https://sg.run/N45z","semgrep.dev":{"rule":{"origin":"community","r_id":9527,"rule_id":"d8UjBO","rv_id":946232,"url":"https://semgrep.dev/playground/r/1QToKqY/python.flask.security.insecure-deserialization.insecure-deserialization","version_id":"1QToKqY"}}},"severity":"ERROR","fingerprint":"0ef03e1c63ea01b5aabb75321e2993a0ece62d4fb1eb9a11432617a838eeb31817d92cfccca601f25edc2a1559ca0a6e6e58c406f6cd6824908942f8ae87b3ae_0","lines":"        user = pickle.loads(decoded_data)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.deserialization.pickle.avoid-pickle","path":"dockerized_labs/insec_des_lab/main.py","start":{"line":36,"col":16,"offset":1109},"end":{"line":36,"col":42,"offset":1135},"extra":{"metavars":{"$FUNC":{"start":{"line":36,"col":23,"offset":1116},"end":{"line":36,"col":28,"offset":1121},"abstract_content":"loads"}},"message":"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle","shortlink":"https://sg.run/OPwB","semgrep.dev":{"rule":{"origin":"community","r_id":9675,"rule_id":"EwU2BJ","rv_id":946397,"url":"https://semgrep.dev/playground/r/w8TKJL9/python.lang.security.deserialization.pickle.avoid-pickle","version_id":"w8TKJL9"}}},"severity":"WARNING","fingerprint":"38792e0cd74e16d4584fa3a8c79364aee24f33546f34fbd65e9d7ccbe432ce3513061f3b09b14e01700accdf56bad1b20bf1257fa7c71a15f7385d275a71f06d_0","lines":"        user = pickle.loads(decoded_data)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.flask.deserialization.tainted-pickle-flask.tainted-pickle-flask","path":"dockerized_labs/insec_des_lab/main.py","start":{"line":36,"col":29,"offset":1122},"end":{"line":36,"col":41,"offset":1134},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":5,"offset":4},"abstract_content":"form"},"$PROPERTY":{"start":{"line":33,"col":35,"offset":937},"end":{"line":33,"col":39,"offset":941},"abstract_content":"form"},"$PICKLE":{"start":{"line":36,"col":16,"offset":1109},"end":{"line":36,"col":22,"offset":1115},"abstract_content":"pickle"},"$METHOD":{"start":{"line":36,"col":23,"offset":1116},"end":{"line":36,"col":28,"offset":1121},"abstract_content":"loads"},"$SINK":{"start":{"line":36,"col":29,"offset":1122},"end":{"line":36,"col":41,"offset":1134},"abstract_content":"decoded_data","propagated_value":{"svalue_start":{"line":34,"col":24,"offset":992},"svalue_end":{"line":34,"col":57,"offset":1025},"svalue_abstract_content":"base64.b64decode(serialized_data)"}}},"message":"The application may convert user-controlled data into an object, which can lead to an insecure deserialization vulnerability. An attacker can create a malicious serialized object, pass it to the application, and take advantage of the deserialization process to perform Denial-of-service (DoS), Remote code execution (RCE), or bypass access control measures. The C implementations of the `pickle` module, called `cPickle` or `_pickle`, are also considered insecure.","metadata":{"likelihood":"MEDIUM","impact":"HIGH","confidence":"HIGH","category":"security","subcategory":["vuln"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"cwe2020-top25":true,"cwe2021-top25":true,"cwe2022-top25":true,"display-name":"Unsafe Deserialization in Flask","functional-categories":["deserialization::sink::load-object::lang","web::source::cookie::flask","web::source::form-data::flask","web::source::form-data::flask-wtf","web::source::form-data::wtforms","web::source::header::flask","web::source::http-body::flask","web::source::url-path-params::flask","web::source::url-query-string::flask"],"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"references":["https://davidhamann.de/2020/04/05/exploiting-python-pickle/","https://docs.python.org/3/library/pickle.html","https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures","https://portswigger.net/web-security/deserialization"],"technology":["deserialization","flask","flask-wtf","pickle","web","wtforms"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.flask.deserialization.tainted-pickle-flask.tainted-pickle-flask","shortlink":"https://sg.run/3lBg","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":44943,"rule_id":"qNUAQe","rv_id":1152509,"url":"https://semgrep.dev/playground/r/l4T636o/python.flask.deserialization.tainted-pickle-flask.tainted-pickle-flask","version_id":"l4T636o"}}},"severity":"ERROR","fingerprint":"0adf8f646ca828d9e7d481136f57b45df01b1ca7ffe5b97e6557fcab71105b7b47ca02b01d28dffa43d0411e567a7af9be229c7f220853f62947287525f29f7b_0","lines":"        user = pickle.loads(decoded_data)","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"dockerized_labs/insec_des_lab/main.py","start":{"line":33,"col":27,"offset":929},"end":{"line":33,"col":39,"offset":941}},"request.form"]],"intermediate_vars":[{"location":{"path":"dockerized_labs/insec_des_lab/main.py","start":{"line":33,"col":9,"offset":911},"end":{"line":33,"col":24,"offset":926}},"content":"serialized_data"},{"location":{"path":"dockerized_labs/insec_des_lab/main.py","start":{"line":34,"col":9,"offset":977},"end":{"line":34,"col":21,"offset":989}},"content":"decoded_data"}],"taint_sink":["CliLoc",[{"path":"dockerized_labs/insec_des_lab/main.py","start":{"line":36,"col":29,"offset":1122},"end":{"line":36,"col":41,"offset":1134}},"decoded_data"]]},"engine_kind":"OSS"}},{"check_id":"python.flask.security.audit.app-run-param-config.avoid_app_run_with_bad_host","path":"dockerized_labs/insec_des_lab/main.py","start":{"line":51,"col":5,"offset":1690},"end":{"line":51,"col":39,"offset":1724},"extra":{"metavars":{},"message":"Running flask app with host 0.0.0.0 could expose the server publicly.","metadata":{"cwe":["CWE-668: Exposure of Resource to Wrong Sphere"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["flask"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"HIGH","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Other"],"source":"https://semgrep.dev/r/python.flask.security.audit.app-run-param-config.avoid_app_run_with_bad_host","shortlink":"https://sg.run/eLby","semgrep.dev":{"rule":{"origin":"community","r_id":9532,"rule_id":"L1Uy1n","rv_id":946204,"url":"https://semgrep.dev/playground/r/7ZTrQkG/python.flask.security.audit.app-run-param-config.avoid_app_run_with_bad_host","version_id":"7ZTrQkG"}}},"severity":"WARNING","fingerprint":"70c710c5233a439add6f66f924f754285fea03aa59c71e8e650e8fc6eabec84584494f89b7e330b11e9f5be64300017d64ef4f2823350febd978e2c42f87a9b6_0","lines":"    app.run(host='0.0.0.0', port=8080)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.django-no-csrf-token.django-no-csrf-token","path":"dockerized_labs/insec_des_lab/templates/index.html","start":{"line":61,"col":13,"offset":3011},"end":{"line":64,"col":20,"offset":3220},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":5,"offset":4},"abstract_content":"POST"},"$METHOD":{"start":{"line":61,"col":47,"offset":3045},"end":{"line":61,"col":51,"offset":3049},"abstract_content":"POST"}},"message":"Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.","metadata":{"category":"security","cwe":"CWE-352: Cross-Site Request Forgery (CSRF)","references":["https://docs.djangoproject.com/en/4.2/howto/csrf/"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"MEDIUM","subcategory":["audit"],"technology":["django"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token","shortlink":"https://sg.run/N0Bp","semgrep.dev":{"rule":{"origin":"community","r_id":73471,"rule_id":"PeUyYG","rv_id":946160,"url":"https://semgrep.dev/playground/r/BjT1NRl/python.django.security.django-no-csrf-token.django-no-csrf-token","version_id":"BjT1NRl"}}},"severity":"WARNING","fingerprint":"80ea48a7f3317f091280833a1b7cb82465051058624e91fa406d1e96d5ad4beaf39046f0da63b27d38014003738e44ba19ab31ff68c231b4b36ceefcdf5d4bf1_0","lines":"            <form action=\"/serialize\" method=\"POST\">\n                <input type=\"text\" name=\"username\" placeholder=\"Enter username\" required>\n                <button type=\"submit\">Create User</button>\n            </form>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.django-no-csrf-token.django-no-csrf-token","path":"dockerized_labs/insec_des_lab/templates/index.html","start":{"line":69,"col":13,"offset":3327},"end":{"line":72,"col":20,"offset":3570},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":5,"offset":4},"abstract_content":"POST"},"$METHOD":{"start":{"line":69,"col":49,"offset":3363},"end":{"line":69,"col":53,"offset":3367},"abstract_content":"POST"}},"message":"Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.","metadata":{"category":"security","cwe":"CWE-352: Cross-Site Request Forgery (CSRF)","references":["https://docs.djangoproject.com/en/4.2/howto/csrf/"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"MEDIUM","subcategory":["audit"],"technology":["django"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token","shortlink":"https://sg.run/N0Bp","semgrep.dev":{"rule":{"origin":"community","r_id":73471,"rule_id":"PeUyYG","rv_id":946160,"url":"https://semgrep.dev/playground/r/BjT1NRl/python.django.security.django-no-csrf-token.django-no-csrf-token","version_id":"BjT1NRl"}}},"severity":"WARNING","fingerprint":"80ea48a7f3317f091280833a1b7cb82465051058624e91fa406d1e96d5ad4beaf39046f0da63b27d38014003738e44ba19ab31ff68c231b4b36ceefcdf5d4bf1_1","lines":"            <form action=\"/deserialize\" method=\"POST\">\n                <textarea name=\"serialized_data\" placeholder=\"Enter base64-encoded serialized data\" required></textarea>\n                <button type=\"submit\">View Content</button>\n            </form>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"dockerfile.security.missing-user-entrypoint.missing-user-entrypoint","path":"dockerized_labs/sensitive_data_exposure/Dockerfile","start":{"line":18,"col":1,"offset":277},"end":{"line":18,"col":30,"offset":306},"extra":{"metavars":{"$...VARS":{"start":{"line":18,"col":12,"offset":288},"end":{"line":18,"col":30,"offset":306},"abstract_content":"[\"/entrypoint.sh\"]"}},"message":"By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.","fix":"USER non-root\nENTRYPOINT [\"/entrypoint.sh\"]","metadata":{"cwe":["CWE-269: Improper Privilege Management"],"category":"security","technology":["dockerfile"],"confidence":"MEDIUM","owasp":["A04:2021 - Insecure Design"],"references":["https://owasp.org/Top10/A04_2021-Insecure_Design"],"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/dockerfile.security.missing-user-entrypoint.missing-user-entrypoint","shortlink":"https://sg.run/k281","semgrep.dev":{"rule":{"origin":"community","r_id":47272,"rule_id":"ReUW9E","rv_id":945268,"url":"https://semgrep.dev/playground/r/K3TJbJg/dockerfile.security.missing-user-entrypoint.missing-user-entrypoint","version_id":"K3TJbJg"}}},"severity":"ERROR","fingerprint":"f7f86e09d4d1319ef4b6ff8f4a1e88b7346f4f57efe782131b1d37966dd7923e50534df4a1a901201b2f3011b6f2b2730def5a6322507633dfe138b1528a69fd_0","lines":"ENTRYPOINT [\"/entrypoint.sh\"]","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"dockerfile.security.missing-user.missing-user","path":"dockerized_labs/sensitive_data_exposure/Dockerfile","start":{"line":19,"col":1,"offset":307},"end":{"line":19,"col":57,"offset":363},"extra":{"metavars":{"$...VARS":{"start":{"line":19,"col":5,"offset":311},"end":{"line":19,"col":57,"offset":363},"abstract_content":"[\"python\"\"manage.py\"\"runserver\"\"0.0.0.0:8000\"]"}},"message":"By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.","fix":"USER non-root\nCMD [\"python\", \"manage.py\", \"runserver\", \"0.0.0.0:8000\"]","metadata":{"cwe":["CWE-250: Execution with Unnecessary Privileges"],"category":"security","technology":["dockerfile"],"confidence":"MEDIUM","owasp":["A04:2021 - Insecure Design"],"references":["https://owasp.org/Top10/A04_2021-Insecure_Design"],"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/dockerfile.security.missing-user.missing-user","shortlink":"https://sg.run/Gbvn","semgrep.dev":{"rule":{"origin":"community","r_id":20148,"rule_id":"AbUN06","rv_id":1032972,"url":"https://semgrep.dev/playground/r/5PTA4lQ/dockerfile.security.missing-user.missing-user","version_id":"5PTA4lQ"}}},"severity":"ERROR","fingerprint":"826627fc9364f0ea0d877e081ec8650f442b3442285c94d294057c138355cd17d8c952c2c92e5495b5eebafdc157bdd79bf332f40343e8eb0e2240f63e9cff05_0","lines":"CMD [\"python\", \"manage.py\", \"runserver\", \"0.0.0.0:8000\"]","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"dockerized_labs/sensitive_data_exposure/templates/about.html","start":{"line":5,"col":5,"offset":89},"end":{"line":5,"col":108,"offset":192},"extra":{"metavars":{"$...A":{"start":{"line":5,"col":10,"offset":94},"end":{"line":5,"col":107,"offset":191},"abstract_content":" rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\""}},"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA","semgrep.dev":{"rule":{"origin":"community","r_id":13728,"rule_id":"AbUQzj","rv_id":1131025,"url":"https://semgrep.dev/playground/r/w8TDnA8/html.security.audit.missing-integrity.missing-integrity","version_id":"w8TDnA8"}}},"severity":"WARNING","fingerprint":"348e4de7a58b6e3e49f04f3edadd2919fc87f67b223c655e47f657fadc52c3aef4bd28a45d5a299481fb539c85c3b4bcf50909b5099c6fda5ef5a49e9986ca6a_0","lines":"    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"dockerized_labs/sensitive_data_exposure/templates/about.html","start":{"line":91,"col":5,"offset":4215},"end":{"line":91,"col":77,"offset":4287},"extra":{"metavars":{"$...A":{"start":{"line":91,"col":12,"offset":4222},"end":{"line":91,"col":67,"offset":4277},"abstract_content":" src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\""}},"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA","semgrep.dev":{"rule":{"origin":"community","r_id":13728,"rule_id":"AbUQzj","rv_id":1131025,"url":"https://semgrep.dev/playground/r/w8TDnA8/html.security.audit.missing-integrity.missing-integrity","version_id":"w8TDnA8"}}},"severity":"WARNING","fingerprint":"01ccb2f3e2ff0e46ed46192cd596f1308abab5468e67f10a1bf0b9bf52687b5c9fbcc933ba14e6e2a53a9ef56cdbf57721ea477ed00133c8cfe687c0327ea2c5_0","lines":"    <script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"></script>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"dockerized_labs/sensitive_data_exposure/templates/about.html","start":{"line":92,"col":5,"offset":4292},"end":{"line":92,"col":97,"offset":4384},"extra":{"metavars":{"$...A":{"start":{"line":92,"col":12,"offset":4299},"end":{"line":92,"col":87,"offset":4374},"abstract_content":" src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\""}},"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA","semgrep.dev":{"rule":{"origin":"community","r_id":13728,"rule_id":"AbUQzj","rv_id":1131025,"url":"https://semgrep.dev/playground/r/w8TDnA8/html.security.audit.missing-integrity.missing-integrity","version_id":"w8TDnA8"}}},"severity":"WARNING","fingerprint":"73bb79805913e152a769e5d57b169e02623f4d5e991e81ad02ad035568853f064436de2e55be3432ddb9f9d6ea51bfa3c6267329a409664c82c978a9e278fb80_0","lines":"    <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"dockerized_labs/sensitive_data_exposure/templates/about.html","start":{"line":93,"col":5,"offset":4389},"end":{"line":93,"col":99,"offset":4483},"extra":{"metavars":{"$...A":{"start":{"line":93,"col":12,"offset":4396},"end":{"line":93,"col":89,"offset":4473},"abstract_content":" src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\""}},"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA","semgrep.dev":{"rule":{"origin":"community","r_id":13728,"rule_id":"AbUQzj","rv_id":1131025,"url":"https://semgrep.dev/playground/r/w8TDnA8/html.security.audit.missing-integrity.missing-integrity","version_id":"w8TDnA8"}}},"severity":"WARNING","fingerprint":"a092e91807ed9f223f3fd84884985745638d6f8003689e11016e91f12d99c230989d83bad9488621bd033b37112485fd19aea4ae3d69a7462824685c8fef4d6d_0","lines":"    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"dockerized_labs/sensitive_data_exposure/templates/base.html","start":{"line":5,"col":5,"offset":112},"end":{"line":5,"col":108,"offset":215},"extra":{"metavars":{"$...A":{"start":{"line":5,"col":10,"offset":117},"end":{"line":5,"col":107,"offset":214},"abstract_content":" rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\""}},"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA","semgrep.dev":{"rule":{"origin":"community","r_id":13728,"rule_id":"AbUQzj","rv_id":1131025,"url":"https://semgrep.dev/playground/r/w8TDnA8/html.security.audit.missing-integrity.missing-integrity","version_id":"w8TDnA8"}}},"severity":"WARNING","fingerprint":"dfbde21b642e69de3fb8ed6855c95a3a496c4eec8c78fb3b0a22d01da4616954c2fcac3f9844fcc587cd5b38b245d55fae80bd43fb9f5b4709e59747d7cdc296_0","lines":"    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"dockerized_labs/sensitive_data_exposure/templates/base.html","start":{"line":60,"col":5,"offset":2715},"end":{"line":60,"col":77,"offset":2787},"extra":{"metavars":{"$...A":{"start":{"line":60,"col":12,"offset":2722},"end":{"line":60,"col":67,"offset":2777},"abstract_content":" src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\""}},"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA","semgrep.dev":{"rule":{"origin":"community","r_id":13728,"rule_id":"AbUQzj","rv_id":1131025,"url":"https://semgrep.dev/playground/r/w8TDnA8/html.security.audit.missing-integrity.missing-integrity","version_id":"w8TDnA8"}}},"severity":"WARNING","fingerprint":"db761f4f9dcb5df5475462a04db8955ccc101014790141620216d0e2c2e1944232a15320141aa1d9f8842e528c018f65279e85fcb6e0a1b849095ae71b578835_0","lines":"    <script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"></script>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"dockerized_labs/sensitive_data_exposure/templates/base.html","start":{"line":61,"col":5,"offset":2792},"end":{"line":61,"col":97,"offset":2884},"extra":{"metavars":{"$...A":{"start":{"line":61,"col":12,"offset":2799},"end":{"line":61,"col":87,"offset":2874},"abstract_content":" src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\""}},"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA","semgrep.dev":{"rule":{"origin":"community","r_id":13728,"rule_id":"AbUQzj","rv_id":1131025,"url":"https://semgrep.dev/playground/r/w8TDnA8/html.security.audit.missing-integrity.missing-integrity","version_id":"w8TDnA8"}}},"severity":"WARNING","fingerprint":"f16be7f6c181e379b40953cb3fde79a8bfd17e2752fde8af81e0973c4421dc4e7383e278e5f006f7a932a4ad78beebecd71973f89121ed62a7533f9a2a44fd43_0","lines":"    <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"dockerized_labs/sensitive_data_exposure/templates/base.html","start":{"line":62,"col":5,"offset":2889},"end":{"line":62,"col":99,"offset":2983},"extra":{"metavars":{"$...A":{"start":{"line":62,"col":12,"offset":2896},"end":{"line":62,"col":89,"offset":2973},"abstract_content":" src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\""}},"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA","semgrep.dev":{"rule":{"origin":"community","r_id":13728,"rule_id":"AbUQzj","rv_id":1131025,"url":"https://semgrep.dev/playground/r/w8TDnA8/html.security.audit.missing-integrity.missing-integrity","version_id":"w8TDnA8"}}},"severity":"WARNING","fingerprint":"dfac6938c360169e61783d94f648231930766f50a12a5a3a0abdd035e7218279e065689d62073c3657f0813c8637b40af4dc11266dabeed7abac590192e06e46_0","lines":"    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"dockerized_labs/sensitive_data_exposure/templates/index.html","start":{"line":5,"col":5,"offset":81},"end":{"line":5,"col":108,"offset":184},"extra":{"metavars":{"$...A":{"start":{"line":5,"col":10,"offset":86},"end":{"line":5,"col":107,"offset":183},"abstract_content":" rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\""}},"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA","semgrep.dev":{"rule":{"origin":"community","r_id":13728,"rule_id":"AbUQzj","rv_id":1131025,"url":"https://semgrep.dev/playground/r/w8TDnA8/html.security.audit.missing-integrity.missing-integrity","version_id":"w8TDnA8"}}},"severity":"WARNING","fingerprint":"1977f5d2d17b0dd909e41aa470ccc280456efd4d73c76fc75d41f63b00af5b21884bdb854f4d084fac37b647deb40733e2d6f4ca75cd633888a678fc0e457fbe_0","lines":"    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"dockerized_labs/sensitive_data_exposure/templates/index.html","start":{"line":132,"col":5,"offset":6032},"end":{"line":132,"col":77,"offset":6104},"extra":{"metavars":{"$...A":{"start":{"line":132,"col":12,"offset":6039},"end":{"line":132,"col":67,"offset":6094},"abstract_content":" src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\""}},"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA","semgrep.dev":{"rule":{"origin":"community","r_id":13728,"rule_id":"AbUQzj","rv_id":1131025,"url":"https://semgrep.dev/playground/r/w8TDnA8/html.security.audit.missing-integrity.missing-integrity","version_id":"w8TDnA8"}}},"severity":"WARNING","fingerprint":"fe5f40131adefbdfd2ed646457338941e2dc96c2d12f77a7c9ef8acbd567c55129d0dfa8e06e82bdd96df658bc3feb66bd11de1fb4cc222c5a50a1887bcfebd8_0","lines":"    <script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"></script>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"dockerized_labs/sensitive_data_exposure/templates/index.html","start":{"line":133,"col":5,"offset":6109},"end":{"line":133,"col":97,"offset":6201},"extra":{"metavars":{"$...A":{"start":{"line":133,"col":12,"offset":6116},"end":{"line":133,"col":87,"offset":6191},"abstract_content":" src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\""}},"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA","semgrep.dev":{"rule":{"origin":"community","r_id":13728,"rule_id":"AbUQzj","rv_id":1131025,"url":"https://semgrep.dev/playground/r/w8TDnA8/html.security.audit.missing-integrity.missing-integrity","version_id":"w8TDnA8"}}},"severity":"WARNING","fingerprint":"8c7c780b02b1c07bda49ed7a1f668e11d62b89845bad9674e6b8c552aff2492cc03e57c1d3aedbf52bf3beda3a513e612b75045f69626c437ecd7ea4ea456000_0","lines":"    <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"dockerized_labs/sensitive_data_exposure/templates/index.html","start":{"line":134,"col":5,"offset":6206},"end":{"line":134,"col":99,"offset":6300},"extra":{"metavars":{"$...A":{"start":{"line":134,"col":12,"offset":6213},"end":{"line":134,"col":89,"offset":6290},"abstract_content":" src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\""}},"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA","semgrep.dev":{"rule":{"origin":"community","r_id":13728,"rule_id":"AbUQzj","rv_id":1131025,"url":"https://semgrep.dev/playground/r/w8TDnA8/html.security.audit.missing-integrity.missing-integrity","version_id":"w8TDnA8"}}},"severity":"WARNING","fingerprint":"72862bb4fa40d6d0b445244ab58578c90a2b4ca00692d46fcb2fae74028e070c386ee1ce356c6c78678286de10855b6519532a71694bfb8dc6b255a25de92755_0","lines":"    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"dockerized_labs/sensitive_data_exposure/templates/lesson.html","start":{"line":5,"col":5,"offset":85},"end":{"line":5,"col":108,"offset":188},"extra":{"metavars":{"$...A":{"start":{"line":5,"col":10,"offset":90},"end":{"line":5,"col":107,"offset":187},"abstract_content":" rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\""}},"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA","semgrep.dev":{"rule":{"origin":"community","r_id":13728,"rule_id":"AbUQzj","rv_id":1131025,"url":"https://semgrep.dev/playground/r/w8TDnA8/html.security.audit.missing-integrity.missing-integrity","version_id":"w8TDnA8"}}},"severity":"WARNING","fingerprint":"35bb8303ff59ffd07c049a60d7df52929c0e9044104852508ecc269c5f8026c5232284833c724a376ef7c27c7f37e96e48dbfe951454ac1727456b0a5e7646e5_0","lines":"    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"dockerized_labs/sensitive_data_exposure/templates/lesson.html","start":{"line":337,"col":5,"offset":17752},"end":{"line":337,"col":94,"offset":17841},"extra":{"metavars":{"$...A":{"start":{"line":337,"col":12,"offset":17759},"end":{"line":337,"col":84,"offset":17831},"abstract_content":" src=\"https://kit.fontawesome.com/a076d05399.js\" crossorigin=\"anonymous\""}},"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA","semgrep.dev":{"rule":{"origin":"community","r_id":13728,"rule_id":"AbUQzj","rv_id":1131025,"url":"https://semgrep.dev/playground/r/w8TDnA8/html.security.audit.missing-integrity.missing-integrity","version_id":"w8TDnA8"}}},"severity":"WARNING","fingerprint":"0349dfc019213d0345cd584bdf7edb1fc067e972de027ed3994b3c8f3ed53da776bf364cc9d93306e14aecba72c760b3f76da4db486c9600ec67a6a9a23946f1_0","lines":"    <script src=\"https://kit.fontawesome.com/a076d05399.js\" crossorigin=\"anonymous\"></script>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"dockerized_labs/sensitive_data_exposure/templates/lesson.html","start":{"line":338,"col":5,"offset":17846},"end":{"line":338,"col":77,"offset":17918},"extra":{"metavars":{"$...A":{"start":{"line":338,"col":12,"offset":17853},"end":{"line":338,"col":67,"offset":17908},"abstract_content":" src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\""}},"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA","semgrep.dev":{"rule":{"origin":"community","r_id":13728,"rule_id":"AbUQzj","rv_id":1131025,"url":"https://semgrep.dev/playground/r/w8TDnA8/html.security.audit.missing-integrity.missing-integrity","version_id":"w8TDnA8"}}},"severity":"WARNING","fingerprint":"d886c23d8691c4db2054ea3b15af8cd5c798c2cb93fa5101c379309fa5a44151e616eb4daf6521db8b8d32d84fd87a1c1b80836245bfc39c71c2038245c13e4a_0","lines":"    <script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"></script>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"dockerized_labs/sensitive_data_exposure/templates/lesson.html","start":{"line":339,"col":5,"offset":17923},"end":{"line":339,"col":97,"offset":18015},"extra":{"metavars":{"$...A":{"start":{"line":339,"col":12,"offset":17930},"end":{"line":339,"col":87,"offset":18005},"abstract_content":" src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\""}},"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA","semgrep.dev":{"rule":{"origin":"community","r_id":13728,"rule_id":"AbUQzj","rv_id":1131025,"url":"https://semgrep.dev/playground/r/w8TDnA8/html.security.audit.missing-integrity.missing-integrity","version_id":"w8TDnA8"}}},"severity":"WARNING","fingerprint":"2ad056dec7a069a22ab000205aae41adfecadf48aa629c9db5d1f37a16818f06bcc6cc67d6b948a6489a450ca0ddb7906807e00d17a0b8de56e3435b63f078ef_0","lines":"    <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"dockerized_labs/sensitive_data_exposure/templates/lesson.html","start":{"line":340,"col":5,"offset":18020},"end":{"line":340,"col":99,"offset":18114},"extra":{"metavars":{"$...A":{"start":{"line":340,"col":12,"offset":18027},"end":{"line":340,"col":89,"offset":18104},"abstract_content":" src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\""}},"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA","semgrep.dev":{"rule":{"origin":"community","r_id":13728,"rule_id":"AbUQzj","rv_id":1131025,"url":"https://semgrep.dev/playground/r/w8TDnA8/html.security.audit.missing-integrity.missing-integrity","version_id":"w8TDnA8"}}},"severity":"WARNING","fingerprint":"69c7965c3637fbc788ac470aabf2d0b781f1ab306365ae8887d5aacb60439da619e97c3fc86de89d897574717d9c7d6a94e96b1a7e0f4114b52a1c22b1bc6135_0","lines":"    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"dockerized_labs/sensitive_data_exposure/templates/login.html","start":{"line":5,"col":5,"offset":89},"end":{"line":5,"col":108,"offset":192},"extra":{"metavars":{"$...A":{"start":{"line":5,"col":10,"offset":94},"end":{"line":5,"col":107,"offset":191},"abstract_content":" rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\""}},"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA","semgrep.dev":{"rule":{"origin":"community","r_id":13728,"rule_id":"AbUQzj","rv_id":1131025,"url":"https://semgrep.dev/playground/r/w8TDnA8/html.security.audit.missing-integrity.missing-integrity","version_id":"w8TDnA8"}}},"severity":"WARNING","fingerprint":"28d133aae9f017c76593ff2570fcfe12cc38a4cf5626236bb9c82b664ea620ace2506ddc215198e5120f22924c81ce85fb03eda47d13643a95624025c1f9c65a_0","lines":"    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.django-no-csrf-token.django-no-csrf-token","path":"dockerized_labs/sensitive_data_exposure/templates/login.html","start":{"line":54,"col":25,"offset":2291},"end":{"line":67,"col":32,"offset":3035},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":5,"offset":4},"abstract_content":"post"},"$METHOD":{"start":{"line":54,"col":39,"offset":2305},"end":{"line":54,"col":43,"offset":2309},"abstract_content":"post"}},"message":"Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.","metadata":{"category":"security","cwe":"CWE-352: Cross-Site Request Forgery (CSRF)","references":["https://docs.djangoproject.com/en/4.2/howto/csrf/"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"MEDIUM","subcategory":["audit"],"technology":["django"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token","shortlink":"https://sg.run/N0Bp","semgrep.dev":{"rule":{"origin":"community","r_id":73471,"rule_id":"PeUyYG","rv_id":946160,"url":"https://semgrep.dev/playground/r/BjT1NRl/python.django.security.django-no-csrf-token.django-no-csrf-token","version_id":"BjT1NRl"}}},"severity":"WARNING","fingerprint":"31d7fda37449249c570c4f60c4a38fe89b28cf5d6282fc40e5faf51d14d1e53a2b988c3140398e7943a8b03c05383ba9cb0234577261ffef14d41e4eb0399999_0","lines":"                        <form method=\"post\">\n                            {% csrf_token %}\n                            <div class=\"form-group\">\n                                <label for=\"id_username\">Username:</label>\n                                {{ form.username.errors }}\n                                {{ form.username|safe }}\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"id_password\">Password:</label>\n                                {{ form.password.errors }}\n                                {{ form.password|safe }}\n                            </div>\n                            <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n                        </form>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"dockerized_labs/sensitive_data_exposure/templates/login.html","start":{"line":82,"col":5,"offset":3580},"end":{"line":82,"col":77,"offset":3652},"extra":{"metavars":{"$...A":{"start":{"line":82,"col":12,"offset":3587},"end":{"line":82,"col":67,"offset":3642},"abstract_content":" src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\""}},"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA","semgrep.dev":{"rule":{"origin":"community","r_id":13728,"rule_id":"AbUQzj","rv_id":1131025,"url":"https://semgrep.dev/playground/r/w8TDnA8/html.security.audit.missing-integrity.missing-integrity","version_id":"w8TDnA8"}}},"severity":"WARNING","fingerprint":"108020cccccd4f85770f9d55b3f7ea8a6ce23128e513d602c4ff122c4ab07b89cdc55dda44c201831823e99e91db3e93d3080e81d4d867e06cbeb22988a96212_0","lines":"    <script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"></script>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"dockerized_labs/sensitive_data_exposure/templates/login.html","start":{"line":83,"col":5,"offset":3657},"end":{"line":83,"col":97,"offset":3749},"extra":{"metavars":{"$...A":{"start":{"line":83,"col":12,"offset":3664},"end":{"line":83,"col":87,"offset":3739},"abstract_content":" src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\""}},"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA","semgrep.dev":{"rule":{"origin":"community","r_id":13728,"rule_id":"AbUQzj","rv_id":1131025,"url":"https://semgrep.dev/playground/r/w8TDnA8/html.security.audit.missing-integrity.missing-integrity","version_id":"w8TDnA8"}}},"severity":"WARNING","fingerprint":"bcf823e62725001afc89ad5aa71ef7264b0aa860b675cc4890d3f29b9405ebfa319288d7d6bab18512c5af23bd0d788206df383e89eb6897bcfe4b0f59da634c_0","lines":"    <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"dockerized_labs/sensitive_data_exposure/templates/login.html","start":{"line":84,"col":5,"offset":3754},"end":{"line":84,"col":99,"offset":3848},"extra":{"metavars":{"$...A":{"start":{"line":84,"col":12,"offset":3761},"end":{"line":84,"col":89,"offset":3838},"abstract_content":" src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\""}},"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA","semgrep.dev":{"rule":{"origin":"community","r_id":13728,"rule_id":"AbUQzj","rv_id":1131025,"url":"https://semgrep.dev/playground/r/w8TDnA8/html.security.audit.missing-integrity.missing-integrity","version_id":"w8TDnA8"}}},"severity":"WARNING","fingerprint":"aca76a53b59e972f8b66100d241cda1279ebbdb6e4de2aeeb2522b50d9c9e5c8550a7718c0f45f9a8e51a567993b40bcc68c2acd3cfeefed48fb8ff904983c11_0","lines":"    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"dockerized_labs/sensitive_data_exposure/templates/profile.html","start":{"line":5,"col":5,"offset":91},"end":{"line":5,"col":108,"offset":194},"extra":{"metavars":{"$...A":{"start":{"line":5,"col":10,"offset":96},"end":{"line":5,"col":107,"offset":193},"abstract_content":" rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\""}},"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA","semgrep.dev":{"rule":{"origin":"community","r_id":13728,"rule_id":"AbUQzj","rv_id":1131025,"url":"https://semgrep.dev/playground/r/w8TDnA8/html.security.audit.missing-integrity.missing-integrity","version_id":"w8TDnA8"}}},"severity":"WARNING","fingerprint":"a5b2b4e9cc8a10ac90f3b728ce0738d04fe16f1662ecc5c933dfce2fa6dd91c9e999f40c8fe807ce9acf860439e1884de38c92ea7e2be19ff5cc6a361e82d238_0","lines":"    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"dockerized_labs/sensitive_data_exposure/templates/profile.html","start":{"line":211,"col":5,"offset":10277},"end":{"line":211,"col":94,"offset":10366},"extra":{"metavars":{"$...A":{"start":{"line":211,"col":12,"offset":10284},"end":{"line":211,"col":84,"offset":10356},"abstract_content":" src=\"https://kit.fontawesome.com/a076d05399.js\" crossorigin=\"anonymous\""}},"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA","semgrep.dev":{"rule":{"origin":"community","r_id":13728,"rule_id":"AbUQzj","rv_id":1131025,"url":"https://semgrep.dev/playground/r/w8TDnA8/html.security.audit.missing-integrity.missing-integrity","version_id":"w8TDnA8"}}},"severity":"WARNING","fingerprint":"20739232af61eb082bf1a878f62647953d309e5403546f494e9eb3459efcc288c33552a4ff19589c243969b51f972cf6695eaeddcb799abb3884bed2db919e32_0","lines":"    <script src=\"https://kit.fontawesome.com/a076d05399.js\" crossorigin=\"anonymous\"></script>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"dockerized_labs/sensitive_data_exposure/templates/profile.html","start":{"line":212,"col":5,"offset":10371},"end":{"line":212,"col":77,"offset":10443},"extra":{"metavars":{"$...A":{"start":{"line":212,"col":12,"offset":10378},"end":{"line":212,"col":67,"offset":10433},"abstract_content":" src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\""}},"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA","semgrep.dev":{"rule":{"origin":"community","r_id":13728,"rule_id":"AbUQzj","rv_id":1131025,"url":"https://semgrep.dev/playground/r/w8TDnA8/html.security.audit.missing-integrity.missing-integrity","version_id":"w8TDnA8"}}},"severity":"WARNING","fingerprint":"fbf399cb26a1b45abe09c34a04f133910a19313f70b89fdc16b004e3aa48ee8d0756b9f324d2dc6e4822e71ad9dfa1be7e27c4295d29116ae90b9ff6155256c6_0","lines":"    <script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"></script>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"dockerized_labs/sensitive_data_exposure/templates/profile.html","start":{"line":213,"col":5,"offset":10448},"end":{"line":213,"col":97,"offset":10540},"extra":{"metavars":{"$...A":{"start":{"line":213,"col":12,"offset":10455},"end":{"line":213,"col":87,"offset":10530},"abstract_content":" src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\""}},"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA","semgrep.dev":{"rule":{"origin":"community","r_id":13728,"rule_id":"AbUQzj","rv_id":1131025,"url":"https://semgrep.dev/playground/r/w8TDnA8/html.security.audit.missing-integrity.missing-integrity","version_id":"w8TDnA8"}}},"severity":"WARNING","fingerprint":"c50e65f9a0b654ed2da09c0628c146092b85d6f1dadc327e98a6bc567946f468c9fd14e8fe27541531117548a184e0efd7047c72958c8687face44e48a01ab22_0","lines":"    <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"dockerized_labs/sensitive_data_exposure/templates/profile.html","start":{"line":214,"col":5,"offset":10545},"end":{"line":214,"col":99,"offset":10639},"extra":{"metavars":{"$...A":{"start":{"line":214,"col":12,"offset":10552},"end":{"line":214,"col":89,"offset":10629},"abstract_content":" src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\""}},"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA","semgrep.dev":{"rule":{"origin":"community","r_id":13728,"rule_id":"AbUQzj","rv_id":1131025,"url":"https://semgrep.dev/playground/r/w8TDnA8/html.security.audit.missing-integrity.missing-integrity","version_id":"w8TDnA8"}}},"severity":"WARNING","fingerprint":"1fe491e235079a499ccd1a5cf87760e73fbf2a9afd9ac4e0e9394c66b08f260801389db396050fff7780b15009d3c12e97a20cedfdcf4ca4f767369b190bb50c_0","lines":"    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"dockerized_labs/sensitive_data_exposure/templates/register.html","start":{"line":5,"col":5,"offset":92},"end":{"line":5,"col":108,"offset":195},"extra":{"metavars":{"$...A":{"start":{"line":5,"col":10,"offset":97},"end":{"line":5,"col":107,"offset":194},"abstract_content":" rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\""}},"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA","semgrep.dev":{"rule":{"origin":"community","r_id":13728,"rule_id":"AbUQzj","rv_id":1131025,"url":"https://semgrep.dev/playground/r/w8TDnA8/html.security.audit.missing-integrity.missing-integrity","version_id":"w8TDnA8"}}},"severity":"WARNING","fingerprint":"6dc5bdd863fecffa291c0a80f0570e58d3853f6abf2a284112132bcba59d02a7fad3f48d52f0764283204451a82967095e07d3536c576348cf762ac26b4f8fa0_0","lines":"    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"dockerized_labs/sensitive_data_exposure/templates/register.html","start":{"line":93,"col":5,"offset":4535},"end":{"line":93,"col":77,"offset":4607},"extra":{"metavars":{"$...A":{"start":{"line":93,"col":12,"offset":4542},"end":{"line":93,"col":67,"offset":4597},"abstract_content":" src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\""}},"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA","semgrep.dev":{"rule":{"origin":"community","r_id":13728,"rule_id":"AbUQzj","rv_id":1131025,"url":"https://semgrep.dev/playground/r/w8TDnA8/html.security.audit.missing-integrity.missing-integrity","version_id":"w8TDnA8"}}},"severity":"WARNING","fingerprint":"ee9fcc663dcb4b0c00dbee6fb2b942931c0301619486ffd695b2d5fe16036c3e0a03cf4e2edb33d1334b02d637b861888af6fd4fb28195192fdc469d2cf9ecfa_0","lines":"    <script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"></script>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"dockerized_labs/sensitive_data_exposure/templates/register.html","start":{"line":94,"col":5,"offset":4612},"end":{"line":94,"col":97,"offset":4704},"extra":{"metavars":{"$...A":{"start":{"line":94,"col":12,"offset":4619},"end":{"line":94,"col":87,"offset":4694},"abstract_content":" src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\""}},"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA","semgrep.dev":{"rule":{"origin":"community","r_id":13728,"rule_id":"AbUQzj","rv_id":1131025,"url":"https://semgrep.dev/playground/r/w8TDnA8/html.security.audit.missing-integrity.missing-integrity","version_id":"w8TDnA8"}}},"severity":"WARNING","fingerprint":"a686e3c13cec6f856f99a0b10f148dbfa3bd3bca3227c2d24a617701bba4a3f40fe847b2a619644fd62c11a118b5095708f1b595e42d288df08dd0830ac25cb9_0","lines":"    <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"dockerized_labs/sensitive_data_exposure/templates/register.html","start":{"line":95,"col":5,"offset":4709},"end":{"line":95,"col":99,"offset":4803},"extra":{"metavars":{"$...A":{"start":{"line":95,"col":12,"offset":4716},"end":{"line":95,"col":89,"offset":4793},"abstract_content":" src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\""}},"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA","semgrep.dev":{"rule":{"origin":"community","r_id":13728,"rule_id":"AbUQzj","rv_id":1131025,"url":"https://semgrep.dev/playground/r/w8TDnA8/html.security.audit.missing-integrity.missing-integrity","version_id":"w8TDnA8"}}},"severity":"WARNING","fingerprint":"96fa544d094cccdbaf3da8a5c6d47397cb3ef8ff11cdcfb96dfd29df2a6e7dd477f739ae7c5a9781bb040741a95a89cbba8d7db152d5b790ad3c4743ccee6036_0","lines":"    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.csrf-exempt.no-csrf-exempt","path":"introduction/apis.py","start":{"line":22,"col":1,"offset":582},"end":{"line":54,"col":77,"offset":2288},"extra":{"metavars":{"$R":{"start":{"line":23,"col":5,"offset":599},"end":{"line":23,"col":22,"offset":616},"abstract_content":"ssrf_code_checker"}},"message":"Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.","metadata":{"cwe":["CWE-352: Cross-Site Request Forgery (CSRF)"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["django"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt","shortlink":"https://sg.run/rd5e","semgrep.dev":{"rule":{"origin":"community","r_id":9469,"rule_id":"v8UnqO","rv_id":946139,"url":"https://semgrep.dev/playground/r/xyTqn6x/python.django.security.audit.csrf-exempt.no-csrf-exempt","version_id":"xyTqn6x"}}},"severity":"WARNING","fingerprint":"2d3b14853f00deaed8ccf36ecba7dcb9ac1f79dd8f9dfed4ce707078e2327b467ecd8b67f9da30d18f24c9dfcd59ec6b374479c7c00c5b11d59bd55591d592f7_0","lines":"@csrf_exempt\ndef ssrf_code_checker(request):\n    if request.user.is_authenticated:\n        if request.method == 'POST':\n            python_code = request.POST['python_code']\n            html_code = request.POST['html_code']\n            if not (ssrf_code_converter(python_code)):\n                return JsonResponse({\"status\": \"error\", \"message\": \"Invalid code\"})\n            test_bench1 = ssrf_html_input_extractor(html_code)\n            \n            if (len(test_bench1) >4):\n                return JsonResponse({'message':'too many inputs in Html\\n Try again'},status = 400)\n            test_bench2 = ['secret.txt']\n            correct_output1 = [{\"blog\": \"blog1-passed\"}, {\"blog\": \"blog2-passed\"}, {\"blog\": \"blog3-passed\"}, {\"blog\": \"blog4-passed\"}]\n            outputs = []\n            for inputs in test_bench1:\n                outputs.append(main.ssrf_lab(inputs))\n            if outputs == correct_output1:\n                outputs = []\n            else:\n                return JsonResponse({'message':'Testbench failed, Code is not working\\n Try again'},status = 200)\n\n            correct_output2 = [{\"blog\": \"No blog found\"}]\n            for inputs in test_bench2:\n                outputs.append(main.ssrf_lab(inputs))\n            if outputs == correct_output2:\n                return JsonResponse({'message':'Congratulation, you have written a secure code.', 'passed':1}, status = 200)\n            \n            return JsonResponse({'message':'Test bench passed but the code is not secure'}, status = 200,safe = False)\n        else:\n            return JsonResponse({'message':'method not allowed'},status = 405)\n    else:\n        return JsonResponse({'message':'UnAuthenticated User'},status = 401)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.csrf-exempt.no-csrf-exempt","path":"introduction/apis.py","start":{"line":59,"col":1,"offset":2328},"end":{"line":90,"col":75,"offset":3594},"extra":{"metavars":{"$R":{"start":{"line":61,"col":5,"offset":2373},"end":{"line":61,"col":25,"offset":2393},"abstract_content":"log_function_checker"}},"message":"Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.","metadata":{"cwe":["CWE-352: Cross-Site Request Forgery (CSRF)"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["django"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt","shortlink":"https://sg.run/rd5e","semgrep.dev":{"rule":{"origin":"community","r_id":9469,"rule_id":"v8UnqO","rv_id":946139,"url":"https://semgrep.dev/playground/r/xyTqn6x/python.django.security.audit.csrf-exempt.no-csrf-exempt","version_id":"xyTqn6x"}}},"severity":"WARNING","fingerprint":"8bef469d6d835477cac185d6919da13bee63f0474dea5ad5a7e80ddb846a6bcbcffada06739a0503b965af22f8e3703864693d197c755a56b92285b175120465_0","lines":"@csrf_exempt\n# @authentication_decorator\ndef log_function_checker(request):\n    if request.method == 'POST':\n        csrf_token = request.POST.get(\"csrfmiddlewaretoken\")\n        log_code = request.POST.get('log_code')\n        api_code = request.POST.get('api_code')\n        dirname = os.path.dirname(__file__)\n        log_filename = os.path.join(dirname, \"playground/A9/main.py\")\n        api_filename = os.path.join(dirname, \"playground/A9/api.py\")\n        f = open(log_filename,\"w\")\n        f.write(log_code)\n        f.close()\n        f = open(api_filename,\"w\")\n        f.write(api_code)\n        f.close()\n        # Clearing the log file before starting the test\n        f = open('test.log', 'w')\n        f.write(\"\")\n        f.close()\n        url = \"http://127.0.0.1:8000/2021/discussion/A9/target\"\n        payload={'csrfmiddlewaretoken': csrf_token }\n        requests.request(\"GET\", url)\n        requests.request(\"POST\", url)\n        requests.request(\"PATCH\", url, data=payload)\n        requests.request(\"DELETE\", url)\n        f = open('test.log', 'r')\n        lines = f.readlines()\n        f.close()\n        return JsonResponse({\"message\":\"success\", \"logs\": lines},status = 200)\n    else:\n        return JsonResponse({\"message\":\"method not allowed\"},status = 405)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.injection.request-data-write.request-data-write","path":"introduction/apis.py","start":{"line":64,"col":9,"offset":2506},"end":{"line":70,"col":26,"offset":2837},"extra":{"metavars":{"$DATA":{"start":{"line":64,"col":9,"offset":2506},"end":{"line":64,"col":17,"offset":2514},"abstract_content":"log_code"},"$W":{"start":{"line":64,"col":28,"offset":2525},"end":{"line":64,"col":32,"offset":2529},"abstract_content":"POST"},"$F":{"start":{"line":70,"col":9,"offset":2820},"end":{"line":70,"col":10,"offset":2821},"abstract_content":"f","propagated_value":{"svalue_start":{"line":69,"col":13,"offset":2789},"svalue_end":{"line":69,"col":35,"offset":2811},"svalue_abstract_content":"open(log_filename\"w\")"}}},"message":"Found user-controlled request data passed into '.write(...)'. This could be dangerous if a malicious actor is able to control data into sensitive files. For example, a malicious actor could force rolling of critical log files, or cause a denial-of-service by using up available disk space. Instead, ensure that request data is properly escaped or sanitized.","metadata":{"cwe":["CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')"],"owasp":["A03:2021 - Injection"],"category":"security","technology":["django"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Validation"],"source":"https://semgrep.dev/r/python.django.security.injection.request-data-write.request-data-write","shortlink":"https://sg.run/0Q6j","semgrep.dev":{"rule":{"origin":"community","r_id":9498,"rule_id":"ReUg5z","rv_id":946183,"url":"https://semgrep.dev/playground/r/zyTlkEY/python.django.security.injection.request-data-write.request-data-write","version_id":"zyTlkEY"}}},"severity":"WARNING","fingerprint":"be4638bf4115ae8bafc33af11f84fbfbc7792f505c9091259a25a6d37937aa36a91d4af2ffcb34b4b70b6692d4c060db72aec0193b7c974a3531f187c67fab18_0","lines":"        log_code = request.POST.get('log_code')\n        api_code = request.POST.get('api_code')\n        dirname = os.path.dirname(__file__)\n        log_filename = os.path.join(dirname, \"playground/A9/main.py\")\n        api_filename = os.path.join(dirname, \"playground/A9/api.py\")\n        f = open(log_filename,\"w\")\n        f.write(log_code)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.injection.request-data-write.request-data-write","path":"introduction/apis.py","start":{"line":65,"col":9,"offset":2554},"end":{"line":73,"col":26,"offset":2916},"extra":{"metavars":{"$DATA":{"start":{"line":65,"col":9,"offset":2554},"end":{"line":65,"col":17,"offset":2562},"abstract_content":"api_code"},"$W":{"start":{"line":65,"col":28,"offset":2573},"end":{"line":65,"col":32,"offset":2577},"abstract_content":"POST"},"$F":{"start":{"line":73,"col":9,"offset":2899},"end":{"line":73,"col":10,"offset":2900},"abstract_content":"f","propagated_value":{"svalue_start":{"line":72,"col":13,"offset":2868},"svalue_end":{"line":72,"col":35,"offset":2890},"svalue_abstract_content":"open(api_filename\"w\")"}}},"message":"Found user-controlled request data passed into '.write(...)'. This could be dangerous if a malicious actor is able to control data into sensitive files. For example, a malicious actor could force rolling of critical log files, or cause a denial-of-service by using up available disk space. Instead, ensure that request data is properly escaped or sanitized.","metadata":{"cwe":["CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')"],"owasp":["A03:2021 - Injection"],"category":"security","technology":["django"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Validation"],"source":"https://semgrep.dev/r/python.django.security.injection.request-data-write.request-data-write","shortlink":"https://sg.run/0Q6j","semgrep.dev":{"rule":{"origin":"community","r_id":9498,"rule_id":"ReUg5z","rv_id":946183,"url":"https://semgrep.dev/playground/r/zyTlkEY/python.django.security.injection.request-data-write.request-data-write","version_id":"zyTlkEY"}}},"severity":"WARNING","fingerprint":"389b5dda2e9be773649bb510fd6f13d489003311f98db6586b79854c3098639a59b3fa71c0f3d21118c6c00de5c31ba38e40cc3056ca0aa30218ad26d1f96741_0","lines":"        api_code = request.POST.get('api_code')\n        dirname = os.path.dirname(__file__)\n        log_filename = os.path.join(dirname, \"playground/A9/main.py\")\n        api_filename = os.path.join(dirname, \"playground/A9/api.py\")\n        f = open(log_filename,\"w\")\n        f.write(log_code)\n        f.close()\n        f = open(api_filename,\"w\")\n        f.write(api_code)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.csrf-exempt.no-csrf-exempt","path":"introduction/apis.py","start":{"line":93,"col":1,"offset":3617},"end":{"line":109,"col":60,"offset":4245},"extra":{"metavars":{"$R":{"start":{"line":94,"col":5,"offset":3634},"end":{"line":94,"col":23,"offset":3652},"abstract_content":"A7_disscussion_api"}},"message":"Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.","metadata":{"cwe":["CWE-352: Cross-Site Request Forgery (CSRF)"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["django"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt","shortlink":"https://sg.run/rd5e","semgrep.dev":{"rule":{"origin":"community","r_id":9469,"rule_id":"v8UnqO","rv_id":946139,"url":"https://semgrep.dev/playground/r/xyTqn6x/python.django.security.audit.csrf-exempt.no-csrf-exempt","version_id":"xyTqn6x"}}},"severity":"WARNING","fingerprint":"ffeb2d134aefc2f19a38d3f546112cb166327a14205f7ad6263f22a91836cbb702497984fa78f8810f5a33cc08e8f5ebd884e01932ab35d29ad834a7a23f18e0_0","lines":"@csrf_exempt\ndef A7_disscussion_api(request):\n    if request.method != 'POST':\n        return JsonResponse({\"message\":\"method not allowed\"},status = 405)\n\n    try:\n        code = request.POST.get('code')\n    except:\n        return JsonResponse({\"message\":\"missing code\"},status = 400)\n\n    search_snipet = \"AF_session_id.objects.get(sesssion_id = cookie).delete()\"\n    search_snipet2 = \"AF_session_id.objects.get(sesssion_id=cookie).delete()\"\n\n    if (search_snipet in code) or (search_snipet2 in code):\n        return JsonResponse({\"message\":\"success\"},status = 200)\n\n    return JsonResponse({\"message\":\"failure\"},status = 400)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.csrf-exempt.no-csrf-exempt","path":"introduction/apis.py","start":{"line":112,"col":1,"offset":4268},"end":{"line":123,"col":64,"offset":4736},"extra":{"metavars":{"$R":{"start":{"line":113,"col":5,"offset":4285},"end":{"line":113,"col":23,"offset":4303},"abstract_content":"A6_disscussion_api"}},"message":"Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.","metadata":{"cwe":["CWE-352: Cross-Site Request Forgery (CSRF)"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["django"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt","shortlink":"https://sg.run/rd5e","semgrep.dev":{"rule":{"origin":"community","r_id":9469,"rule_id":"v8UnqO","rv_id":946139,"url":"https://semgrep.dev/playground/r/xyTqn6x/python.django.security.audit.csrf-exempt.no-csrf-exempt","version_id":"xyTqn6x"}}},"severity":"WARNING","fingerprint":"877c489a52f15be13e30584b03ca34e1d3715584b02608de6d659ba7a9df51ec98b5ea74b1f166c71aba308a10391b951aba2848d1317a11ce1c95860a5ffb02_0","lines":"@csrf_exempt\ndef A6_disscussion_api(request):\n    test_bench = [\"Pillow==8.0.0\",\"PyJWT==2.4.0\",\"requests==2.28.0\",\"Django==4.0.4\"]\n    \n    try:\n        result = check_vuln(test_bench)\n        print(len(result))\n        if result:\n            return JsonResponse({\"message\":\"success\",\"vulns\":result},status = 200)\n        return JsonResponse({\"message\":\"failure\"},status = 400)\n    except Exception as e:\n        return JsonResponse({\"message\":\"failure\"},status = 400)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.csrf-exempt.no-csrf-exempt","path":"introduction/apis.py","start":{"line":125,"col":1,"offset":4738},"end":{"line":138,"col":60,"offset":5267},"extra":{"metavars":{"$R":{"start":{"line":126,"col":5,"offset":4755},"end":{"line":126,"col":25,"offset":4775},"abstract_content":"A6_disscussion_api_2"}},"message":"Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.","metadata":{"cwe":["CWE-352: Cross-Site Request Forgery (CSRF)"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["django"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt","shortlink":"https://sg.run/rd5e","semgrep.dev":{"rule":{"origin":"community","r_id":9469,"rule_id":"v8UnqO","rv_id":946139,"url":"https://semgrep.dev/playground/r/xyTqn6x/python.django.security.audit.csrf-exempt.no-csrf-exempt","version_id":"xyTqn6x"}}},"severity":"WARNING","fingerprint":"c361f237adbf5148745cf5fc72982323a355e01330d72810c8e2f64ce43520e119e884f6910767101afbff87c791d71dc92328079ee35b223a18404f39f82e28_0","lines":"@csrf_exempt\ndef A6_disscussion_api_2(request):\n    if request.method != 'POST':\n        return JsonResponse({\"message\":\"method not allowed\"},status = 405)\n    try:\n        code = request.POST.get('code')\n        dirname = os.path.dirname(__file__)\n        filename = os.path.join(dirname, \"playground/A6/utility.py\")\n        f = open(filename,\"w\")\n        f.write(code)\n        f.close()\n    except:\n        return JsonResponse({\"message\":\"missing code\"},status = 400)\n    return JsonResponse({\"message\":\"success\"},status = 200)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.injection.request-data-write.request-data-write","path":"introduction/apis.py","start":{"line":130,"col":9,"offset":4911},"end":{"line":134,"col":22,"offset":5108},"extra":{"metavars":{"$DATA":{"start":{"line":130,"col":9,"offset":4911},"end":{"line":130,"col":13,"offset":4915},"abstract_content":"code"},"$W":{"start":{"line":130,"col":24,"offset":4926},"end":{"line":130,"col":28,"offset":4930},"abstract_content":"POST"},"$F":{"start":{"line":134,"col":9,"offset":5095},"end":{"line":134,"col":10,"offset":5096},"abstract_content":"f","propagated_value":{"svalue_start":{"line":133,"col":13,"offset":5068},"svalue_end":{"line":133,"col":31,"offset":5086},"svalue_abstract_content":"open(filename\"w\")"}}},"message":"Found user-controlled request data passed into '.write(...)'. This could be dangerous if a malicious actor is able to control data into sensitive files. For example, a malicious actor could force rolling of critical log files, or cause a denial-of-service by using up available disk space. Instead, ensure that request data is properly escaped or sanitized.","metadata":{"cwe":["CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')"],"owasp":["A03:2021 - Injection"],"category":"security","technology":["django"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Validation"],"source":"https://semgrep.dev/r/python.django.security.injection.request-data-write.request-data-write","shortlink":"https://sg.run/0Q6j","semgrep.dev":{"rule":{"origin":"community","r_id":9498,"rule_id":"ReUg5z","rv_id":946183,"url":"https://semgrep.dev/playground/r/zyTlkEY/python.django.security.injection.request-data-write.request-data-write","version_id":"zyTlkEY"}}},"severity":"WARNING","fingerprint":"a842d7b67dbfe63c8e4c993c831da8e0cc61dc2faad67ac58b5ba5eceaa9bcc1dc35b19d72df9e1046644aec55b250228ab5bf434bbd9f79c5aa2c8f955b5c98_0","lines":"        code = request.POST.get('code')\n        dirname = os.path.dirname(__file__)\n        filename = os.path.join(dirname, \"playground/A6/utility.py\")\n        f = open(filename,\"w\")\n        f.write(code)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.md5-used-as-password.md5-used-as-password","path":"introduction/mitre.py","start":{"line":161,"col":20,"offset":4366},"end":{"line":161,"col":54,"offset":4400},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":33,"offset":32},"abstract_content":"md5(password.encode()).hexdigest"},"$FUNCTION":{"start":{"line":161,"col":20,"offset":4366},"end":{"line":161,"col":52,"offset":4398},"abstract_content":"md5(password.encode()).hexdigest"}},"message":"It looks like MD5 is used as a password hash. MD5 is not considered a secure password hash because it can be cracked by an attacker in a short amount of time. Use a suitable password hashing function such as scrypt. You can use `hashlib.scrypt`.","metadata":{"cwe":["CWE-327: Use of a Broken or Risky Cryptographic Algorithm"],"owasp":["A03:2017 - Sensitive Data Exposure","A02:2021 - Cryptographic Failures"],"references":["https://tools.ietf.org/html/rfc6151","https://crypto.stackexchange.com/questions/44151/how-does-the-flame-malware-take-advantage-of-md5-collision","https://pycryptodome.readthedocs.io/en/latest/src/hash/sha3_256.html","https://security.stackexchange.com/questions/211/how-to-securely-hash-passwords","https://github.com/returntocorp/semgrep-rules/issues/1609","https://docs.python.org/3/library/hashlib.html#hashlib.scrypt"],"category":"security","technology":["pycryptodome","hashlib","md5"],"subcategory":["vuln"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/python.lang.security.audit.md5-used-as-password.md5-used-as-password","shortlink":"https://sg.run/5DwD","semgrep.dev":{"rule":{"origin":"community","r_id":14703,"rule_id":"6JU1w1","rv_id":946368,"url":"https://semgrep.dev/playground/r/l4Tx9Rp/python.lang.security.audit.md5-used-as-password.md5-used-as-password","version_id":"l4Tx9Rp"}}},"severity":"WARNING","fingerprint":"ea767c6603d32dc3d96e5731f633cc610c95ac9f90faf72a5eb0e21a78fff39f36572b024d2acad0358d1304189093192e38d5bd2b594b94bc0300ef239cb15a_0","lines":"        password = md5(password.encode()).hexdigest()","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"introduction/mitre.py","start":{"line":161,"col":20,"offset":4366},"end":{"line":161,"col":23,"offset":4369}},"md5"]],"intermediate_vars":[],"taint_sink":["CliLoc",[{"path":"introduction/mitre.py","start":{"line":161,"col":20,"offset":4366},"end":{"line":161,"col":54,"offset":4400}},"md5(password.encode()).hexdigest()"]]},"engine_kind":"OSS"}},{"check_id":"python.jwt.security.jwt-hardcode.jwt-python-hardcoded-secret","path":"introduction/mitre.py","start":{"line":169,"col":22,"offset":4731},"end":{"line":169,"col":82,"offset":4791},"extra":{"metavars":{},"message":"Hardcoded JWT secret or private key is used. This is a Insufficiently Protected Credentials weakness: https://cwe.mitre.org/data/definitions/522.html Consider using an appropriate security mechanism to protect the credentials (e.g. keeping secrets in environment variables)","metadata":{"cwe":["CWE-522: Insufficiently Protected Credentials"],"owasp":["A02:2017 - Broken Authentication","A04:2021 - Insecure Design"],"references":["https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/"],"category":"security","technology":["jwt"],"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"HIGH","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/python.jwt.security.jwt-hardcode.jwt-python-hardcoded-secret","shortlink":"https://sg.run/l2E9","semgrep.dev":{"rule":{"origin":"community","r_id":9557,"rule_id":"X5U8P5","rv_id":1024162,"url":"https://semgrep.dev/playground/r/yeT2Rke/python.jwt.security.jwt-hardcode.jwt-python-hardcoded-secret","version_id":"yeT2Rke"}}},"severity":"ERROR","fingerprint":"2370c51025eb86f56be5eea7ffae165915ec39bf8f3572531071bd8dd2f42fb0d43b66fff9ea597dae9e20e54008a3cbac78fccc4c4e54da80e231907fbe1a5b_0","lines":"            cookie = jwt.encode(payload, 'csrf_vulneribility', algorithm='HS256')","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.pyjwt.python-pyjwt-hardcoded-secret.python-pyjwt-hardcoded-secret","path":"introduction/mitre.py","start":{"line":169,"col":22,"offset":4731},"end":{"line":169,"col":82,"offset":4791},"extra":{"metavars":{"$PAYLOAD":{"start":{"line":169,"col":33,"offset":4742},"end":{"line":169,"col":40,"offset":4749},"abstract_content":"payload"}},"message":"A secret is hard-coded in the application. Secrets stored in source code, such as credentials, identifiers, and other types of sensitive data, can be leaked and used by internal or external malicious actors. Use environment variables to securely provide credentials and other secrets or retrieve them from a secure vault or Hardware Security Module (HSM).","metadata":{"likelihood":"HIGH","impact":"MEDIUM","confidence":"HIGH","category":"security","subcategory":["vuln"],"cwe":["CWE-798: Use of Hard-coded Credentials"],"cwe2021-top25":true,"cwe2022-top25":true,"owasp":["A07:2021 - Identification and Authentication Failures"],"references":["https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html"],"technology":["pyjwt","jwt","secrets"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Hard-coded Secrets"],"source":"https://semgrep.dev/r/python.pyjwt.python-pyjwt-hardcoded-secret.python-pyjwt-hardcoded-secret","shortlink":"https://sg.run/pLOg","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":28362,"rule_id":"L1Ukno","rv_id":1152567,"url":"https://semgrep.dev/playground/r/YDTngZL/python.pyjwt.python-pyjwt-hardcoded-secret.python-pyjwt-hardcoded-secret","version_id":"YDTngZL"}}},"severity":"WARNING","fingerprint":"975cbb384c7aba9e7233ec22f499f26cd2b24ad9f0e68913ebf4cdbcb6210080f72b59f3e272c7dfea3acd72e87fa2b40464876b693f2008904ca82d005300db_0","lines":"            cookie = jwt.encode(payload, 'csrf_vulneribility', algorithm='HS256')","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.secure-cookies.django-secure-set-cookie","path":"introduction/mitre.py","start":{"line":171,"col":13,"offset":4864},"end":{"line":171,"col":56,"offset":4907},"extra":{"metavars":{},"message":"Django cookies should be handled securely by setting secure=True, httponly=True, and samesite='Lax' in response.set_cookie(...). If your situation calls for different settings, explicitly disable the setting. If you want to send the cookie over http, set secure=False. If you want to let client-side JavaScript read the cookie, set httponly=False. If you want to attach cookies to requests for external sites, set samesite=None.","metadata":{"cwe":["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"],"owasp":["A05:2021 - Security Misconfiguration"],"asvs":{"control_id":"3.4 Missing Cookie Attributes","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management","section":"V3: Session Management Verification Requirements","version":"4"},"references":["https://docs.djangoproject.com/en/3.0/ref/request-response/#django.http.HttpResponse.set_cookie","https://semgrep.dev/blog/2020/bento-check-keeping-cookies-safe-in-flask/","https://bento.dev/checks/flask/secure-set-cookie/"],"category":"security","technology":["django"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cookie Security"],"source":"https://semgrep.dev/r/python.django.security.audit.secure-cookies.django-secure-set-cookie","shortlink":"https://sg.run/x1WL","semgrep.dev":{"rule":{"origin":"community","r_id":9474,"rule_id":"7KUQ2E","rv_id":946145,"url":"https://semgrep.dev/playground/r/nWTpz3o/python.django.security.audit.secure-cookies.django-secure-set-cookie","version_id":"nWTpz3o"}}},"severity":"WARNING","fingerprint":"a3960b79e05a17a6a840a1f06dae5919adbf28488255add3e2bc5d4e89fcc5a276391ce6f8bc7b6e42080709eb4c95fcafb37bbe25993c341e658003949640cb_0","lines":"            response.set_cookie('auth_cookiee', cookie)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.csrf-exempt.no-csrf-exempt","path":"introduction/mitre.py","start":{"line":176,"col":1,"offset":5002},"end":{"line":189,"col":50,"offset":5599},"extra":{"metavars":{"$R":{"start":{"line":178,"col":5,"offset":5045},"end":{"line":178,"col":24,"offset":5064},"abstract_content":"csrf_transfer_monei"}},"message":"Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.","metadata":{"cwe":["CWE-352: Cross-Site Request Forgery (CSRF)"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["django"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt","shortlink":"https://sg.run/rd5e","semgrep.dev":{"rule":{"origin":"community","r_id":9469,"rule_id":"v8UnqO","rv_id":946139,"url":"https://semgrep.dev/playground/r/xyTqn6x/python.django.security.audit.csrf-exempt.no-csrf-exempt","version_id":"xyTqn6x"}}},"severity":"WARNING","fingerprint":"39c7284e78d57269272719f6d5d29d19368eefefd5b98495e114002485ad1f7466c76596368159d22fd550a637f1bd892dbeb2dc6f55ee720e359ebdb89507c0_0","lines":"@authentication_decorator\n@csrf_exempt\ndef csrf_transfer_monei(request):\n    if request.method == 'GET':\n        try:\n            cookie = request.COOKIES['auth_cookiee']\n            payload = jwt.decode(cookie, 'csrf_vulneribility', algorithms=['HS256'])\n            username = payload['username']\n            User = CSRF_user_tbl.objects.filter(username=username)\n            if not User:\n                redirect('/mitre/9/lab/login')\n            return render(request, 'mitre/csrf_dashboard.html', {'balance': User[0].balance})\n        except:\n            return redirect('/mitre/9/lab/login')","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.pyjwt.python-pyjwt-hardcoded-secret.python-pyjwt-hardcoded-secret","path":"introduction/mitre.py","start":{"line":182,"col":23,"offset":5195},"end":{"line":182,"col":85,"offset":5257},"extra":{"metavars":{"$PAYLOAD":{"start":{"line":182,"col":34,"offset":5206},"end":{"line":182,"col":40,"offset":5212},"abstract_content":"cookie","propagated_value":{"svalue_start":{"line":181,"col":22,"offset":5141},"svalue_end":{"line":181,"col":53,"offset":5172},"svalue_abstract_content":"request.COOKIES['auth_cookiee']"}}},"message":"A secret is hard-coded in the application. Secrets stored in source code, such as credentials, identifiers, and other types of sensitive data, can be leaked and used by internal or external malicious actors. Use environment variables to securely provide credentials and other secrets or retrieve them from a secure vault or Hardware Security Module (HSM).","metadata":{"likelihood":"HIGH","impact":"MEDIUM","confidence":"HIGH","category":"security","subcategory":["vuln"],"cwe":["CWE-798: Use of Hard-coded Credentials"],"cwe2021-top25":true,"cwe2022-top25":true,"owasp":["A07:2021 - Identification and Authentication Failures"],"references":["https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html"],"technology":["pyjwt","jwt","secrets"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Hard-coded Secrets"],"source":"https://semgrep.dev/r/python.pyjwt.python-pyjwt-hardcoded-secret.python-pyjwt-hardcoded-secret","shortlink":"https://sg.run/pLOg","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":28362,"rule_id":"L1Ukno","rv_id":1152567,"url":"https://semgrep.dev/playground/r/YDTngZL/python.pyjwt.python-pyjwt-hardcoded-secret.python-pyjwt-hardcoded-secret","version_id":"YDTngZL"}}},"severity":"WARNING","fingerprint":"4141293fd27ea9efd782de61cc5373842a362711965a31c27b797346d214a062c9dcb42c2c14a8fd29c8431eb0d1edcc6ddfadf04e75667838538c76cf5c31e6_0","lines":"            payload = jwt.decode(cookie, 'csrf_vulneribility', algorithms=['HS256'])","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.pyjwt.python-pyjwt-hardcoded-secret.python-pyjwt-hardcoded-secret","path":"introduction/mitre.py","start":{"line":194,"col":19,"offset":5754},"end":{"line":194,"col":81,"offset":5816},"extra":{"metavars":{"$PAYLOAD":{"start":{"line":194,"col":30,"offset":5765},"end":{"line":194,"col":36,"offset":5771},"abstract_content":"cookie","propagated_value":{"svalue_start":{"line":193,"col":18,"offset":5704},"svalue_end":{"line":193,"col":49,"offset":5735},"svalue_abstract_content":"request.COOKIES['auth_cookiee']"}}},"message":"A secret is hard-coded in the application. Secrets stored in source code, such as credentials, identifiers, and other types of sensitive data, can be leaked and used by internal or external malicious actors. Use environment variables to securely provide credentials and other secrets or retrieve them from a secure vault or Hardware Security Module (HSM).","metadata":{"likelihood":"HIGH","impact":"MEDIUM","confidence":"HIGH","category":"security","subcategory":["vuln"],"cwe":["CWE-798: Use of Hard-coded Credentials"],"cwe2021-top25":true,"cwe2022-top25":true,"owasp":["A07:2021 - Identification and Authentication Failures"],"references":["https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html"],"technology":["pyjwt","jwt","secrets"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Hard-coded Secrets"],"source":"https://semgrep.dev/r/python.pyjwt.python-pyjwt-hardcoded-secret.python-pyjwt-hardcoded-secret","shortlink":"https://sg.run/pLOg","semgrep.dev":{"rule":{"origin":"pro_rules","r_id":28362,"rule_id":"L1Ukno","rv_id":1152567,"url":"https://semgrep.dev/playground/r/YDTngZL/python.pyjwt.python-pyjwt-hardcoded-secret.python-pyjwt-hardcoded-secret","version_id":"YDTngZL"}}},"severity":"WARNING","fingerprint":"4141293fd27ea9efd782de61cc5373842a362711965a31c27b797346d214a062c9dcb42c2c14a8fd29c8431eb0d1edcc6ddfadf04e75667838538c76cf5c31e6_1","lines":"        payload = jwt.decode(cookie, 'csrf_vulneribility', algorithms=['HS256'])","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.csrf-exempt.no-csrf-exempt","path":"introduction/mitre.py","start":{"line":214,"col":1,"offset":6567},"end":{"line":221,"col":42,"offset":6829},"extra":{"metavars":{"$R":{"start":{"line":215,"col":5,"offset":6584},"end":{"line":215,"col":21,"offset":6600},"abstract_content":"mitre_lab_25_api"}},"message":"Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.","metadata":{"cwe":["CWE-352: Cross-Site Request Forgery (CSRF)"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["django"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt","shortlink":"https://sg.run/rd5e","semgrep.dev":{"rule":{"origin":"community","r_id":9469,"rule_id":"v8UnqO","rv_id":946139,"url":"https://semgrep.dev/playground/r/xyTqn6x/python.django.security.audit.csrf-exempt.no-csrf-exempt","version_id":"xyTqn6x"}}},"severity":"WARNING","fingerprint":"3bd08d07f3616b3e9fb1531618fc52c5173f3258ffce6cb8c8c6a85b20d8f0c0e9432654d88fd84e2c1b3d52df5efe34547ac3cbb2775b13942c51d51ff77286_0","lines":"@csrf_exempt\ndef mitre_lab_25_api(request):\n    if request.method == \"POST\":\n        expression = request.POST.get('expression')\n        result = eval(expression)\n        return JsonResponse({'result': result})\n    else:\n        return redirect('/mitre/25/lab/')","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.injection.code.user-eval.user-eval","path":"introduction/mitre.py","start":{"line":217,"col":9,"offset":6652},"end":{"line":218,"col":34,"offset":6729},"extra":{"metavars":{"$F":{"start":{"line":215,"col":5,"offset":6584},"end":{"line":215,"col":21,"offset":6600},"abstract_content":"mitre_lab_25_api"},"$V":{"start":{"line":217,"col":9,"offset":6652},"end":{"line":217,"col":19,"offset":6662},"abstract_content":"expression"},"$W":{"start":{"line":217,"col":30,"offset":6673},"end":{"line":217,"col":34,"offset":6677},"abstract_content":"POST"}},"message":"Found user data in a call to 'eval'. This is extremely dangerous because it can enable an attacker to execute arbitrary remote code on the system. Instead, refactor your code to not use 'eval' and instead use a safe library for the specific functionality you need.","metadata":{"cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"owasp":["A03:2021 - Injection"],"references":["https://nedbatchelder.com/blog/201206/eval_really_is_dangerous.html","https://owasp.org/www-community/attacks/Code_Injection"],"category":"security","technology":["django"],"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"HIGH","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/python.django.security.injection.code.user-eval.user-eval","shortlink":"https://sg.run/PJDW","semgrep.dev":{"rule":{"origin":"community","r_id":9501,"rule_id":"DbUpDQ","rv_id":946166,"url":"https://semgrep.dev/playground/r/l4Tx9EO/python.django.security.injection.code.user-eval.user-eval","version_id":"l4Tx9EO"}}},"severity":"WARNING","fingerprint":"16b058d7ce6382ab0004c866a6a81acbf09d97a7c629401bcf9e23d20e1315c8c515f63b2d7681d8db31381c241e24d5d7aa9d60197813dcb410d069e8ca8566_0","lines":"        expression = request.POST.get('expression')\n        result = eval(expression)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.eval-detected.eval-detected","path":"introduction/mitre.py","start":{"line":218,"col":18,"offset":6713},"end":{"line":218,"col":34,"offset":6729},"extra":{"metavars":{},"message":"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval","cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"owasp":["A03:2021 - Injection"],"asvs":{"control_id":"5.2.4 Dyanmic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements","section":"V5: Validation, Sanitization and Encoding Verification Requirements","version":"4"},"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected","shortlink":"https://sg.run/ZvrD","semgrep.dev":{"rule":{"origin":"community","r_id":9635,"rule_id":"gxU149","rv_id":946341,"url":"https://semgrep.dev/playground/r/xyTqnr7/python.lang.security.audit.eval-detected.eval-detected","version_id":"xyTqnr7"}}},"severity":"WARNING","fingerprint":"3a71a35bf3f477d805112137ed91deb1b379944439526a46e8f0de4ab242f93bc35b7c7cf21445e6db092f47eabeba5310c234d55ae46117df24b606e96ffbe2_0","lines":"        result = eval(expression)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","path":"introduction/mitre.py","start":{"line":233,"col":47,"offset":7120},"end":{"line":233,"col":51,"offset":7124},"extra":{"metavars":{"$FUNC":{"start":{"line":233,"col":26,"offset":7099},"end":{"line":233,"col":31,"offset":7104},"abstract_content":"Popen"},"$TRUE":{"start":{"line":233,"col":47,"offset":7120},"end":{"line":233,"col":51,"offset":7124},"abstract_content":"True"}},"message":"Found 'subprocess' function 'Popen' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.","fix":"False","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html","owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["secure default"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","shortlink":"https://sg.run/J92w","semgrep.dev":{"rule":{"origin":"community","r_id":9646,"rule_id":"DbUpz2","rv_id":946382,"url":"https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","version_id":"YDTvReW"}}},"severity":"ERROR","fingerprint":"3c960c552411d7d480542af0c5342d109b3bafef7de8d208a05c7b344e4e813f7dd620a183d2f5be79aec41d0062806f487fa5cf03095333fd233c420bedbef7_0","lines":"    process = subprocess.Popen(command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.csrf-exempt.no-csrf-exempt","path":"introduction/mitre.py","start":{"line":237,"col":1,"offset":7213},"end":{"line":247,"col":88,"offset":7654},"extra":{"metavars":{"$R":{"start":{"line":238,"col":5,"offset":7230},"end":{"line":238,"col":21,"offset":7246},"abstract_content":"mitre_lab_17_api"}},"message":"Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.","metadata":{"cwe":["CWE-352: Cross-Site Request Forgery (CSRF)"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["django"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt","shortlink":"https://sg.run/rd5e","semgrep.dev":{"rule":{"origin":"community","r_id":9469,"rule_id":"v8UnqO","rv_id":946139,"url":"https://semgrep.dev/playground/r/xyTqn6x/python.django.security.audit.csrf-exempt.no-csrf-exempt","version_id":"xyTqn6x"}}},"severity":"WARNING","fingerprint":"45d758bdbcd1fc9963b1838f952e5b5df3318f5e34eccf72f4be5a470db7789abc82a69f138c1a939614255039bfbb5dea1521f10669ebe0d77b2f3c3102d063_0","lines":"@csrf_exempt\ndef mitre_lab_17_api(request):\n    if request.method == \"POST\":\n        ip = request.POST.get('ip')\n        command = \"nmap \" + ip \n        res, err = command_out(command)\n        res = res.decode()\n        err = err.decode()\n        pattern = \"STATE SERVICE.*\\\\n\\\\n\"\n        ports = re.findall(pattern, res,re.DOTALL)[0][14:-2].split('\\n')\n        return JsonResponse({'raw_res': str(res), 'raw_err': str(err), 'ports': ports})","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.csrf-exempt.no-csrf-exempt","path":"introduction/playground/A9/api.py","start":{"line":7,"col":1,"offset":121},"end":{"line":33,"col":71,"offset":1601},"extra":{"metavars":{"$R":{"start":{"line":8,"col":5,"offset":139},"end":{"line":8,"col":24,"offset":158},"abstract_content":"log_function_target"}},"message":"Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.","metadata":{"cwe":["CWE-352: Cross-Site Request Forgery (CSRF)"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["django"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt","shortlink":"https://sg.run/rd5e","semgrep.dev":{"rule":{"origin":"community","r_id":9469,"rule_id":"v8UnqO","rv_id":946139,"url":"https://semgrep.dev/playground/r/xyTqn6x/python.django.security.audit.csrf-exempt.no-csrf-exempt","version_id":"xyTqn6x"}}},"severity":"WARNING","fingerprint":"6414d84080647287a56ac40ac539e68d14c7df967fc0d430285e7a1a2d485a3b5f84f9e7900818229c68e4be2b5033521be955f655d1a7e07a0e96512db79679_0","lines":"@csrf_exempt\ndef log_function_target(request):\n    L = Log(request)\n    if request.method == \"GET\":\n        L.info(\"GET request\")\n        return JsonResponse({\"message\":\"normal get request\", \"method\":\"get\"},status = 200)\n    if request.method == \"POST\":\n        username = request.POST['username']\n        password = request.POST['password']\n        L.info(f\"POST request with username {username} and password {password}\")\n        if username == \"admin\" and password == \"admin\":\n            return JsonResponse({\"message\":\"Loged in successfully\", \"method\":\"post\"},status = 200)\n        return JsonResponse({\"message\":\"Invalid credentials\", \"method\":\"post\"},status = 401)\n    if request.method == \"PUT\":\n        L.info(\"PUT request\")\n        return JsonResponse({\"message\":\"success\", \"method\":\"put\"},status = 200)\n    if request.method == \"DELETE\":\n        if request.user.is_authenticated:\n            return JsonResponse({\"message\":\"User is authenticated\", \"method\":\"delete\"},status = 200)\n        L.error(\"DELETE request\")\n        return JsonResponse({\"message\":\"permission denied\", \"method\":\"delete\"},status = 200)\n    if request.method == \"PATCH\":\n        L.info(\"PATCH request\")\n        return JsonResponse({\"message\":\"success\", \"method\":\"patch\"},status = 200)\n    if request.method == \"UPDATE\":\n        return JsonResponse({\"message\":\"success\", \"method\":\"update\"},status = 200)\n    return JsonResponse({\"message\":\"method not allowed\"},status = 403)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.csrf-exempt.no-csrf-exempt","path":"introduction/playground/A9/archive.py","start":{"line":7,"col":1,"offset":115},"end":{"line":33,"col":71,"offset":1569},"extra":{"metavars":{"$R":{"start":{"line":8,"col":5,"offset":132},"end":{"line":8,"col":24,"offset":151},"abstract_content":"log_function_target"}},"message":"Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.","metadata":{"cwe":["CWE-352: Cross-Site Request Forgery (CSRF)"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["django"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt","shortlink":"https://sg.run/rd5e","semgrep.dev":{"rule":{"origin":"community","r_id":9469,"rule_id":"v8UnqO","rv_id":946139,"url":"https://semgrep.dev/playground/r/xyTqn6x/python.django.security.audit.csrf-exempt.no-csrf-exempt","version_id":"xyTqn6x"}}},"severity":"WARNING","fingerprint":"64ffeff6e27b31d8497884023fbeff139351912240b637560f45d7958cee1df2c903c2d03ae5802e7f0f47694f9406709620b4606c6de7d674f80efbcd8ca660_0","lines":"@csrf_exempt\ndef log_function_target(request):\n    L = Log(request)\n    if request.method == \"GET\":\n        L.info(\"GET request\")\n        return JsonResponse({\"message\":\"normal get request\", \"method\":\"get\"},status = 200)\n    if request.method == \"POST\":\n        username = request.POST['username']\n        password = request.POST['password']\n        L.info(f\"POST request with username {username} and password {password}\")\n        if username == \"admin\" and password == \"admin\":\n            return JsonResponse({\"message\":\"Loged in successfully\", \"method\":\"post\"},status = 200)\n        return JsonResponse({\"message\":\"Invalid credentials\", \"method\":\"post\"},status = 401)\n    if request.method == \"PUT\":\n        L.info(\"PUT request\")\n        return JsonResponse({\"message\":\"success\", \"method\":\"put\"},status = 200)\n    if request.method == \"DELETE\":\n        if request.user.is_authenticated:\n            return JsonResponse({\"message\":\"User is authenticated\", \"method\":\"delete\"},status = 200)\n        L.error(\"DELETE request\")\n        return JsonResponse({\"message\":\"permission denied\", \"method\":\"delete\"},status = 200)\n    if request.method == \"PATCH\":\n        L.info(\"PATCH request\")\n        return JsonResponse({\"message\":\"success\", \"method\":\"patch\"},status = 200)\n    if request.method == \"UPDATE\":\n        return JsonResponse({\"message\":\"success\", \"method\":\"update\"},status = 200)\n    return JsonResponse({\"message\":\"method not allowed\"},status = 403)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.secrets.security.detected-jwt-token.detected-jwt-token","path":"introduction/static/js/a7.js","start":{"line":4,"col":116,"offset":228},"end":{"line":4,"col":210,"offset":322},"extra":{"metavars":{},"message":"JWT token detected","metadata":{"source-rule-url":"https://github.com/Yelp/detect-secrets/blob/master/detect_secrets/plugins/jwt.py","category":"security","technology":["secrets","jwt"],"confidence":"LOW","references":["https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/"],"cwe":["CWE-321: Use of Hard-coded Cryptographic Key"],"owasp":["A02:2021 - Cryptographic Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/generic.secrets.security.detected-jwt-token.detected-jwt-token","shortlink":"https://sg.run/05N5","semgrep.dev":{"rule":{"origin":"community","r_id":12854,"rule_id":"kxU8E8","rv_id":945504,"url":"https://semgrep.dev/playground/r/PkTQZeN/generic.secrets.security.detected-jwt-token.detected-jwt-token","version_id":"PkTQZeN"}}},"severity":"ERROR","fingerprint":"9f143409c967066b678bea31ceb920fff27645a353fda40e50dbfd0e86a02d14790a51eb2a38927c27846bd489a39442a2216cc7c261efadca487f3e4a583e8a_0","lines":"    // myHeaders.append(\"Cookie\", \"csrftoken=5fVOTXh2HNahtvJFJNRSrKkwPAgPM9YCHlrCGprAxhAAKOUWMxqMnWm8BUomv0Yd; jwt=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6MSwiZXhwIjoxNjUzMzEzMDIxLCJpYXQiOjE2NTMzMDk0MjF9.dh2gfP9wKD8GKu1J-jVs2jJUYMgKu_kMaJjrD0hHP-I\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.secrets.security.detected-jwt-token.detected-jwt-token","path":"introduction/static/js/a9.js","start":{"line":18,"col":113,"offset":617},"end":{"line":18,"col":207,"offset":711},"extra":{"metavars":{},"message":"JWT token detected","metadata":{"source-rule-url":"https://github.com/Yelp/detect-secrets/blob/master/detect_secrets/plugins/jwt.py","category":"security","technology":["secrets","jwt"],"confidence":"LOW","references":["https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/"],"cwe":["CWE-321: Use of Hard-coded Cryptographic Key"],"owasp":["A02:2021 - Cryptographic Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/generic.secrets.security.detected-jwt-token.detected-jwt-token","shortlink":"https://sg.run/05N5","semgrep.dev":{"rule":{"origin":"community","r_id":12854,"rule_id":"kxU8E8","rv_id":945504,"url":"https://semgrep.dev/playground/r/PkTQZeN/generic.secrets.security.detected-jwt-token.detected-jwt-token","version_id":"PkTQZeN"}}},"severity":"ERROR","fingerprint":"0351a53c7214f89703a7cc24715480943a60ed50d72da59e97d12aa1c5e04865467ebc64a72baa3b03905e2e22d643c7f522774fa1f1549899e2319b4823631a_0","lines":"    myHeaders.append(\"Cookie\", \"csrftoken=5fVOTXh2HNahtvJFJNRSrKkwPAgPM9YCHlrCGprAxhAAKOUWMxqMnWm8BUomv0Yd; jwt=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6MSwiZXhwIjoxNjUzMzEzMDIxLCJpYXQiOjE2NTMzMDk0MjF9.dh2gfP9wKD8GKu1J-jVs2jJUYMgKu_kMaJjrD0hHP-I\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.browser.security.insecure-document-method.insecure-document-method","path":"introduction/static/js/a9.js","start":{"line":40,"col":13,"offset":1518},"end":{"line":40,"col":41,"offset":1546},"extra":{"metavars":{"$EL":{"start":{"line":40,"col":13,"offset":1518},"end":{"line":40,"col":15,"offset":1520},"abstract_content":"li","propagated_value":{"svalue_start":{"line":39,"col":22,"offset":1476},"svalue_end":{"line":39,"col":50,"offset":1504},"svalue_abstract_content":"document.createElement(\"li\")"}},"$HTML":{"start":{"line":40,"col":28,"offset":1533},"end":{"line":40,"col":40,"offset":1545},"abstract_content":"data.logs[i]"}},"message":"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"category":"security","technology":["browser"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","references":["https://owasp.org/Top10/A03_2021-Injection"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method","shortlink":"https://sg.run/LwA9","semgrep.dev":{"rule":{"origin":"community","r_id":9239,"rule_id":"ReUg41","rv_id":945779,"url":"https://semgrep.dev/playground/r/zyTlk9P/javascript.browser.security.insecure-document-method.insecure-document-method","version_id":"zyTlk9P"}}},"severity":"ERROR","fingerprint":"63620f765169ad1354b15660d21643db72743148ee1726cc300d851696edc64e7b1c13e1c8fc7370dec33b49d8ce21acfebfa65c6463275d962d410138239ec8_0","lines":"            li.innerHTML = data.logs[i];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.django-no-csrf-token.django-no-csrf-token","path":"introduction/templates/Lab/A9/a9_lab.html","start":{"line":10,"col":5,"offset":220},"end":{"line":14,"col":12,"offset":423},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":5,"offset":4},"abstract_content":"post"},"$METHOD":{"start":{"line":10,"col":49,"offset":264},"end":{"line":10,"col":53,"offset":268},"abstract_content":"post"}},"message":"Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.","metadata":{"category":"security","cwe":"CWE-352: Cross-Site Request Forgery (CSRF)","references":["https://docs.djangoproject.com/en/4.2/howto/csrf/"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"MEDIUM","subcategory":["audit"],"technology":["django"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token","shortlink":"https://sg.run/N0Bp","semgrep.dev":{"rule":{"origin":"community","r_id":73471,"rule_id":"PeUyYG","rv_id":946160,"url":"https://semgrep.dev/playground/r/BjT1NRl/python.django.security.django-no-csrf-token.django-no-csrf-token","version_id":"BjT1NRl"}}},"severity":"WARNING","fingerprint":"39c24f28fe90fc823aef79becd1f7b7fbaa8f97246336a42976ff05d9f37317692e299d3d38ce39fe4a6b404656f8e28f62216c8fbb5e442c82cdd1eda8eaae3_0","lines":"    <form enctype=\"multipart/form-data\" method=\"post\" action=\"/a9_lab\">\n        <input type=\"file\" name=\"file\"><br>\n        <br>\n        <button class=\"btn btn-info\" type=\"submit\">Upload</button>\n    </form>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.django-no-csrf-token.django-no-csrf-token","path":"introduction/templates/Lab/A9/a9_lab2.html","start":{"line":21,"col":5,"offset":609},"end":{"line":25,"col":12,"offset":973},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":5,"offset":4},"abstract_content":"POST"},"$METHOD":{"start":{"line":21,"col":63,"offset":667},"end":{"line":21,"col":67,"offset":671},"abstract_content":"POST"}},"message":"Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.","metadata":{"category":"security","cwe":"CWE-352: Cross-Site Request Forgery (CSRF)","references":["https://docs.djangoproject.com/en/4.2/howto/csrf/"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"MEDIUM","subcategory":["audit"],"technology":["django"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token","shortlink":"https://sg.run/N0Bp","semgrep.dev":{"rule":{"origin":"community","r_id":73471,"rule_id":"PeUyYG","rv_id":946160,"url":"https://semgrep.dev/playground/r/BjT1NRl/python.django.security.django-no-csrf-token.django-no-csrf-token","version_id":"BjT1NRl"}}},"severity":"WARNING","fingerprint":"cd257c73794366c1e7c0c9f9f077ba5189201e42bd59d651e143a14d2245b349fcf2dea544e90340798983e1e56293e76297317360358cb68d8cda04aeba9fba_0","lines":"    <form enctype=\"multipart/form-data\" id=\"a9_form2\" method=\"POST\" style=\"display: flex;flex-direction: column;align-items: center;margin-bottom: 50px;\">\n        <input type=\"file\" name=\"file\" id=\"a9_file\" />\n        <input type=\"text\" name=\"function\" id=\"a9_function\" placeholder=\"function\"/>\n        <button type=\"submit\" id=\"a9_submit\" >Submit</button>\n    </form><br><br>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.django-no-csrf-token.django-no-csrf-token","path":"introduction/templates/Lab/BrokenAccess/ba_lab.html","start":{"line":11,"col":9,"offset":271},"end":{"line":18,"col":16,"offset":592},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":5,"offset":4},"abstract_content":"post"},"$METHOD":{"start":{"line":11,"col":23,"offset":285},"end":{"line":11,"col":27,"offset":289},"abstract_content":"post"}},"message":"Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.","metadata":{"category":"security","cwe":"CWE-352: Cross-Site Request Forgery (CSRF)","references":["https://docs.djangoproject.com/en/4.2/howto/csrf/"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"MEDIUM","subcategory":["audit"],"technology":["django"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token","shortlink":"https://sg.run/N0Bp","semgrep.dev":{"rule":{"origin":"community","r_id":73471,"rule_id":"PeUyYG","rv_id":946160,"url":"https://semgrep.dev/playground/r/BjT1NRl/python.django.security.django-no-csrf-token.django-no-csrf-token","version_id":"BjT1NRl"}}},"severity":"WARNING","fingerprint":"689059ffed525598c0d311633e06afdba2fba5311c13caee1561644ad3d13758303cba8ece4c17fe42f96593c5cfe5df393c8c96820e0fa1d9e5125566e09111_0","lines":"        <form method=\"post\" action=\"/ba_lab\">\n\n            <input id=\"input\" type=\"text\" name=\"name\" placeholder=\"User Name\"><br>\n            <input id=\"input\" type=\"password\" name=\"pass\" placeholder=\"Password\"><br>\n            <button style=\"margin-top:20px\" class=\"btn btn-info\" type=\"submit\"> Log in</button>\n\n\n        </form>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.django-no-csrf-token.django-no-csrf-token","path":"introduction/templates/Lab/BrokenAuth/otp.html","start":{"line":18,"col":5,"offset":495},"end":{"line":22,"col":12,"offset":733},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":5,"offset":4},"abstract_content":"post"},"$METHOD":{"start":{"line":18,"col":19,"offset":509},"end":{"line":18,"col":23,"offset":513},"abstract_content":"post"}},"message":"Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.","metadata":{"category":"security","cwe":"CWE-352: Cross-Site Request Forgery (CSRF)","references":["https://docs.djangoproject.com/en/4.2/howto/csrf/"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"MEDIUM","subcategory":["audit"],"technology":["django"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token","shortlink":"https://sg.run/N0Bp","semgrep.dev":{"rule":{"origin":"community","r_id":73471,"rule_id":"PeUyYG","rv_id":946160,"url":"https://semgrep.dev/playground/r/BjT1NRl/python.django.security.django-no-csrf-token.django-no-csrf-token","version_id":"BjT1NRl"}}},"severity":"WARNING","fingerprint":"8e7dd730eacf0de1effe8a64f292d3448ec57670547e2d3ce6492ebde073ae8aaec217216c1f1ea921e58761461e3958cabe1ec5ebff9e624e432fe14adbbfca_0","lines":"    <form method=\"post\" action=\"/otp\">\n        <label for='enter'>Enter Your OTP:</label>\n        <input id=\"enter\" type=\"number\" maxlength=\"3\" name=\"otp\"><br><br>\n        <button class=\"btn btn-info\" type=\"submit\">Log in</button>\n    </form>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.django-no-csrf-token.django-no-csrf-token","path":"introduction/templates/Lab/CMD/cmd_lab.html","start":{"line":9,"col":9,"offset":237},"end":{"line":16,"col":16,"offset":698},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":5,"offset":4},"abstract_content":"post"},"$METHOD":{"start":{"line":9,"col":23,"offset":251},"end":{"line":9,"col":27,"offset":255},"abstract_content":"post"}},"message":"Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.","metadata":{"category":"security","cwe":"CWE-352: Cross-Site Request Forgery (CSRF)","references":["https://docs.djangoproject.com/en/4.2/howto/csrf/"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"MEDIUM","subcategory":["audit"],"technology":["django"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token","shortlink":"https://sg.run/N0Bp","semgrep.dev":{"rule":{"origin":"community","r_id":73471,"rule_id":"PeUyYG","rv_id":946160,"url":"https://semgrep.dev/playground/r/BjT1NRl/python.django.security.django-no-csrf-token.django-no-csrf-token","version_id":"BjT1NRl"}}},"severity":"WARNING","fingerprint":"1914fc2fb2842c92d5c41d19fa38165c3eff14446209f565f0d78f2abc341835fc260d6034b24d18dff5b85b90c4d26c50e173236671fe6a0c45512acc96bc14_0","lines":"        <form method=\"post\" action=\"/cmd_lab\">\n            <input type=\"text\" name=\"domain\" placeholder=\"Enter Domain Here\"><br><br>\n            <input type=\"radio\" id=\"linux\" name=\"os\" value=\"linux\">\n            <label for=\"linux\">Linux</label>\n            <input type=\"radio\" id=\"windows\" name=\"os\" value=\"win\">\n            <label for=\"windows\">Windows</label><br>\n            <button class=\"btn btn-info\" type=\"submit\" style=\"align:right\">GO</button>\n        </form>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.django-no-csrf-token.django-no-csrf-token","path":"introduction/templates/Lab/CMD/cmd_lab2.html","start":{"line":9,"col":9,"offset":242},"end":{"line":12,"col":16,"offset":454},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":5,"offset":4},"abstract_content":"post"},"$METHOD":{"start":{"line":9,"col":23,"offset":256},"end":{"line":9,"col":27,"offset":260},"abstract_content":"post"}},"message":"Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.","metadata":{"category":"security","cwe":"CWE-352: Cross-Site Request Forgery (CSRF)","references":["https://docs.djangoproject.com/en/4.2/howto/csrf/"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"MEDIUM","subcategory":["audit"],"technology":["django"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token","shortlink":"https://sg.run/N0Bp","semgrep.dev":{"rule":{"origin":"community","r_id":73471,"rule_id":"PeUyYG","rv_id":946160,"url":"https://semgrep.dev/playground/r/BjT1NRl/python.django.security.django-no-csrf-token.django-no-csrf-token","version_id":"BjT1NRl"}}},"severity":"WARNING","fingerprint":"2f38b15704c7322f83c9b194a0103a57a3cb1873e06d60b2910ff30b53ce4d8e6e0c54b73ddc35a43b9136b25bd9b60a614e282e23490e507077ab521133c912_0","lines":"        <form method=\"post\" action=\"/cmd_lab2\">\n            <input type=\"text\" name=\"val\" placeholder=\"eg. 7*7\"><br><br>\n            <center><button class=\"btn btn-info\" type=\"submit\">GO</button></center>\n        </form>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.django-no-csrf-token.django-no-csrf-token","path":"introduction/templates/Lab/ssrf/ssrf_discussion.html","start":{"line":125,"col":5,"offset":9611},"end":{"line":129,"col":12,"offset":9848},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":5,"offset":4},"abstract_content":"post"},"$METHOD":{"start":{"line":125,"col":19,"offset":9625},"end":{"line":125,"col":23,"offset":9629},"abstract_content":"post"}},"message":"Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.","metadata":{"category":"security","cwe":"CWE-352: Cross-Site Request Forgery (CSRF)","references":["https://docs.djangoproject.com/en/4.2/howto/csrf/"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"MEDIUM","subcategory":["audit"],"technology":["django"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token","shortlink":"https://sg.run/N0Bp","semgrep.dev":{"rule":{"origin":"community","r_id":73471,"rule_id":"PeUyYG","rv_id":946160,"url":"https://semgrep.dev/playground/r/BjT1NRl/python.django.security.django-no-csrf-token.django-no-csrf-token","version_id":"BjT1NRl"}}},"severity":"WARNING","fingerprint":"ca2008bb3a5ab33ce4dc3d90bec934025699c5a00d9f45dbc6c3f4a280668147cb6bcb1d3cf3423e3ae47a48f4d5171a9d05383f8d750dac10c5adce877a4976_0","lines":"    <form method=\"post\" action=\"/ssrf_lab\">\n        {&#37; csrf_token &#37;}\n        <input type=\"hidden\" name=\"blog\" value=\"templates/Lab/ssrf/blogs/blog1.txt\">\n        <button type=\"submit\" class=\"btn btn-info\"> Blog1 </button>\n    </form>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.django-no-csrf-token.django-no-csrf-token","path":"introduction/templates/Lab/ssrf/ssrf_discussion.html","start":{"line":130,"col":5,"offset":9853},"end":{"line":134,"col":12,"offset":10090},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":5,"offset":4},"abstract_content":"post"},"$METHOD":{"start":{"line":130,"col":19,"offset":9867},"end":{"line":130,"col":23,"offset":9871},"abstract_content":"post"}},"message":"Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.","metadata":{"category":"security","cwe":"CWE-352: Cross-Site Request Forgery (CSRF)","references":["https://docs.djangoproject.com/en/4.2/howto/csrf/"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"MEDIUM","subcategory":["audit"],"technology":["django"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token","shortlink":"https://sg.run/N0Bp","semgrep.dev":{"rule":{"origin":"community","r_id":73471,"rule_id":"PeUyYG","rv_id":946160,"url":"https://semgrep.dev/playground/r/BjT1NRl/python.django.security.django-no-csrf-token.django-no-csrf-token","version_id":"BjT1NRl"}}},"severity":"WARNING","fingerprint":"ca2008bb3a5ab33ce4dc3d90bec934025699c5a00d9f45dbc6c3f4a280668147cb6bcb1d3cf3423e3ae47a48f4d5171a9d05383f8d750dac10c5adce877a4976_1","lines":"    <form method=\"post\" action=\"/ssrf_lab\">\n        {&#37; csrf_token &#37;}\n        <input type=\"hidden\" name=\"blog\" value=\"templates/Lab/ssrf/blogs/blog2.txt\">\n        <button type=\"submit\" class=\"btn btn-info\"> Blog2 </button>\n    </form>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.django-no-csrf-token.django-no-csrf-token","path":"introduction/templates/Lab/ssrf/ssrf_discussion.html","start":{"line":135,"col":5,"offset":10095},"end":{"line":139,"col":12,"offset":10332},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":5,"offset":4},"abstract_content":"post"},"$METHOD":{"start":{"line":135,"col":19,"offset":10109},"end":{"line":135,"col":23,"offset":10113},"abstract_content":"post"}},"message":"Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.","metadata":{"category":"security","cwe":"CWE-352: Cross-Site Request Forgery (CSRF)","references":["https://docs.djangoproject.com/en/4.2/howto/csrf/"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"MEDIUM","subcategory":["audit"],"technology":["django"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token","shortlink":"https://sg.run/N0Bp","semgrep.dev":{"rule":{"origin":"community","r_id":73471,"rule_id":"PeUyYG","rv_id":946160,"url":"https://semgrep.dev/playground/r/BjT1NRl/python.django.security.django-no-csrf-token.django-no-csrf-token","version_id":"BjT1NRl"}}},"severity":"WARNING","fingerprint":"ca2008bb3a5ab33ce4dc3d90bec934025699c5a00d9f45dbc6c3f4a280668147cb6bcb1d3cf3423e3ae47a48f4d5171a9d05383f8d750dac10c5adce877a4976_2","lines":"    <form method=\"post\" action=\"/ssrf_lab\">\n        {&#37; csrf_token &#37;}\n        <input type=\"hidden\" name=\"blog\" value=\"templates/Lab/ssrf/blogs/blog3.txt\">\n        <button type=\"submit\" class=\"btn btn-info\"> Blog3 </button>\n    </form>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.django-no-csrf-token.django-no-csrf-token","path":"introduction/templates/Lab/ssrf/ssrf_discussion.html","start":{"line":140,"col":5,"offset":10337},"end":{"line":144,"col":12,"offset":10574},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":5,"offset":4},"abstract_content":"post"},"$METHOD":{"start":{"line":140,"col":19,"offset":10351},"end":{"line":140,"col":23,"offset":10355},"abstract_content":"post"}},"message":"Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.","metadata":{"category":"security","cwe":"CWE-352: Cross-Site Request Forgery (CSRF)","references":["https://docs.djangoproject.com/en/4.2/howto/csrf/"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"MEDIUM","subcategory":["audit"],"technology":["django"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token","shortlink":"https://sg.run/N0Bp","semgrep.dev":{"rule":{"origin":"community","r_id":73471,"rule_id":"PeUyYG","rv_id":946160,"url":"https://semgrep.dev/playground/r/BjT1NRl/python.django.security.django-no-csrf-token.django-no-csrf-token","version_id":"BjT1NRl"}}},"severity":"WARNING","fingerprint":"ca2008bb3a5ab33ce4dc3d90bec934025699c5a00d9f45dbc6c3f4a280668147cb6bcb1d3cf3423e3ae47a48f4d5171a9d05383f8d750dac10c5adce877a4976_3","lines":"    <form method=\"post\" action=\"/ssrf_lab\">\n        {&#37; csrf_token &#37;}\n        <input type=\"hidden\" name=\"blog\" value=\"templates/Lab/ssrf/blogs/blog4.txt\">\n        <button type=\"submit\" class=\"btn btn-info\"> Blog4 </button>\n    </form>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.django-no-csrf-token.django-no-csrf-token","path":"introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_1.html","start":{"line":11,"col":9,"offset":271},"end":{"line":18,"col":16,"offset":605},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":5,"offset":4},"abstract_content":"post"},"$METHOD":{"start":{"line":11,"col":23,"offset":285},"end":{"line":11,"col":27,"offset":289},"abstract_content":"post"}},"message":"Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.","metadata":{"category":"security","cwe":"CWE-352: Cross-Site Request Forgery (CSRF)","references":["https://docs.djangoproject.com/en/4.2/howto/csrf/"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"MEDIUM","subcategory":["audit"],"technology":["django"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token","shortlink":"https://sg.run/N0Bp","semgrep.dev":{"rule":{"origin":"community","r_id":73471,"rule_id":"PeUyYG","rv_id":946160,"url":"https://semgrep.dev/playground/r/BjT1NRl/python.django.security.django-no-csrf-token.django-no-csrf-token","version_id":"BjT1NRl"}}},"severity":"WARNING","fingerprint":"d1f213b8b60b4da1e500e01b90728dc4ede017dfca6e40def70543e278b5b1f015cc46ca7684ef1b5b82664573a8b2099e0c157117ce9162937f3e860a82a73b_0","lines":"        <form method=\"post\" action=\"/broken_access_lab_1\">\n\n            <input id=\"input\" type=\"text\" name=\"name\" placeholder=\"User Name\"><br>\n            <input id=\"input\" type=\"password\" name=\"pass\" placeholder=\"Password\"><br>\n            <button style=\"margin-top:20px\" class=\"btn btn-info\" type=\"submit\"> Log in</button>\n\n\n        </form>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.django-no-csrf-token.django-no-csrf-token","path":"introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_2.html","start":{"line":11,"col":9,"offset":295},"end":{"line":18,"col":16,"offset":629},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":5,"offset":4},"abstract_content":"post"},"$METHOD":{"start":{"line":11,"col":23,"offset":309},"end":{"line":11,"col":27,"offset":313},"abstract_content":"post"}},"message":"Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.","metadata":{"category":"security","cwe":"CWE-352: Cross-Site Request Forgery (CSRF)","references":["https://docs.djangoproject.com/en/4.2/howto/csrf/"],"confidence":"MEDIUM","likelihood":"MEDIUM","impact":"MEDIUM","subcategory":["audit"],"technology":["django"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token","shortlink":"https://sg.run/N0Bp","semgrep.dev":{"rule":{"origin":"community","r_id":73471,"rule_id":"PeUyYG","rv_id":946160,"url":"https://semgrep.dev/playground/r/BjT1NRl/python.django.security.django-no-csrf-token.django-no-csrf-token","version_id":"BjT1NRl"}}},"severity":"WARNING","fingerprint":"e38c316b557fb586af36f2c890371456e6fe286dfc9959cc9232fff2f28244c6948cf2bfa736d6c7bef94f6f6476706f8bf9b52d0cac6e5c3c007994e44e78ff_0","lines":"        <form method=\"post\" action=\"/broken_access_lab_2\">\n\n            <input id=\"input\" type=\"text\" name=\"name\" placeholder=\"User Name\"><br>\n            <input id=\"input\" type=\"password\" name=\"pass\" placeholder=\"Password\"><br>\n            <button style=\"margin-top:20px\" class=\"btn btn-info\" type=\"submit\"> Log in</button>\n\n\n        </form>","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.injection.tainted-sql-string.tainted-sql-string","path":"introduction/views.py","start":{"line":157,"col":29,"offset":4878},"end":{"line":157,"col":112,"offset":4961},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":7,"offset":6},"abstract_content":"SELECT"},"$ANYTHING":{"start":{"line":149,"col":22,"offset":4722},"end":{"line":149,"col":26,"offset":4726},"abstract_content":"POST"},"$SQLSTR":{"start":{"line":157,"col":30,"offset":4879},"end":{"line":157,"col":75,"offset":4924},"abstract_content":"SELECT * FROM introduction_login WHERE user='"}},"message":"Detected user input used to manually construct a SQL string. This is usually bad practice because manual construction could accidentally result in a SQL injection. An attacker could use a SQL injection to steal or modify contents of the database. Instead, use a parameterized query which is available by default in most database engines. Alternatively, consider using the Django object-relational mappers (ORM) instead of raw SQL queries.","metadata":{"cwe":["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"references":["https://docs.djangoproject.com/en/3.0/topics/security/#sql-injection-protection"],"category":"security","technology":["django"],"subcategory":["audit"],"impact":"LOW","likelihood":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Mass Assignment"],"source":"https://semgrep.dev/r/python.django.security.injection.tainted-sql-string.tainted-sql-string","shortlink":"https://sg.run/PbZp","semgrep.dev":{"rule":{"origin":"community","r_id":14701,"rule_id":"lBU8Ad","rv_id":946190,"url":"https://semgrep.dev/playground/r/yeT0nKx/python.django.security.injection.tainted-sql-string.tainted-sql-string","version_id":"yeT0nKx"}}},"severity":"ERROR","fingerprint":"96056686594b4c1d3f50b576a48f3f6f4afaf5298c805304b9b3b0d5cdb69a57d06fddf8ea40241d6f2b9bf2a901b2563861d962f13a2b334b8bf349c0c3b67a_0","lines":"                sql_query = \"SELECT * FROM introduction_login WHERE user='\"+name+\"'AND password='\"+password+\"'\"","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"introduction/views.py","start":{"line":149,"col":14,"offset":4714},"end":{"line":149,"col":26,"offset":4726}},"request.POST"]],"intermediate_vars":[{"location":{"path":"introduction/views.py","start":{"line":149,"col":9,"offset":4709},"end":{"line":149,"col":13,"offset":4713}},"content":"name"}],"taint_sink":["CliLoc",[{"path":"introduction/views.py","start":{"line":157,"col":29,"offset":4878},"end":{"line":157,"col":112,"offset":4961}},"\"SELECT * FROM introduction_login WHERE user='\"+name+\"'AND password='\"+password+\"'\""]]},"engine_kind":"OSS"}},{"check_id":"python.django.security.audit.raw-query.avoid-raw-sql","path":"introduction/views.py","start":{"line":161,"col":25,"offset":5080},"end":{"line":161,"col":53,"offset":5108},"extra":{"metavars":{"$MODEL":{"start":{"line":161,"col":25,"offset":5080},"end":{"line":161,"col":30,"offset":5085},"abstract_content":"login login login"},"$QUERY":{"start":{"line":161,"col":43,"offset":5098},"end":{"line":161,"col":52,"offset":5107},"abstract_content":"sql_query","propagated_value":{"svalue_start":{"line":157,"col":29,"offset":4878},"svalue_end":{"line":157,"col":112,"offset":4961},"svalue_abstract_content":"\"SELECT * FROM introduction_login WHERE user='\"+name+\"'AND password='\"+password+\"'\""}}},"message":"Detected the use of 'RawSQL' or 'raw' indicating the execution of a non-parameterized SQL query. This could lead to a SQL injection and therefore protected information could be leaked. Instead, use Django ORM and parameterized queries before raw SQL. An example of using the Django ORM is: `People.objects.get(name='Bob')`","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b611_django_rawsql_used.html","cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://docs.djangoproject.com/en/3.0/ref/models/expressions/#raw-sql-expressions","https://semgrep.dev/blog/2020/preventing-sql-injection-a-django-authors-perspective/"],"category":"security","technology":["django"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/python.django.security.audit.raw-query.avoid-raw-sql","shortlink":"https://sg.run/weDA","semgrep.dev":{"rule":{"origin":"community","r_id":9473,"rule_id":"EwU2JA","rv_id":946144,"url":"https://semgrep.dev/playground/r/ZRT35bN/python.django.security.audit.raw-query.avoid-raw-sql","version_id":"ZRT35bN"}}},"severity":"WARNING","fingerprint":"97b9e056085549aa69dadfe9acc2c89198dab6994e7a4143713acc170392ff70b6efe7eaa69ef6ab9df0c08ae6b198a7fc2affe677c2ba8311e7337df580cd74_0","lines":"                    val=login.objects.raw(sql_query)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.deserialization.pickle.avoid-pickle","path":"introduction/views.py","start":{"line":201,"col":16,"offset":6444},"end":{"line":201,"col":40,"offset":6468},"extra":{"metavars":{"$FUNC":{"start":{"line":201,"col":23,"offset":6451},"end":{"line":201,"col":28,"offset":6456},"abstract_content":"dumps"}},"message":"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle","shortlink":"https://sg.run/OPwB","semgrep.dev":{"rule":{"origin":"community","r_id":9675,"rule_id":"EwU2BJ","rv_id":946397,"url":"https://semgrep.dev/playground/r/w8TKJL9/python.lang.security.deserialization.pickle.avoid-pickle","version_id":"w8TKJL9"}}},"severity":"WARNING","fingerprint":"a8718d5941cddbb4f3f2b7d4f80d4ddb9dd12abeb6306e98f6f051e5199f97e3d0ae15577e082a8f6d0d1b0b5d0e13dd194dc3ebac179c7cde2b98e976740345_0","lines":"pickled_user = pickle.dumps(TestUser())","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.secure-cookies.django-secure-set-cookie","path":"introduction/views.py","start":{"line":210,"col":13,"offset":6813},"end":{"line":210,"col":73,"offset":6873},"extra":{"metavars":{},"message":"Django cookies should be handled securely by setting secure=True, httponly=True, and samesite='Lax' in response.set_cookie(...). If your situation calls for different settings, explicitly disable the setting. If you want to send the cookie over http, set secure=False. If you want to let client-side JavaScript read the cookie, set httponly=False. If you want to attach cookies to requests for external sites, set samesite=None.","metadata":{"cwe":["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"],"owasp":["A05:2021 - Security Misconfiguration"],"asvs":{"control_id":"3.4 Missing Cookie Attributes","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management","section":"V3: Session Management Verification Requirements","version":"4"},"references":["https://docs.djangoproject.com/en/3.0/ref/request-response/#django.http.HttpResponse.set_cookie","https://semgrep.dev/blog/2020/bento-check-keeping-cookies-safe-in-flask/","https://bento.dev/checks/flask/secure-set-cookie/"],"category":"security","technology":["django"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cookie Security"],"source":"https://semgrep.dev/r/python.django.security.audit.secure-cookies.django-secure-set-cookie","shortlink":"https://sg.run/x1WL","semgrep.dev":{"rule":{"origin":"community","r_id":9474,"rule_id":"7KUQ2E","rv_id":946145,"url":"https://semgrep.dev/playground/r/nWTpz3o/python.django.security.audit.secure-cookies.django-secure-set-cookie","version_id":"nWTpz3o"}}},"severity":"WARNING","fingerprint":"4a12be3f5be8ead04f8329320b40ec0c70019d6e16f8bfdd41b6621b02d41bcb2d3a2784f9a93411a279f279343b6ce1d2950093cbbc23f0a55809fb9f32a4d4_0","lines":"            response.set_cookie(key='token',value=token.decode('utf-8'))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.avoid-insecure-deserialization.avoid-insecure-deserialization","path":"introduction/views.py","start":{"line":213,"col":21,"offset":6952},"end":{"line":213,"col":40,"offset":6971},"extra":{"metavars":{"$INSIDE":{"start":{"line":204,"col":5,"offset":6520},"end":{"line":204,"col":18,"offset":6533},"abstract_content":"insec_des_lab"},"$PARAM":{"start":{"line":204,"col":19,"offset":6534},"end":{"line":204,"col":26,"offset":6541},"abstract_content":"request"},"$REQFUNC":{"start":{"line":207,"col":25,"offset":6721},"end":{"line":207,"col":32,"offset":6728},"abstract_content":"COOKIES"},"$PICKLEFUNC":{"start":{"line":213,"col":28,"offset":6959},"end":{"line":213,"col":33,"offset":6964},"abstract_content":"loads"}},"message":"Avoid using insecure deserialization library, backed by `pickle`, `_pickle`, `cpickle`, `dill`, `shelve`, or `yaml`, which are known to lead to remote code execution vulnerabilities.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["django"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.django.security.audit.avoid-insecure-deserialization.avoid-insecure-deserialization","shortlink":"https://sg.run/9oyr","semgrep.dev":{"rule":{"origin":"community","r_id":9467,"rule_id":"OrU3e6","rv_id":946137,"url":"https://semgrep.dev/playground/r/kbTYkJR/python.django.security.audit.avoid-insecure-deserialization.avoid-insecure-deserialization","version_id":"kbTYkJR"}}},"severity":"ERROR","fingerprint":"6afd3de860be660079ffdea91808b7bd19861619ab2d850b5233695189c043a97873f674cb51da6153616c0d07e07607389507ef460d0d27ff369679efbf9654_0","lines":"            admin = pickle.loads(token)","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"introduction/views.py","start":{"line":207,"col":17,"offset":6713},"end":{"line":207,"col":45,"offset":6741}},"request.COOKIES.get('token')"]],"intermediate_vars":[{"location":{"path":"introduction/views.py","start":{"line":207,"col":9,"offset":6705},"end":{"line":207,"col":14,"offset":6710}},"content":"token"}],"taint_sink":["CliLoc",[{"path":"introduction/views.py","start":{"line":213,"col":21,"offset":6952},"end":{"line":213,"col":40,"offset":6971}},"pickle.loads(token)"]]},"engine_kind":"OSS"}},{"check_id":"python.lang.security.deserialization.pickle.avoid-pickle","path":"introduction/views.py","start":{"line":213,"col":21,"offset":6952},"end":{"line":213,"col":40,"offset":6971},"extra":{"metavars":{"$FUNC":{"start":{"line":213,"col":28,"offset":6959},"end":{"line":213,"col":33,"offset":6964},"abstract_content":"loads"}},"message":"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle","shortlink":"https://sg.run/OPwB","semgrep.dev":{"rule":{"origin":"community","r_id":9675,"rule_id":"EwU2BJ","rv_id":946397,"url":"https://semgrep.dev/playground/r/w8TKJL9/python.lang.security.deserialization.pickle.avoid-pickle","version_id":"w8TKJL9"}}},"severity":"WARNING","fingerprint":"2e66761d8bcdeeccc02a513374680f9a85d9855ec839abb13aa5756474e976bc03456a7edaa05b12f3852465afb5fe7c45383c3d75cb6d3cfae55e34a06451fe_0","lines":"            admin = pickle.loads(token)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.csrf-exempt.no-csrf-exempt","path":"introduction/views.py","start":{"line":238,"col":1,"offset":7659},"end":{"line":246,"col":33,"offset":7905},"extra":{"metavars":{"$R":{"start":{"line":239,"col":5,"offset":7676},"end":{"line":239,"col":12,"offset":7683},"abstract_content":"xxe_see"}},"message":"Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.","metadata":{"cwe":["CWE-352: Cross-Site Request Forgery (CSRF)"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["django"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt","shortlink":"https://sg.run/rd5e","semgrep.dev":{"rule":{"origin":"community","r_id":9469,"rule_id":"v8UnqO","rv_id":946139,"url":"https://semgrep.dev/playground/r/xyTqn6x/python.django.security.audit.csrf-exempt.no-csrf-exempt","version_id":"xyTqn6x"}}},"severity":"WARNING","fingerprint":"44bbf262277c0f2622f3ae76a1f05df2417644c4b37d15a0dec33189fb77173bace0bbd16dcb4f0010a1e2c456175423527a43cbea4443eba5fe1616232e46db_0","lines":"@csrf_exempt\ndef xxe_see(request):\n    if request.user.is_authenticated:\n\n        data=comments.objects.all()\n        com=data[0].comment\n        return render(request,'Lab/XXE/xxe_lab.html',{\"com\":com})\n    else:\n        return redirect('login')","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.csrf-exempt.no-csrf-exempt","path":"introduction/views.py","start":{"line":249,"col":1,"offset":7908},"end":{"line":264,"col":51,"offset":8459},"extra":{"metavars":{"$R":{"start":{"line":250,"col":5,"offset":7925},"end":{"line":250,"col":14,"offset":7934},"abstract_content":"xxe_parse"}},"message":"Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.","metadata":{"cwe":["CWE-352: Cross-Site Request Forgery (CSRF)"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["django"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt","shortlink":"https://sg.run/rd5e","semgrep.dev":{"rule":{"origin":"community","r_id":9469,"rule_id":"v8UnqO","rv_id":946139,"url":"https://semgrep.dev/playground/r/xyTqn6x/python.django.security.audit.csrf-exempt.no-csrf-exempt","version_id":"xyTqn6x"}}},"severity":"WARNING","fingerprint":"cdf9672bc3f7e69a2b03d003c14cbe3da0d32cf91db748ddda0f2c682f88cefd2dd99fc1139686e54cd8c4f9222dce4d67bca5a37ac1be223e392c6a16dd82fe_0","lines":"@csrf_exempt\ndef xxe_parse(request):\n\n    parser = make_parser()\n    parser.setFeature(feature_external_ges, True)\n    doc = parseString(request.body.decode('utf-8'), parser=parser)\n    for event, node in doc:\n        if event == START_ELEMENT and node.tagName == 'text':\n            doc.expandNode(node)\n            text = node.toxml()\n    startInd = text.find('>')\n    endInd = text.find('<', startInd)\n    text = text[startInd + 1:endInd:]\n    p=comments.objects.filter(id=1).update(comment=text)\n\n    return render(request, 'Lab/XXE/xxe_lab.html')","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse","path":"introduction/views.py","start":{"line":284,"col":28,"offset":9215},"end":{"line":284,"col":50,"offset":9237},"extra":{"metavars":{},"message":"Detected data rendered directly to the end user via 'HttpResponse' or a similar object. This bypasses Django's built-in cross-site scripting (XSS) defenses and could result in an XSS vulnerability. Use Django's template engine to safely render HTML.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://docs.djangoproject.com/en/3.1/intro/tutorial03/#a-shortcut-render","https://docs.djangoproject.com/en/3.1/topics/http/shortcuts/#render"],"category":"security","technology":["django"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse","shortlink":"https://sg.run/EknN","semgrep.dev":{"rule":{"origin":"community","r_id":9481,"rule_id":"PeUZgE","rv_id":946150,"url":"https://semgrep.dev/playground/r/gETe1K0/python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse","version_id":"gETe1K0"}}},"severity":"WARNING","fingerprint":"ecdb18cf7b07cc98ef9f53a5c39eef5cffe7ca167f0e6e2cbdb42f5c35d4b702ddb93acce08ad802d34c6164f349a5cb0995c2327292b5f1666b643006580779_0","lines":"                response = HttpResponse(rendered)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.secure-cookies.django-secure-set-cookie","path":"introduction/views.py","start":{"line":285,"col":17,"offset":9254},"end":{"line":285,"col":105,"offset":9342},"extra":{"metavars":{},"message":"Django cookies should be handled securely by setting secure=True, httponly=True, and samesite='Lax' in response.set_cookie(...). If your situation calls for different settings, explicitly disable the setting. If you want to send the cookie over http, set secure=False. If you want to let client-side JavaScript read the cookie, set httponly=False. If you want to attach cookies to requests for external sites, set samesite=None.","metadata":{"cwe":["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"],"owasp":["A05:2021 - Security Misconfiguration"],"asvs":{"control_id":"3.4 Missing Cookie Attributes","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management","section":"V3: Session Management Verification Requirements","version":"4"},"references":["https://docs.djangoproject.com/en/3.0/ref/request-response/#django.http.HttpResponse.set_cookie","https://semgrep.dev/blog/2020/bento-check-keeping-cookies-safe-in-flask/","https://bento.dev/checks/flask/secure-set-cookie/"],"category":"security","technology":["django"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cookie Security"],"source":"https://semgrep.dev/r/python.django.security.audit.secure-cookies.django-secure-set-cookie","shortlink":"https://sg.run/x1WL","semgrep.dev":{"rule":{"origin":"community","r_id":9474,"rule_id":"7KUQ2E","rv_id":946145,"url":"https://semgrep.dev/playground/r/nWTpz3o/python.django.security.audit.secure-cookies.django-secure-set-cookie","version_id":"nWTpz3o"}}},"severity":"WARNING","fingerprint":"4a12be3f5be8ead04f8329320b40ec0c70019d6e16f8bfdd41b6621b02d41bcb2d3a2784f9a93411a279f279343b6ce1d2950093cbbc23f0a55809fb9f32a4d4_1","lines":"                response.set_cookie('userid', obj.userid, max_age=31449600, samesite=None, secure=False)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse","path":"introduction/views.py","start":{"line":298,"col":24,"offset":10008},"end":{"line":298,"col":46,"offset":10030},"extra":{"metavars":{},"message":"Detected data rendered directly to the end user via 'HttpResponse' or a similar object. This bypasses Django's built-in cross-site scripting (XSS) defenses and could result in an XSS vulnerability. Use Django's template engine to safely render HTML.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://docs.djangoproject.com/en/3.1/intro/tutorial03/#a-shortcut-render","https://docs.djangoproject.com/en/3.1/topics/http/shortcuts/#render"],"category":"security","technology":["django"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse","shortlink":"https://sg.run/EknN","semgrep.dev":{"rule":{"origin":"community","r_id":9481,"rule_id":"PeUZgE","rv_id":946150,"url":"https://semgrep.dev/playground/r/gETe1K0/python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse","version_id":"gETe1K0"}}},"severity":"WARNING","fingerprint":"ecdb18cf7b07cc98ef9f53a5c39eef5cffe7ca167f0e6e2cbdb42f5c35d4b702ddb93acce08ad802d34c6164f349a5cb0995c2327292b5f1666b643006580779_1","lines":"            response = HttpResponse(rendered)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.secure-cookies.django-secure-set-cookie","path":"introduction/views.py","start":{"line":299,"col":13,"offset":10043},"end":{"line":299,"col":101,"offset":10131},"extra":{"metavars":{},"message":"Django cookies should be handled securely by setting secure=True, httponly=True, and samesite='Lax' in response.set_cookie(...). If your situation calls for different settings, explicitly disable the setting. If you want to send the cookie over http, set secure=False. If you want to let client-side JavaScript read the cookie, set httponly=False. If you want to attach cookies to requests for external sites, set samesite=None.","metadata":{"cwe":["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"],"owasp":["A05:2021 - Security Misconfiguration"],"asvs":{"control_id":"3.4 Missing Cookie Attributes","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management","section":"V3: Session Management Verification Requirements","version":"4"},"references":["https://docs.djangoproject.com/en/3.0/ref/request-response/#django.http.HttpResponse.set_cookie","https://semgrep.dev/blog/2020/bento-check-keeping-cookies-safe-in-flask/","https://bento.dev/checks/flask/secure-set-cookie/"],"category":"security","technology":["django"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cookie Security"],"source":"https://semgrep.dev/r/python.django.security.audit.secure-cookies.django-secure-set-cookie","shortlink":"https://sg.run/x1WL","semgrep.dev":{"rule":{"origin":"community","r_id":9474,"rule_id":"7KUQ2E","rv_id":946145,"url":"https://semgrep.dev/playground/r/nWTpz3o/python.django.security.audit.secure-cookies.django-secure-set-cookie","version_id":"nWTpz3o"}}},"severity":"WARNING","fingerprint":"4a12be3f5be8ead04f8329320b40ec0c70019d6e16f8bfdd41b6621b02d41bcb2d3a2784f9a93411a279f279343b6ce1d2950093cbbc23f0a55809fb9f32a4d4_2","lines":"            response.set_cookie('userid', obj.userid, max_age=31449600, samesite=None, secure=False)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse","path":"introduction/views.py","start":{"line":312,"col":28,"offset":10750},"end":{"line":312,"col":50,"offset":10772},"extra":{"metavars":{},"message":"Detected data rendered directly to the end user via 'HttpResponse' or a similar object. This bypasses Django's built-in cross-site scripting (XSS) defenses and could result in an XSS vulnerability. Use Django's template engine to safely render HTML.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://docs.djangoproject.com/en/3.1/intro/tutorial03/#a-shortcut-render","https://docs.djangoproject.com/en/3.1/topics/http/shortcuts/#render"],"category":"security","technology":["django"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse","shortlink":"https://sg.run/EknN","semgrep.dev":{"rule":{"origin":"community","r_id":9481,"rule_id":"PeUZgE","rv_id":946150,"url":"https://semgrep.dev/playground/r/gETe1K0/python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse","version_id":"gETe1K0"}}},"severity":"WARNING","fingerprint":"ecdb18cf7b07cc98ef9f53a5c39eef5cffe7ca167f0e6e2cbdb42f5c35d4b702ddb93acce08ad802d34c6164f349a5cb0995c2327292b5f1666b643006580779_2","lines":"                response = HttpResponse(rendered)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.secure-cookies.django-secure-set-cookie","path":"introduction/views.py","start":{"line":313,"col":17,"offset":10789},"end":{"line":313,"col":105,"offset":10877},"extra":{"metavars":{},"message":"Django cookies should be handled securely by setting secure=True, httponly=True, and samesite='Lax' in response.set_cookie(...). If your situation calls for different settings, explicitly disable the setting. If you want to send the cookie over http, set secure=False. If you want to let client-side JavaScript read the cookie, set httponly=False. If you want to attach cookies to requests for external sites, set samesite=None.","metadata":{"cwe":["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"],"owasp":["A05:2021 - Security Misconfiguration"],"asvs":{"control_id":"3.4 Missing Cookie Attributes","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management","section":"V3: Session Management Verification Requirements","version":"4"},"references":["https://docs.djangoproject.com/en/3.0/ref/request-response/#django.http.HttpResponse.set_cookie","https://semgrep.dev/blog/2020/bento-check-keeping-cookies-safe-in-flask/","https://bento.dev/checks/flask/secure-set-cookie/"],"category":"security","technology":["django"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cookie Security"],"source":"https://semgrep.dev/r/python.django.security.audit.secure-cookies.django-secure-set-cookie","shortlink":"https://sg.run/x1WL","semgrep.dev":{"rule":{"origin":"community","r_id":9474,"rule_id":"7KUQ2E","rv_id":946145,"url":"https://semgrep.dev/playground/r/nWTpz3o/python.django.security.audit.secure-cookies.django-secure-set-cookie","version_id":"nWTpz3o"}}},"severity":"WARNING","fingerprint":"4a12be3f5be8ead04f8329320b40ec0c70019d6e16f8bfdd41b6621b02d41bcb2d3a2784f9a93411a279f279343b6ce1d2950093cbbc23f0a55809fb9f32a4d4_3","lines":"                response.set_cookie('userid', obj.userid, max_age=31449600, samesite=None, secure=False)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse","path":"introduction/views.py","start":{"line":323,"col":16,"offset":11333},"end":{"line":323,"col":38,"offset":11355},"extra":{"metavars":{},"message":"Detected data rendered directly to the end user via 'HttpResponse' or a similar object. This bypasses Django's built-in cross-site scripting (XSS) defenses and could result in an XSS vulnerability. Use Django's template engine to safely render HTML.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"references":["https://docs.djangoproject.com/en/3.1/intro/tutorial03/#a-shortcut-render","https://docs.djangoproject.com/en/3.1/topics/http/shortcuts/#render"],"category":"security","technology":["django"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse","shortlink":"https://sg.run/EknN","semgrep.dev":{"rule":{"origin":"community","r_id":9481,"rule_id":"PeUZgE","rv_id":946150,"url":"https://semgrep.dev/playground/r/gETe1K0/python.django.security.audit.xss.direct-use-of-httpresponse.direct-use-of-httpresponse","version_id":"gETe1K0"}}},"severity":"WARNING","fingerprint":"ecdb18cf7b07cc98ef9f53a5c39eef5cffe7ca167f0e6e2cbdb42f5c35d4b702ddb93acce08ad802d34c6164f349a5cb0995c2327292b5f1666b643006580779_3","lines":"    response = HttpResponse(rendered)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.csrf-exempt.no-csrf-exempt","path":"introduction/views.py","start":{"line":329,"col":1,"offset":11566},"end":{"line":334,"col":33,"offset":11734},"extra":{"metavars":{"$R":{"start":{"line":330,"col":5,"offset":11583},"end":{"line":330,"col":7,"offset":11585},"abstract_content":"ba"}},"message":"Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.","metadata":{"cwe":["CWE-352: Cross-Site Request Forgery (CSRF)"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["django"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt","shortlink":"https://sg.run/rd5e","semgrep.dev":{"rule":{"origin":"community","r_id":9469,"rule_id":"v8UnqO","rv_id":946139,"url":"https://semgrep.dev/playground/r/xyTqn6x/python.django.security.audit.csrf-exempt.no-csrf-exempt","version_id":"xyTqn6x"}}},"severity":"WARNING","fingerprint":"feaf12476ff893432ebe0db525c31ca7c359f29837754a6419a2f623ab3722353f7c76c1ddded78ecf6baa8cfbbf4787c34023db4907a6e24e54507a4fa70861_0","lines":"@csrf_exempt\ndef ba(request):\n    if request.user.is_authenticated:\n        return render(request,\"Lab/BrokenAccess/ba.html\")\n    else:\n        return redirect('login')","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.csrf-exempt.no-csrf-exempt","path":"introduction/views.py","start":{"line":335,"col":1,"offset":11735},"end":{"line":375,"col":33,"offset":13278},"extra":{"metavars":{"$R":{"start":{"line":336,"col":5,"offset":11752},"end":{"line":336,"col":11,"offset":11758},"abstract_content":"ba_lab"}},"message":"Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.","metadata":{"cwe":["CWE-352: Cross-Site Request Forgery (CSRF)"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["django"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt","shortlink":"https://sg.run/rd5e","semgrep.dev":{"rule":{"origin":"community","r_id":9469,"rule_id":"v8UnqO","rv_id":946139,"url":"https://semgrep.dev/playground/r/xyTqn6x/python.django.security.audit.csrf-exempt.no-csrf-exempt","version_id":"xyTqn6x"}}},"severity":"WARNING","fingerprint":"8e222532117b46dd5aca3d0f01ee82d19abb9dd9209105bcbf94029566cf9d85c25a1d3c454e6d6ec3aadd386eff5278c1c4d6ad55f52f8ff4ac9ac480d5ec32_0","lines":"@csrf_exempt\ndef ba_lab(request):\n    if request.user.is_authenticated:\n        name = request.POST.get('name')\n        password = request.POST.get('pass')\n        if name:\n            if request.COOKIES.get('admin') == \"1\":\n                return render(\n                    request, \n                    'Lab/BrokenAccess/ba_lab.html', \n                    {\n                        \"data\":\"0NLY_F0R_4DM1N5\",\n                        \"username\": \"admin\"\n                    })\n            elif login.objects.filter(user='admin',password=password):\n                html = render(\n                    request, \n                    'Lab/BrokenAccess/ba_lab.html', \n                    {\n                        \"data\":\"0NLY_F0R_4DM1N5\",\n                        \"username\": \"admin\"\n                    })\n                html.set_cookie(\"admin\", \"1\",max_age=200)\n                return html\n            elif login.objects.filter(user=name,password=password):\n                html = render(\n                request, \n                'Lab/BrokenAccess/ba_lab.html', \n                {\n                    \"not_admin\":\"No Secret key for this User\",\n                    \"username\": name\n                })\n                html.set_cookie(\"admin\", \"0\",max_age=200)\n                return html\n            else:\n                return render(request, 'Lab/BrokenAccess/ba_lab.html', {\"data\": \"User Not Found\"})\n\n        else:\n            return render(request,'Lab/BrokenAccess/ba_lab.html',{\"no_creds\":True})\n    else:\n        return redirect('login')","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.csrf-exempt.no-csrf-exempt","path":"introduction/views.py","start":{"line":408,"col":1,"offset":14280},"end":{"line":443,"col":33,"offset":15680},"extra":{"metavars":{"$R":{"start":{"line":409,"col":5,"offset":14297},"end":{"line":409,"col":12,"offset":14304},"abstract_content":"cmd_lab"}},"message":"Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.","metadata":{"cwe":["CWE-352: Cross-Site Request Forgery (CSRF)"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["django"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt","shortlink":"https://sg.run/rd5e","semgrep.dev":{"rule":{"origin":"community","r_id":9469,"rule_id":"v8UnqO","rv_id":946139,"url":"https://semgrep.dev/playground/r/xyTqn6x/python.django.security.audit.csrf-exempt.no-csrf-exempt","version_id":"xyTqn6x"}}},"severity":"WARNING","fingerprint":"2b50e5583de0310dc0118436d7f56ecbfafef069ec53226bdc089aa06142b85407cc318aa89afd17a9247137f87d67e58138051123ccaa10b98d740130a06687_0","lines":"@csrf_exempt\ndef cmd_lab(request):\n    if request.user.is_authenticated:\n        if(request.method==\"POST\"):\n            domain=request.POST.get('domain')\n            domain=domain.replace(\"https://www.\",'')\n            os=request.POST.get('os')\n            print(os)\n            if(os=='win'):\n                command=\"nslookup {}\".format(domain)\n            else:\n                command = \"dig {}\".format(domain)\n            \n            try:\n                # output=subprocess.check_output(command,shell=True,encoding=\"UTF-8\")\n                process = subprocess.Popen(\n                    command,\n                    shell=True,\n                    stdout=subprocess.PIPE, \n                    stderr=subprocess.PIPE)\n                stdout, stderr = process.communicate()\n                data = stdout.decode('utf-8')\n                stderr = stderr.decode('utf-8')\n                # res = json.loads(data)\n                # print(\"Stdout\\n\" + data)\n                output = data + stderr\n                print(data + stderr)\n            except:\n                output = \"Something went wrong\"\n                return render(request,'Lab/CMD/cmd_lab.html',{\"output\":output})\n            print(output)\n            return render(request,'Lab/CMD/cmd_lab.html',{\"output\":output})\n        else:\n            return render(request, 'Lab/CMD/cmd_lab.html')\n    else:\n        return redirect('login')","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.injection.command.subprocess-injection.subprocess-injection","path":"introduction/views.py","start":{"line":423,"col":27,"offset":14838},"end":{"line":427,"col":44,"offset":15005},"extra":{"metavars":{"$FUNC":{"start":{"line":409,"col":5,"offset":14297},"end":{"line":409,"col":12,"offset":14304},"abstract_content":"cmd_lab"},"$REQUEST":{"start":{"line":409,"col":13,"offset":14305},"end":{"line":409,"col":20,"offset":14312},"abstract_content":"request"}},"message":"Detected user input entering a `subprocess` call unsafely. This could result in a command injection vulnerability. An attacker could use this vulnerability to execute arbitrary commands on the host, which allows them to download malware, scan sensitive data, or run any command they wish on the server. Do not let users choose the command to run. In general, prefer to use Python API versions of system commands. If you must use subprocess, use a dictionary to allowlist a set of commands.","metadata":{"category":"security","technology":["flask"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://semgrep.dev/docs/cheat-sheets/python-command-injection/"],"confidence":"HIGH","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"HIGH","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.django.security.injection.command.subprocess-injection.subprocess-injection","shortlink":"https://sg.run/49BE","semgrep.dev":{"rule":{"origin":"community","r_id":31144,"rule_id":"EwUepx","rv_id":946170,"url":"https://semgrep.dev/playground/r/GxTP71A/python.django.security.injection.command.subprocess-injection.subprocess-injection","version_id":"GxTP71A"}}},"severity":"ERROR","fingerprint":"94611d943987a0d7f75afc843d39653c4ade5d2aedc527f96b426d960163cb2a1870d9e6b1fed79c92cc9a9843458348cbcdd152d51665133f63850bd8e67788_0","lines":"                process = subprocess.Popen(\n                    command,\n                    shell=True,\n                    stdout=subprocess.PIPE, \n                    stderr=subprocess.PIPE)","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"introduction/views.py","start":{"line":409,"col":13,"offset":14305},"end":{"line":409,"col":20,"offset":14312}},"request"]],"intermediate_vars":[{"location":{"path":"introduction/views.py","start":{"line":409,"col":13,"offset":14305},"end":{"line":409,"col":20,"offset":14312}},"content":"request"},{"location":{"path":"introduction/views.py","start":{"line":412,"col":13,"offset":14401},"end":{"line":412,"col":19,"offset":14407}},"content":"domain"},{"location":{"path":"introduction/views.py","start":{"line":419,"col":17,"offset":14662},"end":{"line":419,"col":24,"offset":14669}},"content":"command"}],"taint_sink":["CliLoc",[{"path":"introduction/views.py","start":{"line":423,"col":27,"offset":14838},"end":{"line":427,"col":44,"offset":15005}},"subprocess.Popen(\n                    command,\n                    shell=True,\n                    stdout=subprocess.PIPE, \n                    stderr=subprocess.PIPE)"]]},"engine_kind":"OSS"}},{"check_id":"python.lang.security.dangerous-subprocess-use.dangerous-subprocess-use","path":"introduction/views.py","start":{"line":424,"col":21,"offset":14876},"end":{"line":424,"col":28,"offset":14883},"extra":{"metavars":{"$FUNC":{"start":{"line":409,"col":5,"offset":14297},"end":{"line":409,"col":12,"offset":14304},"abstract_content":"cmd_lab"},"$PROPERTY":{"start":{"line":412,"col":28,"offset":14416},"end":{"line":412,"col":32,"offset":14420},"abstract_content":"POST"},"$CMD":{"start":{"line":424,"col":21,"offset":14876},"end":{"line":424,"col":28,"offset":14883},"abstract_content":"command"}},"message":"Detected subprocess function 'cmd_lab' with user controlled data. A malicious actor could leverage this to perform command injection. You may consider using 'shlex.escape()'.","metadata":{"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"asvs":{"control_id":"5.3.8 OS Command Injection","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v53-output-encoding-and-injection-prevention-requirements","section":"V5: Validation, Sanitization and Encoding Verification Requirements","version":"4"},"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html","https://docs.python.org/3/library/shlex.html","https://semgrep.dev/docs/cheat-sheets/python-command-injection/"],"category":"security","technology":["python"],"confidence":"MEDIUM","cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"HIGH","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.dangerous-subprocess-use.dangerous-subprocess-use","shortlink":"https://sg.run/NWxp","semgrep.dev":{"rule":{"origin":"community","r_id":27271,"rule_id":"JDUz3R","rv_id":946391,"url":"https://semgrep.dev/playground/r/9lTy1bg/python.lang.security.dangerous-subprocess-use.dangerous-subprocess-use","version_id":"9lTy1bg"}}},"severity":"ERROR","fingerprint":"b22e8250a693c5f615d40674fb16d520b52b75e4c405f61babb0ced7553bd691bc0c14dd21ff7ff0441ea97d16470a221e447d09fb17213138e9b4f4c4ab6e49_0","lines":"                    command,","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"introduction/views.py","start":{"line":412,"col":20,"offset":14408},"end":{"line":412,"col":46,"offset":14434}},"request.POST.get('domain')"]],"intermediate_vars":[{"location":{"path":"introduction/views.py","start":{"line":412,"col":13,"offset":14401},"end":{"line":412,"col":19,"offset":14407}},"content":"domain"},{"location":{"path":"introduction/views.py","start":{"line":419,"col":17,"offset":14662},"end":{"line":419,"col":24,"offset":14669}},"content":"command"}],"taint_sink":["CliLoc",[{"path":"introduction/views.py","start":{"line":424,"col":21,"offset":14876},"end":{"line":424,"col":28,"offset":14883}},"command"]]},"engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","path":"introduction/views.py","start":{"line":425,"col":27,"offset":14911},"end":{"line":425,"col":31,"offset":14915},"extra":{"metavars":{"$FUNC":{"start":{"line":423,"col":38,"offset":14849},"end":{"line":423,"col":43,"offset":14854},"abstract_content":"Popen"},"$TRUE":{"start":{"line":425,"col":27,"offset":14911},"end":{"line":425,"col":31,"offset":14915},"abstract_content":"True"}},"message":"Found 'subprocess' function 'Popen' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.","fix":"False","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html","owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"references":["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess","https://docs.python.org/3/library/subprocess.html"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["secure default"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","shortlink":"https://sg.run/J92w","semgrep.dev":{"rule":{"origin":"community","r_id":9646,"rule_id":"DbUpz2","rv_id":946382,"url":"https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true","version_id":"YDTvReW"}}},"severity":"ERROR","fingerprint":"2f819a91e6dbd962fc4833b9ff8198ce71a5c75113bf48e48dcdd11e3cbaefc9c12a416e729d446afb7cdcd41eb6c1e70a058c342b3500d1d7c806ea4f0dc280_0","lines":"                    shell=True,","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.csrf-exempt.no-csrf-exempt","path":"introduction/views.py","start":{"line":445,"col":1,"offset":15682},"end":{"line":462,"col":33,"offset":16302},"extra":{"metavars":{"$R":{"start":{"line":446,"col":5,"offset":15699},"end":{"line":446,"col":13,"offset":15707},"abstract_content":"cmd_lab2"}},"message":"Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.","metadata":{"cwe":["CWE-352: Cross-Site Request Forgery (CSRF)"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["django"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt","shortlink":"https://sg.run/rd5e","semgrep.dev":{"rule":{"origin":"community","r_id":9469,"rule_id":"v8UnqO","rv_id":946139,"url":"https://semgrep.dev/playground/r/xyTqn6x/python.django.security.audit.csrf-exempt.no-csrf-exempt","version_id":"xyTqn6x"}}},"severity":"WARNING","fingerprint":"15f5aa865ea27de8b14a0f65de60b4d5a43909244b985f4b737212410912deb50360fe0aaa1c7ccba11f6468bdd8d96392c2bb1fc4ee29de3c03a1da2809579f_0","lines":"@csrf_exempt\ndef cmd_lab2(request):\n    if request.user.is_authenticated:\n        if (request.method==\"POST\"):\n            val=request.POST.get('val')\n            \n            print(val)\n            try:\n                output = eval(val)\n            except:\n                output = \"Something went wrong\"\n                return render(request,'Lab/CMD/cmd_lab2.html',{\"output\":output})\n            print(\"Output = \", output)\n            return render(request,'Lab/CMD/cmd_lab2.html',{\"output\":output})\n        else:\n            return render(request, 'Lab/CMD/cmd_lab2.html')\n    else:\n        return redirect('login')","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.injection.code.user-eval.user-eval","path":"introduction/views.py","start":{"line":449,"col":13,"offset":15805},"end":{"line":456,"col":81,"offset":16069},"extra":{"metavars":{"$F":{"start":{"line":446,"col":5,"offset":15699},"end":{"line":446,"col":13,"offset":15707},"abstract_content":"cmd_lab2"},"$V":{"start":{"line":449,"col":13,"offset":15805},"end":{"line":449,"col":16,"offset":15808},"abstract_content":"val"},"$W":{"start":{"line":449,"col":25,"offset":15817},"end":{"line":449,"col":29,"offset":15821},"abstract_content":"POST"}},"message":"Found user data in a call to 'eval'. This is extremely dangerous because it can enable an attacker to execute arbitrary remote code on the system. Instead, refactor your code to not use 'eval' and instead use a safe library for the specific functionality you need.","metadata":{"cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"owasp":["A03:2021 - Injection"],"references":["https://nedbatchelder.com/blog/201206/eval_really_is_dangerous.html","https://owasp.org/www-community/attacks/Code_Injection"],"category":"security","technology":["django"],"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"HIGH","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/python.django.security.injection.code.user-eval.user-eval","shortlink":"https://sg.run/PJDW","semgrep.dev":{"rule":{"origin":"community","r_id":9501,"rule_id":"DbUpDQ","rv_id":946166,"url":"https://semgrep.dev/playground/r/l4Tx9EO/python.django.security.injection.code.user-eval.user-eval","version_id":"l4Tx9EO"}}},"severity":"WARNING","fingerprint":"912c28621c990cec1c4c259dd72a41485aea7cc7cbd2cb5846b55e1c8b65678baa533b5787eb5e222a430b7457bb95e4fa816109902a2e9f1261fdda0f915c01_0","lines":"            val=request.POST.get('val')\n            \n            print(val)\n            try:\n                output = eval(val)\n            except:\n                output = \"Something went wrong\"\n                return render(request,'Lab/CMD/cmd_lab2.html',{\"output\":output})","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.eval-detected.eval-detected","path":"introduction/views.py","start":{"line":453,"col":26,"offset":15911},"end":{"line":453,"col":35,"offset":15920},"extra":{"metavars":{},"message":"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval","cwe":["CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"],"owasp":["A03:2021 - Injection"],"asvs":{"control_id":"5.2.4 Dyanmic Code Execution Features","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements","section":"V5: Validation, Sanitization and Encoding Verification Requirements","version":"4"},"category":"security","technology":["python"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Code Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected","shortlink":"https://sg.run/ZvrD","semgrep.dev":{"rule":{"origin":"community","r_id":9635,"rule_id":"gxU149","rv_id":946341,"url":"https://semgrep.dev/playground/r/xyTqnr7/python.lang.security.audit.eval-detected.eval-detected","version_id":"xyTqnr7"}}},"severity":"WARNING","fingerprint":"7ccc3aeb5b5a728bfcf602ad9cab37a9abed280ad405be4b82f5910ac8b9d23750a6fc80f1c3f4a334729a6b04698f458e44672dc8042688ceb2fe1277e1918d_0","lines":"                output = eval(val)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.csrf-exempt.no-csrf-exempt","path":"introduction/views.py","start":{"line":485,"col":1,"offset":16961},"end":{"line":511,"col":101,"offset":18164},"extra":{"metavars":{"$R":{"start":{"line":486,"col":5,"offset":16978},"end":{"line":486,"col":8,"offset":16981},"abstract_content":"Otp"}},"message":"Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.","metadata":{"cwe":["CWE-352: Cross-Site Request Forgery (CSRF)"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["django"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt","shortlink":"https://sg.run/rd5e","semgrep.dev":{"rule":{"origin":"community","r_id":9469,"rule_id":"v8UnqO","rv_id":946139,"url":"https://semgrep.dev/playground/r/xyTqn6x/python.django.security.audit.csrf-exempt.no-csrf-exempt","version_id":"xyTqn6x"}}},"severity":"WARNING","fingerprint":"78279ef509d2c1eed42551b6c27d952a43c7fdd175b1fda0d839e1c661fcd340333fa5de968f41fa98bd3f85dca3823775dd9c8ce013fe1b23ab39e3776626da_0","lines":"@csrf_exempt\ndef Otp(request):\n    if request.method==\"GET\":\n        email=request.GET.get('email')\n        otpN=randint(100,999)\n        if email and otpN:\n            if email==\"admin@pygoat.com\":\n                otp.objects.filter(id=2).update(otp=otpN)\n                html = render(request, \"Lab/BrokenAuth/otp.html\", {\"otp\":\"Sent To Admin Mail ID\"})\n                html.set_cookie(\"email\", email)\n                return html\n\n            else:\n                otp.objects.filter(id=1).update(email=email, otp=otpN)\n                html=render (request,\"Lab/BrokenAuth/otp.html\",{\"otp\":otpN})\n                html.set_cookie(\"email\",email)\n                return html\n        else:\n            return render(request,\"Lab/BrokenAuth/otp.html\")\n    else:\n        otpR=request.POST.get(\"otp\")\n        email=request.COOKIES.get(\"email\")\n        if otp.objects.filter(email=email,otp=otpR) or otp.objects.filter(id=2,otp=otpR):\n            # return HttpResponse(\"<h3>Login Success for email:::\"+email+\"</h3>\")\n            return render (request,\"Lab/BrokenAuth/otp.html\",{\"email\":email})\n        else:\n            return render (request,\"Lab/BrokenAuth/otp.html\",{\"otp\":\"Invalid OTP Please Try Again\"})","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.csrf-exempt.no-csrf-exempt","path":"introduction/views.py","start":{"line":543,"col":1,"offset":19227},"end":{"line":562,"col":33,"offset":19912},"extra":{"metavars":{"$R":{"start":{"line":544,"col":5,"offset":19244},"end":{"line":544,"col":11,"offset":19250},"abstract_content":"a9_lab"}},"message":"Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.","metadata":{"cwe":["CWE-352: Cross-Site Request Forgery (CSRF)"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["django"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt","shortlink":"https://sg.run/rd5e","semgrep.dev":{"rule":{"origin":"community","r_id":9469,"rule_id":"v8UnqO","rv_id":946139,"url":"https://semgrep.dev/playground/r/xyTqn6x/python.django.security.audit.csrf-exempt.no-csrf-exempt","version_id":"xyTqn6x"}}},"severity":"WARNING","fingerprint":"2e45d84cc3d0ec744e402069ff47e53801293c70711a30d8f019631b8c57c2a40c69c6a9224379c2b6d2e46b62e1ad8ab5435a06e52defaf8fa8d309a2a7bea9_0","lines":"@csrf_exempt\ndef a9_lab(request):\n    if request.user.is_authenticated:\n        if request.method==\"GET\":\n            return render(request,\"Lab/A9/a9_lab.html\")\n        else:\n\n            try :\n                file=request.FILES[\"file\"]\n                try :\n                    data = yaml.load(file,yaml.Loader)\n                    \n                    return render(request,\"Lab/A9/a9_lab.html\",{\"data\":data})\n                except:\n                    return render(request, \"Lab/A9/a9_lab.html\", {\"data\": \"Error\"})\n\n            except:\n                return render(request, \"Lab/A9/a9_lab.html\", {\"data\":\"Please Upload a Yaml file.\"})\n    else:\n        return redirect('login')","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.avoid-insecure-deserialization.avoid-insecure-deserialization","path":"introduction/views.py","start":{"line":553,"col":28,"offset":19514},"end":{"line":553,"col":55,"offset":19541},"extra":{"metavars":{"$INSIDE":{"start":{"line":544,"col":5,"offset":19244},"end":{"line":544,"col":11,"offset":19250},"abstract_content":"a9_lab"},"$PARAM":{"start":{"line":544,"col":12,"offset":19251},"end":{"line":544,"col":19,"offset":19258},"abstract_content":"request"},"$REQFUNC":{"start":{"line":551,"col":30,"offset":19451},"end":{"line":551,"col":35,"offset":19456},"abstract_content":"FILES"},"$YAMLFUNC":{"start":{"line":553,"col":33,"offset":19519},"end":{"line":553,"col":37,"offset":19523},"abstract_content":"load"}},"message":"Avoid using insecure deserialization library, backed by `pickle`, `_pickle`, `cpickle`, `dill`, `shelve`, or `yaml`, which are known to lead to remote code execution vulnerabilities.","metadata":{"owasp":["A08:2017 - Insecure Deserialization","A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-502: Deserialization of Untrusted Data"],"references":["https://docs.python.org/3/library/pickle.html"],"category":"security","technology":["django"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insecure Deserialization "],"source":"https://semgrep.dev/r/python.django.security.audit.avoid-insecure-deserialization.avoid-insecure-deserialization","shortlink":"https://sg.run/9oyr","semgrep.dev":{"rule":{"origin":"community","r_id":9467,"rule_id":"OrU3e6","rv_id":946137,"url":"https://semgrep.dev/playground/r/kbTYkJR/python.django.security.audit.avoid-insecure-deserialization.avoid-insecure-deserialization","version_id":"kbTYkJR"}}},"severity":"ERROR","fingerprint":"55b039a7d13528e25e3bad4465aaea7b810fbbce02b515657d90a9e1bd61e656bf30e35d3d477cbb78924a78e34b0bf91c371ea860fdb697d0643a120df5776b_0","lines":"                    data = yaml.load(file,yaml.Loader)","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"introduction/views.py","start":{"line":551,"col":22,"offset":19443},"end":{"line":551,"col":43,"offset":19464}},"request.FILES[\"file\"]"]],"intermediate_vars":[{"location":{"path":"introduction/views.py","start":{"line":551,"col":17,"offset":19438},"end":{"line":551,"col":21,"offset":19442}},"content":"file"}],"taint_sink":["CliLoc",[{"path":"introduction/views.py","start":{"line":553,"col":28,"offset":19514},"end":{"line":553,"col":55,"offset":19541}},"yaml.load(file,yaml.Loader)"]]},"engine_kind":"OSS"}},{"check_id":"python.django.security.audit.csrf-exempt.no-csrf-exempt","path":"introduction/views.py","start":{"line":566,"col":1,"offset":20016},"end":{"line":598,"col":105,"offset":21406},"extra":{"metavars":{"$R":{"start":{"line":567,"col":5,"offset":20033},"end":{"line":567,"col":12,"offset":20040},"abstract_content":"a9_lab2"}},"message":"Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.","metadata":{"cwe":["CWE-352: Cross-Site Request Forgery (CSRF)"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["django"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt","shortlink":"https://sg.run/rd5e","semgrep.dev":{"rule":{"origin":"community","r_id":9469,"rule_id":"v8UnqO","rv_id":946139,"url":"https://semgrep.dev/playground/r/xyTqn6x/python.django.security.audit.csrf-exempt.no-csrf-exempt","version_id":"xyTqn6x"}}},"severity":"WARNING","fingerprint":"2f5a5b921e9a789d38827bfe1df346c19bf56260aa1c9682e59828f2aaee4c3a00123ab2b16ff9fcc184db1988e35b745826349da75542dae28d9ea9b3d9aa98_0","lines":"@csrf_exempt\ndef a9_lab2(request):\n    if not request.user.is_authenticated:\n        return redirect('login')\n    \n    if request.method == \"GET\":\n        return render (request,\"Lab/A9/a9_lab2.html\")\n    elif request.method == \"POST\":\n        try :\n            file=request.FILES[\"file\"]\n            function_str = request.POST.get(\"function\")\n            img  = Image.open(file)\n            img = img.convert(\"RGB\")\n            r,g,b  = img.split()\n            # function_str = \"convert(r+g, '1')\"\n            output = ImageMath.eval(function_str,img = img, b=b, r=r, g=g)\n\n            # saving the image \n            buffered = BytesIO()\n            output.save(buffered, format=\"JPEG\")\n            img_str = base64.b64encode(buffered.getvalue()).decode(\"utf-8\")\n\n            bufferd_ref = BytesIO()\n            img.save(bufferd_ref, format=\"JPEG\")\n            img_str_ref = base64.b64encode(bufferd_ref.getvalue()).decode(\"utf-8\")\n            try :\n                return render(request,\"Lab/A9/a9_lab2.html\",{\"img_str\": img_str,\"img_str_ref\":img_str_ref, \"success\": True})\n            except Exception as e:\n                print(e)\n                return render(request, \"Lab/A9/a9_lab2.html\", {\"data\": \"Error\", \"error\": True})\n        except Exception as e:\n            print(e)\n            return render(request, \"Lab/A9/a9_lab2.html\", {\"data\":\"Please Upload a file\", \"error\":True})","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.csrf-exempt.no-csrf-exempt","path":"introduction/views.py","start":{"line":731,"col":1,"offset":26702},"end":{"line":736,"col":80,"offset":26905},"extra":{"metavars":{"$R":{"start":{"line":732,"col":5,"offset":26719},"end":{"line":732,"col":21,"offset":26735},"abstract_content":"a1_broken_access"}},"message":"Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.","metadata":{"cwe":["CWE-352: Cross-Site Request Forgery (CSRF)"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["django"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt","shortlink":"https://sg.run/rd5e","semgrep.dev":{"rule":{"origin":"community","r_id":9469,"rule_id":"v8UnqO","rv_id":946139,"url":"https://semgrep.dev/playground/r/xyTqn6x/python.django.security.audit.csrf-exempt.no-csrf-exempt","version_id":"xyTqn6x"}}},"severity":"WARNING","fingerprint":"053e4cfdf437f99f72ec1f0e42f356815f47f4d7d2f67f72e545de90ba8087f31ad164fc2710541a234bde977d11fcab4c47e91965df7697b8b1c12a1f933a8b_0","lines":"@csrf_exempt\ndef a1_broken_access(request):\n    if not request.user.is_authenticated:\n        return redirect('login')\n    \n    return render(request,\"Lab_2021/A1_BrokenAccessControl/broken_access.html\")","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.csrf-exempt.no-csrf-exempt","path":"introduction/views.py","start":{"line":739,"col":1,"offset":26908},"end":{"line":773,"col":108,"offset":28148},"extra":{"metavars":{"$R":{"start":{"line":740,"col":5,"offset":26925},"end":{"line":740,"col":27,"offset":26947},"abstract_content":"a1_broken_access_lab_1"}},"message":"Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.","metadata":{"cwe":["CWE-352: Cross-Site Request Forgery (CSRF)"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["django"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt","shortlink":"https://sg.run/rd5e","semgrep.dev":{"rule":{"origin":"community","r_id":9469,"rule_id":"v8UnqO","rv_id":946139,"url":"https://semgrep.dev/playground/r/xyTqn6x/python.django.security.audit.csrf-exempt.no-csrf-exempt","version_id":"xyTqn6x"}}},"severity":"WARNING","fingerprint":"ae88e3c7a96c5d511f6b2d99b57225570acf53d0e9749763c482a098af92b51f07b5c4a0c2878dca4469c83b48ab156ad3695f1286c7f3be4720357688067161_0","lines":"@csrf_exempt\ndef a1_broken_access_lab_1(request):\n    if request.user.is_authenticated:\n        pass\n    else:\n        return redirect('login')\n    \n    name = request.POST.get('name')\n    password = request.POST.get('pass')\n    print(password)\n    print(name)\n    if name:\n        if request.COOKIES.get('admin') == \"1\":\n            return render(\n                request, \n                'Lab_2021/A1_BrokenAccessControl/broken_access_lab_1.html', \n                {\n                    \"data\":\"0NLY_F0R_4DM1N5\",\n                    \"username\": \"admin\"\n                })\n        elif (name=='jack' and password=='jacktheripper'): # Will implement hashing here\n            html = render(\n            request, \n            'Lab_2021/A1_BrokenAccessControl/broken_access_lab_1.html', \n            {\n                \"not_admin\":\"No Secret key for this User\",\n                \"username\": name\n            })\n            html.set_cookie(\"admin\", \"0\",max_age=200)\n            return html\n        else:\n            return render(request, 'Lab_2021/A1_BrokenAccessControl/broken_access_lab_1.html', {\"data\": \"User Not Found\"})\n\n    else:\n        return render(request,'Lab_2021/A1_BrokenAccessControl/broken_access_lab_1.html',{\"no_creds\":True})","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.csrf-exempt.no-csrf-exempt","path":"introduction/views.py","start":{"line":775,"col":1,"offset":28150},"end":{"line":813,"col":108,"offset":29489},"extra":{"metavars":{"$R":{"start":{"line":776,"col":5,"offset":28167},"end":{"line":776,"col":27,"offset":28189},"abstract_content":"a1_broken_access_lab_2"}},"message":"Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.","metadata":{"cwe":["CWE-352: Cross-Site Request Forgery (CSRF)"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["django"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt","shortlink":"https://sg.run/rd5e","semgrep.dev":{"rule":{"origin":"community","r_id":9469,"rule_id":"v8UnqO","rv_id":946139,"url":"https://semgrep.dev/playground/r/xyTqn6x/python.django.security.audit.csrf-exempt.no-csrf-exempt","version_id":"xyTqn6x"}}},"severity":"WARNING","fingerprint":"98a8b7324fe6e9f14187c0cfe31ea0df3cb7a6f95e8fcc26ade85106c0170a7758e004e3fd4260241dd03f71c828104cee21273d8d2ec4e2242f60d544043168_0","lines":"@csrf_exempt\ndef a1_broken_access_lab_2(request):\n    if request.user.is_authenticated:\n        pass\n    else:\n        return redirect('login')\n    \n    name = request.POST.get('name')\n    password = request.POST.get('pass')\n    user_agent = request.META['HTTP_USER_AGENT']\n\n    # print(name)\n    # print(password)\n    print(user_agent)\n    if name :  \n        if (user_agent == \"pygoat_admin\"):\n            return render(\n                request, \n                'Lab_2021/A1_BrokenAccessControl/broken_access_lab_2.html', \n                {\n                    \"data\":\"0NLY_F0R_4DM1N5\",\n                    \"username\": \"admin\",\n                    \"status\": \"admin\"\n                })\n        elif ( name=='jack' and password=='jacktheripper'): # Will implement hashing here\n            html = render(\n            request, \n            'Lab_2021/A1_BrokenAccessControl/broken_access_lab_2.html', \n            {\n                \"not_admin\":\"No Secret key for this User\",\n                \"username\": name,\n                \"status\": \"not admin\"\n            })\n            return html\n        else:\n            return render(request, 'Lab_2021/A1_BrokenAccessControl/broken_access_lab_2.html', {\"data\": \"User Not Found\"})\n\n    else:\n        return render(request,'Lab_2021/A1_BrokenAccessControl/broken_access_lab_2.html',{\"no_creds\":True})","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.csrf-exempt.no-csrf-exempt","path":"introduction/views.py","start":{"line":839,"col":1,"offset":30658},"end":{"line":844,"col":66,"offset":30840},"extra":{"metavars":{"$R":{"start":{"line":840,"col":5,"offset":30675},"end":{"line":840,"col":14,"offset":30684},"abstract_content":"injection"}},"message":"Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.","metadata":{"cwe":["CWE-352: Cross-Site Request Forgery (CSRF)"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["django"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt","shortlink":"https://sg.run/rd5e","semgrep.dev":{"rule":{"origin":"community","r_id":9469,"rule_id":"v8UnqO","rv_id":946139,"url":"https://semgrep.dev/playground/r/xyTqn6x/python.django.security.audit.csrf-exempt.no-csrf-exempt","version_id":"xyTqn6x"}}},"severity":"WARNING","fingerprint":"cb3b6e19a7ccf9b18d05efab85c3dcf7842fb0dac8f4e92f653ef89b4e631d1222837291d3b61d925fb0149d4e551876f45675a82be51e6190a11678e879d311_0","lines":"@csrf_exempt\ndef injection(request):\n    if not request.user.is_authenticated:\n        return redirect('login')\n    \n    return render(request,\"Lab_2021/A3_Injection/injection.html\")","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.csrf-exempt.no-csrf-exempt","path":"introduction/views.py","start":{"line":847,"col":1,"offset":30843},"end":{"line":897,"col":33,"offset":32640},"extra":{"metavars":{"$R":{"start":{"line":848,"col":5,"offset":30860},"end":{"line":848,"col":22,"offset":30877},"abstract_content":"injection_sql_lab"}},"message":"Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.","metadata":{"cwe":["CWE-352: Cross-Site Request Forgery (CSRF)"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["django"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt","shortlink":"https://sg.run/rd5e","semgrep.dev":{"rule":{"origin":"community","r_id":9469,"rule_id":"v8UnqO","rv_id":946139,"url":"https://semgrep.dev/playground/r/xyTqn6x/python.django.security.audit.csrf-exempt.no-csrf-exempt","version_id":"xyTqn6x"}}},"severity":"WARNING","fingerprint":"75e13665e6b1a476924770be8daf36e57b8f0a22c9a06f203d24583e8cf80dd5e0b4d9fd3316ac525cbe37d81418354fc076286282f738620bcaadfe9d2239f1_0","lines":"@csrf_exempt\ndef injection_sql_lab(request):\n    if request.user.is_authenticated:\n\n        name=request.POST.get('name')\n        password=request.POST.get('pass')\n        print(name)\n        print(password)\n\n        if name:\n            sql_query = \"SELECT * FROM introduction_sql_lab_table WHERE id='\"+name+\"'AND password='\"+password+\"'\"\n\n            sql_instance = sql_lab_table(id=\"admin\", password=\"65079b006e85a7e798abecb99e47c154\")\n            sql_instance.save()\n            sql_instance = sql_lab_table(id=\"jack\", password=\"jack\")\n            sql_instance.save()\n            sql_instance = sql_lab_table(id=\"slinky\", password=\"b4f945433ea4c369c12741f62a23ccc0\")\n            sql_instance.save()\n            sql_instance = sql_lab_table(id=\"bloke\", password=\"f8d1ce191319ea8f4d1d26e65e130dd5\")\n            sql_instance.save()\n\n            print(sql_query)\n\n            try:\n                user = sql_lab_table.objects.raw(sql_query)\n                user = user[0].id\n                print(user)\n\n            except:\n                return render(\n                    request, \n                    'Lab_2021/A3_Injection/sql_lab.html',\n                    {\n                        \"wrongpass\":password,\n                        \"sql_error\":sql_query\n                    })\n\n            if user:\n                return render(request, 'Lab_2021/A3_Injection/sql_lab.html',{\"user1\":user})\n            else:\n                return render(\n                    request, \n                    'Lab_2021/A3_Injection/sql_lab.html',\n                    {\n                        \"wrongpass\":password,\n                        \"sql_error\":sql_query\n                    })\n        else:\n            return render(request, 'Lab_2021/A3_Injection/sql_lab.html')\n    else:\n        return redirect('login')","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.injection.tainted-sql-string.tainted-sql-string","path":"introduction/views.py","start":{"line":857,"col":25,"offset":31093},"end":{"line":857,"col":114,"offset":31182},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":7,"offset":6},"abstract_content":"SELECT"},"$ANYTHING":{"start":{"line":851,"col":22,"offset":30948},"end":{"line":851,"col":26,"offset":30952},"abstract_content":"POST"},"$SQLSTR":{"start":{"line":857,"col":26,"offset":31094},"end":{"line":857,"col":77,"offset":31145},"abstract_content":"SELECT * FROM introduction_sql_lab_table WHERE id='"}},"message":"Detected user input used to manually construct a SQL string. This is usually bad practice because manual construction could accidentally result in a SQL injection. An attacker could use a SQL injection to steal or modify contents of the database. Instead, use a parameterized query which is available by default in most database engines. Alternatively, consider using the Django object-relational mappers (ORM) instead of raw SQL queries.","metadata":{"cwe":["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"references":["https://docs.djangoproject.com/en/3.0/topics/security/#sql-injection-protection"],"category":"security","technology":["django"],"subcategory":["audit"],"impact":"LOW","likelihood":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Mass Assignment"],"source":"https://semgrep.dev/r/python.django.security.injection.tainted-sql-string.tainted-sql-string","shortlink":"https://sg.run/PbZp","semgrep.dev":{"rule":{"origin":"community","r_id":14701,"rule_id":"lBU8Ad","rv_id":946190,"url":"https://semgrep.dev/playground/r/yeT0nKx/python.django.security.injection.tainted-sql-string.tainted-sql-string","version_id":"yeT0nKx"}}},"severity":"ERROR","fingerprint":"9e21762bc5f7655c701035adad830f7eccc703de33f338172065128e544218caded180f88d04afdc911793c2eb50334c93c8261a0025cec72c72d96159a2368c_0","lines":"            sql_query = \"SELECT * FROM introduction_sql_lab_table WHERE id='\"+name+\"'AND password='\"+password+\"'\"","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"introduction/views.py","start":{"line":851,"col":14,"offset":30940},"end":{"line":851,"col":26,"offset":30952}},"request.POST"]],"intermediate_vars":[{"location":{"path":"introduction/views.py","start":{"line":851,"col":9,"offset":30935},"end":{"line":851,"col":13,"offset":30939}},"content":"name"}],"taint_sink":["CliLoc",[{"path":"introduction/views.py","start":{"line":857,"col":25,"offset":31093},"end":{"line":857,"col":114,"offset":31182}},"\"SELECT * FROM introduction_sql_lab_table WHERE id='\"+name+\"'AND password='\"+password+\"'\""]]},"engine_kind":"OSS"}},{"check_id":"python.django.security.audit.raw-query.avoid-raw-sql","path":"introduction/views.py","start":{"line":871,"col":24,"offset":31747},"end":{"line":871,"col":60,"offset":31783},"extra":{"metavars":{"$MODEL":{"start":{"line":871,"col":24,"offset":31747},"end":{"line":871,"col":37,"offset":31760},"abstract_content":"sql_lab_table sql_lab_table sql_lab_table"},"$QUERY":{"start":{"line":871,"col":50,"offset":31773},"end":{"line":871,"col":59,"offset":31782},"abstract_content":"sql_query","propagated_value":{"svalue_start":{"line":857,"col":25,"offset":31093},"svalue_end":{"line":857,"col":114,"offset":31182},"svalue_abstract_content":"\"SELECT * FROM introduction_sql_lab_table WHERE id='\"+name+\"'AND password='\"+password+\"'\""}}},"message":"Detected the use of 'RawSQL' or 'raw' indicating the execution of a non-parameterized SQL query. This could lead to a SQL injection and therefore protected information could be leaked. Instead, use Django ORM and parameterized queries before raw SQL. An example of using the Django ORM is: `People.objects.get(name='Bob')`","metadata":{"source-rule-url":"https://bandit.readthedocs.io/en/latest/plugins/b611_django_rawsql_used.html","cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://docs.djangoproject.com/en/3.0/ref/models/expressions/#raw-sql-expressions","https://semgrep.dev/blog/2020/preventing-sql-injection-a-django-authors-perspective/"],"category":"security","technology":["django"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/python.django.security.audit.raw-query.avoid-raw-sql","shortlink":"https://sg.run/weDA","semgrep.dev":{"rule":{"origin":"community","r_id":9473,"rule_id":"EwU2JA","rv_id":946144,"url":"https://semgrep.dev/playground/r/ZRT35bN/python.django.security.audit.raw-query.avoid-raw-sql","version_id":"ZRT35bN"}}},"severity":"WARNING","fingerprint":"04824a9601d535bae3436c8fe648d9dce01924e4610c424aaba932649fea49db40f22f24d2c46f0403fff6b09c6e766d5ae7f5b0db0d19965809cc14fb876e31_0","lines":"                user = sql_lab_table.objects.raw(sql_query)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.injection.path-traversal.path-traversal-join.path-traversal-join","path":"introduction/views.py","start":{"line":916,"col":13,"offset":33342},"end":{"line":924,"col":92,"offset":33759},"extra":{"metavars":{"$F":{"start":{"line":911,"col":5,"offset":33133},"end":{"line":911,"col":13,"offset":33141},"abstract_content":"ssrf_lab"},"$V":{"start":{"line":916,"col":13,"offset":33342},"end":{"line":916,"col":17,"offset":33346},"abstract_content":"file"},"$W":{"start":{"line":916,"col":26,"offset":33355},"end":{"line":916,"col":30,"offset":33359},"abstract_content":"POST"},"$X":{"start":{"line":916,"col":31,"offset":33360},"end":{"line":916,"col":37,"offset":33366},"abstract_content":"\"blog\""},"$P":{"start":{"line":919,"col":17,"offset":33454},"end":{"line":919,"col":25,"offset":33462},"abstract_content":"filename"}},"message":"Data from request is passed to os.path.join() and to open(). This is a path traversal vulnerability, which can lead to sensitive data being leaked. To mitigate, consider using os.path.abspath or os.path.realpath or Path library.","metadata":{"cwe":["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"],"owasp":["A05:2017 - Broken Access Control","A01:2021 - Broken Access Control"],"references":["https://owasp.org/www-community/attacks/Path_Traversal"],"category":"security","technology":["django"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Path Traversal"],"source":"https://semgrep.dev/r/python.django.security.injection.path-traversal.path-traversal-join.path-traversal-join","shortlink":"https://sg.run/Dovo","semgrep.dev":{"rule":{"origin":"community","r_id":9508,"rule_id":"6JUjLj","rv_id":946177,"url":"https://semgrep.dev/playground/r/K3TJb1v/python.django.security.injection.path-traversal.path-traversal-join.path-traversal-join","version_id":"K3TJb1v"}}},"severity":"WARNING","fingerprint":"d474e8df99720c4fd88d88d043d116b1387fd5984c26ac7e1b44fba8c67c1b10e9a5704c0107e87d968a04aeecc7eed80fa3a3ad90a8f5624ba62b82b44fa214_0","lines":"            file=request.POST[\"blog\"]\n            try :\n                dirname = os.path.dirname(__file__)\n                filename = os.path.join(dirname, file)\n                file = open(filename,\"r\")\n                data = file.read()\n                return render(request,\"Lab/ssrf/ssrf_lab.html\",{\"blog\":data})\n            except:\n                return render(request, \"Lab/ssrf/ssrf_lab.html\", {\"blog\": \"No blog found\"})","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.injection.ssrf.ssrf-injection-requests.ssrf-injection-requests","path":"introduction/views.py","start":{"line":954,"col":9,"offset":34555},"end":{"line":959,"col":88,"offset":34841},"extra":{"metavars":{"$FUNC":{"start":{"line":949,"col":5,"offset":34401},"end":{"line":949,"col":14,"offset":34410},"abstract_content":"ssrf_lab2"},"$DATA":{"start":{"line":954,"col":9,"offset":34555},"end":{"line":954,"col":12,"offset":34558},"abstract_content":"url"},"$W":{"start":{"line":954,"col":23,"offset":34569},"end":{"line":954,"col":27,"offset":34573},"abstract_content":"POST"},"$METHOD":{"start":{"line":956,"col":33,"offset":34626},"end":{"line":956,"col":36,"offset":34629},"abstract_content":"get"}},"message":"Data from request object is passed to a new server-side request. This could lead to a server-side request forgery (SSRF). To mitigate, ensure that schemes and hosts are validated against an allowlist, do not forward the response to the user, and ensure proper authentication and transport-layer security in the proxied request. See https://owasp.org/www-community/attacks/Server_Side_Request_Forgery to learn more about SSRF vulnerabilities.","metadata":{"cwe":["CWE-918: Server-Side Request Forgery (SSRF)"],"owasp":["A10:2021 - Server-Side Request Forgery (SSRF)"],"references":["https://owasp.org/www-community/attacks/Server_Side_Request_Forgery"],"category":"security","technology":["django"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"HIGH","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Server-Side Request Forgery (SSRF)"],"source":"https://semgrep.dev/r/python.django.security.injection.ssrf.ssrf-injection-requests.ssrf-injection-requests","shortlink":"https://sg.run/YvY4","semgrep.dev":{"rule":{"origin":"community","r_id":9514,"rule_id":"j2UvEw","rv_id":946188,"url":"https://semgrep.dev/playground/r/1QToK1Y/python.django.security.injection.ssrf.ssrf-injection-requests.ssrf-injection-requests","version_id":"1QToK1Y"}}},"severity":"ERROR","fingerprint":"0f2beffd9a3568dffdc80e464ecf3e85fb7232c5849472c0befc2409be86dbc9c48eda513a2ccd3a376f64dde7e6ed28d887dc37df0119d39337797efff63244_0","lines":"        url = request.POST[\"url\"]\n        try:\n            response = requests.get(url)\n            return render(request, \"Lab/ssrf/ssrf_lab2.html\", {\"response\": response.content.decode()})\n        except:\n            return render(request, \"Lab/ssrf/ssrf_lab2.html\", {\"error\": \"Invalid URL\"})","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.injection.request-data-write.request-data-write","path":"introduction/views.py","start":{"line":974,"col":13,"offset":35429},"end":{"line":989,"col":29,"offset":36137},"extra":{"metavars":{"$DATA":{"start":{"line":974,"col":13,"offset":35429},"end":{"line":974,"col":17,"offset":35433},"abstract_content":"blog"},"$W":{"start":{"line":974,"col":28,"offset":35444},"end":{"line":974,"col":32,"offset":35448},"abstract_content":"POST"},"$INTERM":{"start":{"line":977,"col":13,"offset":35520},"end":{"line":977,"col":17,"offset":35524},"abstract_content":"blog"},"$B":{"start":{"line":977,"col":20,"offset":35527},"end":{"line":977,"col":31,"offset":35538},"abstract_content":"filter_blog filter_blog"},"$C":{"start":{"line":977,"col":20,"offset":35527},"end":{"line":977,"col":31,"offset":35538},"abstract_content":"filter_blog"},"$F":{"start":{"line":989,"col":13,"offset":36121},"end":{"line":989,"col":17,"offset":36125},"abstract_content":"file","propagated_value":{"svalue_start":{"line":988,"col":20,"offset":36087},"svalue_end":{"line":988,"col":40,"offset":36107},"svalue_abstract_content":"open(filename\"w+\")"}}},"message":"Found user-controlled request data passed into '.write(...)'. This could be dangerous if a malicious actor is able to control data into sensitive files. For example, a malicious actor could force rolling of critical log files, or cause a denial-of-service by using up available disk space. Instead, ensure that request data is properly escaped or sanitized.","metadata":{"cwe":["CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')"],"owasp":["A03:2021 - Injection"],"category":"security","technology":["django"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Validation"],"source":"https://semgrep.dev/r/python.django.security.injection.request-data-write.request-data-write","shortlink":"https://sg.run/0Q6j","semgrep.dev":{"rule":{"origin":"community","r_id":9498,"rule_id":"ReUg5z","rv_id":946183,"url":"https://semgrep.dev/playground/r/zyTlkEY/python.django.security.injection.request-data-write.request-data-write","version_id":"zyTlkEY"}}},"severity":"WARNING","fingerprint":"45bcccf9f3d684d1a90796c91e95155944b53add416cb551f1b78d9140a16c31efaa41abd308542c372eb113729fa98bebbfb41aee102fe83010b22de91c63ee_0","lines":"            blog = request.POST[\"blog\"]\n            id = str(uuid.uuid4()).split('-')[-1]\n\n            blog = filter_blog(blog)\n            prepend_code = \"{% extends 'introduction/base.html' %}\\\n                {% block content %}{% block title %}\\\n                <title>SSTI-Blogs</title>\\\n                {% endblock %}\"\n            \n            blog = prepend_code + blog + \"{% endblock %}\"\n            new_blog = Blogs.objects.create(author = request.user, blog_id = id)\n            new_blog.save() \n            dirname = os.path.dirname(__file__)\n            filename = os.path.join(dirname, f\"templates/Lab_2021/A3_Injection/Blogs/{id}.html\")\n            file = open(filename, \"w+\") \n            file.write(blog)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.injection.raw-html-format.raw-html-format","path":"introduction/views.py","start":{"line":983,"col":20,"offset":35774},"end":{"line":983,"col":58,"offset":35812},"extra":{"metavars":{"$ANYTHING":{"start":{"line":974,"col":28,"offset":35444},"end":{"line":974,"col":32,"offset":35448},"abstract_content":"POST"},"$HTMLSTR":{"start":{"line":978,"col":28,"offset":35572},"end":{"line":981,"col":32,"offset":35741},"abstract_content":"\"{% extends 'introduction/base.html' %}\\\n                {% block content %}{% block title %}\\\n                <title>SSTI-Blogs</title>\\\n                {% endblock %}\""}},"message":"Detected user input flowing into a manually constructed HTML string. You may be accidentally bypassing secure methods of rendering HTML by manually constructing HTML and this could create a cross-site scripting vulnerability, which could let attackers steal sensitive user data. To be sure this is safe, check that the HTML is rendered safely. Otherwise, use templates (`django.shortcuts.render`) which will safely render HTML instead.","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"category":"security","technology":["django"],"references":["https://docs.djangoproject.com/en/3.2/topics/http/shortcuts/#render","https://docs.djangoproject.com/en/3.2/topics/security/#cross-site-scripting-xss-protection"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/python.django.security.injection.raw-html-format.raw-html-format","shortlink":"https://sg.run/oYj1","semgrep.dev":{"rule":{"origin":"community","r_id":14360,"rule_id":"2ZUPER","rv_id":946179,"url":"https://semgrep.dev/playground/r/l4Tx9Gr/python.django.security.injection.raw-html-format.raw-html-format","version_id":"l4Tx9Gr"}}},"severity":"WARNING","fingerprint":"740ff47b0cfb52ecc996f3f50e4e830fe4b786021617f85d7c96a71fb45ed699c0f56419ddeb16813ba64412e7c9fe275b553c00979235a747fc6a05a2605a77_0","lines":"            blog = prepend_code + blog + \"{% endblock %}\"","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"introduction/views.py","start":{"line":974,"col":20,"offset":35436},"end":{"line":974,"col":32,"offset":35448}},"request.POST"]],"intermediate_vars":[{"location":{"path":"introduction/views.py","start":{"line":974,"col":13,"offset":35429},"end":{"line":974,"col":17,"offset":35433}},"content":"blog"}],"taint_sink":["CliLoc",[{"path":"introduction/views.py","start":{"line":983,"col":20,"offset":35774},"end":{"line":983,"col":58,"offset":35812}},"prepend_code + blog + \"{% endblock %}\""]]},"engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.md5-used-as-password.md5-used-as-password","path":"introduction/views.py","start":{"line":1019,"col":28,"offset":37194},"end":{"line":1019,"col":62,"offset":37228},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":33,"offset":32},"abstract_content":"md5(password.encode()).hexdigest"},"$FUNCTION":{"start":{"line":1019,"col":28,"offset":37194},"end":{"line":1019,"col":60,"offset":37226},"abstract_content":"md5(password.encode()).hexdigest"}},"message":"It looks like MD5 is used as a password hash. MD5 is not considered a secure password hash because it can be cracked by an attacker in a short amount of time. Use a suitable password hashing function such as scrypt. You can use `hashlib.scrypt`.","metadata":{"cwe":["CWE-327: Use of a Broken or Risky Cryptographic Algorithm"],"owasp":["A03:2017 - Sensitive Data Exposure","A02:2021 - Cryptographic Failures"],"references":["https://tools.ietf.org/html/rfc6151","https://crypto.stackexchange.com/questions/44151/how-does-the-flame-malware-take-advantage-of-md5-collision","https://pycryptodome.readthedocs.io/en/latest/src/hash/sha3_256.html","https://security.stackexchange.com/questions/211/how-to-securely-hash-passwords","https://github.com/returntocorp/semgrep-rules/issues/1609","https://docs.python.org/3/library/hashlib.html#hashlib.scrypt"],"category":"security","technology":["pycryptodome","hashlib","md5"],"subcategory":["vuln"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/python.lang.security.audit.md5-used-as-password.md5-used-as-password","shortlink":"https://sg.run/5DwD","semgrep.dev":{"rule":{"origin":"community","r_id":14703,"rule_id":"6JU1w1","rv_id":946368,"url":"https://semgrep.dev/playground/r/l4Tx9Rp/python.lang.security.audit.md5-used-as-password.md5-used-as-password","version_id":"l4Tx9Rp"}}},"severity":"WARNING","fingerprint":"06bb8a25e7a16155ad42055562118ace8c0275270972a95202f4676519bc3d042cb65bdd50b7a3721d6d7180a478daa22daefa4cea837eb821f1ee84e51dcaef_0","lines":"                password = md5(password.encode()).hexdigest()","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"introduction/views.py","start":{"line":1019,"col":28,"offset":37194},"end":{"line":1019,"col":31,"offset":37197}},"md5"]],"intermediate_vars":[],"taint_sink":["CliLoc",[{"path":"introduction/views.py","start":{"line":1019,"col":28,"offset":37194},"end":{"line":1019,"col":62,"offset":37228}},"md5(password.encode()).hexdigest()"]]},"engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.md5-used-as-password.md5-used-as-password","path":"introduction/views.py","start":{"line":1020,"col":24,"offset":37252},"end":{"line":1020,"col":91,"offset":37319},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":66,"offset":65},"abstract_content":"CF_user.objects.filter(username=username,password=password).first"},"$FUNCTION":{"start":{"line":1020,"col":24,"offset":37252},"end":{"line":1020,"col":89,"offset":37317},"abstract_content":"CF_user.objects.filter(username username password password).first"}},"message":"It looks like MD5 is used as a password hash. MD5 is not considered a secure password hash because it can be cracked by an attacker in a short amount of time. Use a suitable password hashing function such as scrypt. You can use `hashlib.scrypt`.","metadata":{"cwe":["CWE-327: Use of a Broken or Risky Cryptographic Algorithm"],"owasp":["A03:2017 - Sensitive Data Exposure","A02:2021 - Cryptographic Failures"],"references":["https://tools.ietf.org/html/rfc6151","https://crypto.stackexchange.com/questions/44151/how-does-the-flame-malware-take-advantage-of-md5-collision","https://pycryptodome.readthedocs.io/en/latest/src/hash/sha3_256.html","https://security.stackexchange.com/questions/211/how-to-securely-hash-passwords","https://github.com/returntocorp/semgrep-rules/issues/1609","https://docs.python.org/3/library/hashlib.html#hashlib.scrypt"],"category":"security","technology":["pycryptodome","hashlib","md5"],"subcategory":["vuln"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/python.lang.security.audit.md5-used-as-password.md5-used-as-password","shortlink":"https://sg.run/5DwD","semgrep.dev":{"rule":{"origin":"community","r_id":14703,"rule_id":"6JU1w1","rv_id":946368,"url":"https://semgrep.dev/playground/r/l4Tx9Rp/python.lang.security.audit.md5-used-as-password.md5-used-as-password","version_id":"l4Tx9Rp"}}},"severity":"WARNING","fingerprint":"125b5a25cdb18e816b8ab2b3888aa0f4ecd4a47c384887898a76f191721862a0e7b460fa37e4d2024ebcb8e9c8253c28fd61887b457075d5fac08f8e21e219f9_0","lines":"                user = CF_user.objects.filter(username=username,password=password).first()","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"introduction/views.py","start":{"line":1019,"col":28,"offset":37194},"end":{"line":1019,"col":31,"offset":37197}},"md5"]],"intermediate_vars":[{"location":{"path":"introduction/views.py","start":{"line":1019,"col":17,"offset":37183},"end":{"line":1019,"col":25,"offset":37191}},"content":"password"}],"taint_sink":["CliLoc",[{"path":"introduction/views.py","start":{"line":1020,"col":24,"offset":37252},"end":{"line":1020,"col":91,"offset":37319}},"CF_user.objects.filter(username=username,password=password).first()"]]},"engine_kind":"OSS"}},{"check_id":"python.django.security.audit.secure-cookies.django-secure-set-cookie","path":"introduction/views.py","start":{"line":1069,"col":21,"offset":40036},"end":{"line":1069,"col":58,"offset":40073},"extra":{"metavars":{},"message":"Django cookies should be handled securely by setting secure=True, httponly=True, and samesite='Lax' in response.set_cookie(...). If your situation calls for different settings, explicitly disable the setting. If you want to send the cookie over http, set secure=False. If you want to let client-side JavaScript read the cookie, set httponly=False. If you want to attach cookies to requests for external sites, set samesite=None.","metadata":{"cwe":["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"],"owasp":["A05:2021 - Security Misconfiguration"],"asvs":{"control_id":"3.4 Missing Cookie Attributes","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management","section":"V3: Session Management Verification Requirements","version":"4"},"references":["https://docs.djangoproject.com/en/3.0/ref/request-response/#django.http.HttpResponse.set_cookie","https://semgrep.dev/blog/2020/bento-check-keeping-cookies-safe-in-flask/","https://bento.dev/checks/flask/secure-set-cookie/"],"category":"security","technology":["django"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cookie Security"],"source":"https://semgrep.dev/r/python.django.security.audit.secure-cookies.django-secure-set-cookie","shortlink":"https://sg.run/x1WL","semgrep.dev":{"rule":{"origin":"community","r_id":9474,"rule_id":"7KUQ2E","rv_id":946145,"url":"https://semgrep.dev/playground/r/nWTpz3o/python.django.security.audit.secure-cookies.django-secure-set-cookie","version_id":"nWTpz3o"}}},"severity":"WARNING","fingerprint":"4a12be3f5be8ead04f8329320b40ec0c70019d6e16f8bfdd41b6621b02d41bcb2d3a2784f9a93411a279f279343b6ce1d2950093cbbc23f0a55809fb9f32a4d4_4","lines":"                    response.set_cookie(\"cookie\", cookie)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.secure-cookies.django-secure-set-cookie","path":"introduction/views.py","start":{"line":1074,"col":21,"offset":40333},"end":{"line":1074,"col":56,"offset":40368},"extra":{"metavars":{},"message":"Django cookies should be handled securely by setting secure=True, httponly=True, and samesite='Lax' in response.set_cookie(...). If your situation calls for different settings, explicitly disable the setting. If you want to send the cookie over http, set secure=False. If you want to let client-side JavaScript read the cookie, set httponly=False. If you want to attach cookies to requests for external sites, set samesite=None.","metadata":{"cwe":["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"],"owasp":["A05:2021 - Security Misconfiguration"],"asvs":{"control_id":"3.4 Missing Cookie Attributes","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management","section":"V3: Session Management Verification Requirements","version":"4"},"references":["https://docs.djangoproject.com/en/3.0/ref/request-response/#django.http.HttpResponse.set_cookie","https://semgrep.dev/blog/2020/bento-check-keeping-cookies-safe-in-flask/","https://bento.dev/checks/flask/secure-set-cookie/"],"category":"security","technology":["django"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cookie Security"],"source":"https://semgrep.dev/r/python.django.security.audit.secure-cookies.django-secure-set-cookie","shortlink":"https://sg.run/x1WL","semgrep.dev":{"rule":{"origin":"community","r_id":9474,"rule_id":"7KUQ2E","rv_id":946145,"url":"https://semgrep.dev/playground/r/nWTpz3o/python.django.security.audit.secure-cookies.django-secure-set-cookie","version_id":"nWTpz3o"}}},"severity":"WARNING","fingerprint":"4a12be3f5be8ead04f8329320b40ec0c70019d6e16f8bfdd41b6621b02d41bcb2d3a2784f9a93411a279f279343b6ce1d2950093cbbc23f0a55809fb9f32a4d4_5","lines":"                    response.set_cookie(\"cookie\", None)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.secure-cookies.django-secure-set-cookie","path":"introduction/views.py","start":{"line":1102,"col":9,"offset":41529},"end":{"line":1102,"col":65,"offset":41585},"extra":{"metavars":{},"message":"Django cookies should be handled securely by setting secure=True, httponly=True, and samesite='Lax' in response.set_cookie(...). If your situation calls for different settings, explicitly disable the setting. If you want to send the cookie over http, set secure=False. If you want to let client-side JavaScript read the cookie, set httponly=False. If you want to attach cookies to requests for external sites, set samesite=None.","metadata":{"cwe":["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"],"owasp":["A05:2021 - Security Misconfiguration"],"asvs":{"control_id":"3.4 Missing Cookie Attributes","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management","section":"V3: Session Management Verification Requirements","version":"4"},"references":["https://docs.djangoproject.com/en/3.0/ref/request-response/#django.http.HttpResponse.set_cookie","https://semgrep.dev/blog/2020/bento-check-keeping-cookies-safe-in-flask/","https://bento.dev/checks/flask/secure-set-cookie/"],"category":"security","technology":["django"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cookie Security"],"source":"https://semgrep.dev/r/python.django.security.audit.secure-cookies.django-secure-set-cookie","shortlink":"https://sg.run/x1WL","semgrep.dev":{"rule":{"origin":"community","r_id":9474,"rule_id":"7KUQ2E","rv_id":946145,"url":"https://semgrep.dev/playground/r/nWTpz3o/python.django.security.audit.secure-cookies.django-secure-set-cookie","version_id":"nWTpz3o"}}},"severity":"WARNING","fingerprint":"4a12be3f5be8ead04f8329320b40ec0c70019d6e16f8bfdd41b6621b02d41bcb2d3a2784f9a93411a279f279343b6ce1d2950093cbbc23f0a55809fb9f32a4d4_6","lines":"        response.set_cookie(key = \"auth_cookie\", value = cookie)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.csrf-exempt.no-csrf-exempt","path":"introduction/views.py","start":{"line":1170,"col":1,"offset":44899},"end":{"line":1198,"col":28,"offset":46218},"extra":{"metavars":{"$R":{"start":{"line":1172,"col":5,"offset":44942},"end":{"line":1172,"col":22,"offset":44959},"abstract_content":"auth_failure_lab3"}},"message":"Detected usage of @csrf_exempt, which indicates that there is no CSRF token set for this route. This could lead to an attacker manipulating the user's account and exfiltration of private data. Instead, create a function without this decorator.","metadata":{"cwe":["CWE-352: Cross-Site Request Forgery (CSRF)"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["django"],"references":["https://owasp.org/Top10/A01_2021-Broken_Access_Control"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"LOW","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site Request Forgery (CSRF)"],"source":"https://semgrep.dev/r/python.django.security.audit.csrf-exempt.no-csrf-exempt","shortlink":"https://sg.run/rd5e","semgrep.dev":{"rule":{"origin":"community","r_id":9469,"rule_id":"v8UnqO","rv_id":946139,"url":"https://semgrep.dev/playground/r/xyTqn6x/python.django.security.audit.csrf-exempt.no-csrf-exempt","version_id":"xyTqn6x"}}},"severity":"WARNING","fingerprint":"6640dab2585da31b2c2f95124473d0852a04da5476cddbb8f34d592925438668b49b6f21e9b2bc4a354f92b4ed5cafbf17b97187a2e23c8ea6bd9b2db9a00bea_0","lines":"@authentication_decorator\n@csrf_exempt\ndef auth_failure_lab3(request):\n    if request.method == \"GET\":\n        try:\n            cookie = request.COOKIES[\"session_id\"]\n            session = AF_session_id.objects.get(session_id=cookie)\n            if session :\n                return render(request,\"Lab_2021/A7_auth_failure/lab3.html\", {\"username\":session.user,\"success\":True})\n        except:\n            pass\n        return render(request, \"Lab_2021/A7_auth_failure/lab3.html\")\n    elif request.method == \"POST\":\n        token = str(uuid.uuid4())\n        try:\n            username = request.POST[\"username\"]\n            password = request.POST[\"password\"]\n            password = hashlib.sha256(password.encode()).hexdigest()\n        except:\n            response = render(request, \"Lab_2021/A7_auth_failure/lab3.html\")\n            response.set_cookie(\"session_id\", None)\n            return response\n\n        if USER_A7_LAB3[username]['password'] == password:\n            session_data = AF_session_id.objects.create(session_id=token, user=USER_A7_LAB3[username]['username'])\n            session_data.save()\n            response = render(request, \"Lab_2021/A7_auth_failure/lab3.html\", {\"success\":True, \"failure\":False, \"username\":username})\n            response.set_cookie(\"session_id\", token)\n            return response","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.secure-cookies.django-secure-set-cookie","path":"introduction/views.py","start":{"line":1190,"col":13,"offset":45730},"end":{"line":1190,"col":52,"offset":45769},"extra":{"metavars":{},"message":"Django cookies should be handled securely by setting secure=True, httponly=True, and samesite='Lax' in response.set_cookie(...). If your situation calls for different settings, explicitly disable the setting. If you want to send the cookie over http, set secure=False. If you want to let client-side JavaScript read the cookie, set httponly=False. If you want to attach cookies to requests for external sites, set samesite=None.","metadata":{"cwe":["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"],"owasp":["A05:2021 - Security Misconfiguration"],"asvs":{"control_id":"3.4 Missing Cookie Attributes","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management","section":"V3: Session Management Verification Requirements","version":"4"},"references":["https://docs.djangoproject.com/en/3.0/ref/request-response/#django.http.HttpResponse.set_cookie","https://semgrep.dev/blog/2020/bento-check-keeping-cookies-safe-in-flask/","https://bento.dev/checks/flask/secure-set-cookie/"],"category":"security","technology":["django"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cookie Security"],"source":"https://semgrep.dev/r/python.django.security.audit.secure-cookies.django-secure-set-cookie","shortlink":"https://sg.run/x1WL","semgrep.dev":{"rule":{"origin":"community","r_id":9474,"rule_id":"7KUQ2E","rv_id":946145,"url":"https://semgrep.dev/playground/r/nWTpz3o/python.django.security.audit.secure-cookies.django-secure-set-cookie","version_id":"nWTpz3o"}}},"severity":"WARNING","fingerprint":"4a12be3f5be8ead04f8329320b40ec0c70019d6e16f8bfdd41b6621b02d41bcb2d3a2784f9a93411a279f279343b6ce1d2950093cbbc23f0a55809fb9f32a4d4_7","lines":"            response.set_cookie(\"session_id\", None)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.django.security.audit.secure-cookies.django-secure-set-cookie","path":"introduction/views.py","start":{"line":1197,"col":13,"offset":46150},"end":{"line":1197,"col":53,"offset":46190},"extra":{"metavars":{},"message":"Django cookies should be handled securely by setting secure=True, httponly=True, and samesite='Lax' in response.set_cookie(...). If your situation calls for different settings, explicitly disable the setting. If you want to send the cookie over http, set secure=False. If you want to let client-side JavaScript read the cookie, set httponly=False. If you want to attach cookies to requests for external sites, set samesite=None.","metadata":{"cwe":["CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"],"owasp":["A05:2021 - Security Misconfiguration"],"asvs":{"control_id":"3.4 Missing Cookie Attributes","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management","section":"V3: Session Management Verification Requirements","version":"4"},"references":["https://docs.djangoproject.com/en/3.0/ref/request-response/#django.http.HttpResponse.set_cookie","https://semgrep.dev/blog/2020/bento-check-keeping-cookies-safe-in-flask/","https://bento.dev/checks/flask/secure-set-cookie/"],"category":"security","technology":["django"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cookie Security"],"source":"https://semgrep.dev/r/python.django.security.audit.secure-cookies.django-secure-set-cookie","shortlink":"https://sg.run/x1WL","semgrep.dev":{"rule":{"origin":"community","r_id":9474,"rule_id":"7KUQ2E","rv_id":946145,"url":"https://semgrep.dev/playground/r/nWTpz3o/python.django.security.audit.secure-cookies.django-secure-set-cookie","version_id":"nWTpz3o"}}},"severity":"WARNING","fingerprint":"4a12be3f5be8ead04f8329320b40ec0c70019d6e16f8bfdd41b6621b02d41bcb2d3a2784f9a93411a279f279343b6ce1d2950093cbbc23f0a55809fb9f32a4d4_8","lines":"            response.set_cookie(\"session_id\", token)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}}],"errors":[{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm","message":"Internal matching error when running javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm on introduction/static/Lab/ssrf.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"introduction/static/Lab/ssrf.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.express.web.cors-default-config-express.cors-default-config-express","message":"Internal matching error when running javascript.express.web.cors-default-config-express.cors-default-config-express on introduction/static/Lab/ssrf.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"introduction/static/Lab/ssrf.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.koa.web.cors-default-config-koa.cors-default-config-koa","message":"Internal matching error when running javascript.koa.web.cors-default-config-koa.cors-default-config-koa on introduction/static/Lab/ssrf.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"introduction/static/Lab/ssrf.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm","message":"Internal matching error when running javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm on introduction/static/Lab/xss.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"introduction/static/Lab/xss.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm","message":"Internal matching error when running javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm on introduction/static/js/a6.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"introduction/static/js/a6.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.express.web.cors-default-config-express.cors-default-config-express","message":"Internal matching error when running javascript.express.web.cors-default-config-express.cors-default-config-express on introduction/static/js/a6.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"introduction/static/js/a6.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.koa.web.cors-default-config-koa.cors-default-config-koa","message":"Internal matching error when running javascript.koa.web.cors-default-config-koa.cors-default-config-koa on introduction/static/js/a6.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"introduction/static/js/a6.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm","message":"Internal matching error when running javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm on introduction/static/js/a7.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"introduction/static/js/a7.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.express.web.cors-default-config-express.cors-default-config-express","message":"Internal matching error when running javascript.express.web.cors-default-config-express.cors-default-config-express on introduction/static/js/a7.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"introduction/static/js/a7.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.koa.web.cors-default-config-koa.cors-default-config-koa","message":"Internal matching error when running javascript.koa.web.cors-default-config-koa.cors-default-config-koa on introduction/static/js/a7.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"introduction/static/js/a7.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm","message":"Internal matching error when running javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm on introduction/static/js/a9.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"introduction/static/js/a9.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.express.web.cors-default-config-express.cors-default-config-express","message":"Internal matching error when running javascript.express.web.cors-default-config-express.cors-default-config-express on introduction/static/js/a9.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"introduction/static/js/a9.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.koa.web.cors-default-config-koa.cors-default-config-koa","message":"Internal matching error when running javascript.koa.web.cors-default-config-koa.cors-default-config-koa on introduction/static/js/a9.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"introduction/static/js/a9.js"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"dockerized_labs/broken_auth_lab/templates/dashboard.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":44}},{"path":"dockerized_labs/broken_auth_lab/templates/dashboard.html","start":{"line":5,"col":1,"offset":0},"end":{"line":7,"col":20,"offset":35}},{"path":"dockerized_labs/broken_auth_lab/templates/dashboard.html","start":{"line":83,"col":1,"offset":0},"end":{"line":83,"col":15,"offset":14}}]],"message":"Syntax error at line dockerized_labs/broken_auth_lab/templates/dashboard.html:1:\n `{% extends \"base.html\" %}\n\n{% block title %}` was unexpected","path":"dockerized_labs/broken_auth_lab/templates/dashboard.html","spans":[{"file":"dockerized_labs/broken_auth_lab/templates/dashboard.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":44}},{"file":"dockerized_labs/broken_auth_lab/templates/dashboard.html","start":{"line":5,"col":1,"offset":0},"end":{"line":7,"col":20,"offset":35}},{"file":"dockerized_labs/broken_auth_lab/templates/dashboard.html","start":{"line":83,"col":1,"offset":0},"end":{"line":83,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"dockerized_labs/broken_auth_lab/templates/index.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":44}},{"path":"dockerized_labs/broken_auth_lab/templates/index.html","start":{"line":5,"col":1,"offset":0},"end":{"line":7,"col":20,"offset":35}},{"path":"dockerized_labs/broken_auth_lab/templates/index.html","start":{"line":174,"col":1,"offset":0},"end":{"line":174,"col":15,"offset":14}}]],"message":"Syntax error at line dockerized_labs/broken_auth_lab/templates/index.html:1:\n `{% extends \"base.html\" %}\n\n{% block title %}` was unexpected","path":"dockerized_labs/broken_auth_lab/templates/index.html","spans":[{"file":"dockerized_labs/broken_auth_lab/templates/index.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":44}},{"file":"dockerized_labs/broken_auth_lab/templates/index.html","start":{"line":5,"col":1,"offset":0},"end":{"line":7,"col":20,"offset":35}},{"file":"dockerized_labs/broken_auth_lab/templates/index.html","start":{"line":174,"col":1,"offset":0},"end":{"line":174,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"dockerized_labs/broken_auth_lab/templates/lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":44}},{"path":"dockerized_labs/broken_auth_lab/templates/lab.html","start":{"line":5,"col":1,"offset":0},"end":{"line":7,"col":20,"offset":35}},{"path":"dockerized_labs/broken_auth_lab/templates/lab.html","start":{"line":53,"col":1,"offset":0},"end":{"line":53,"col":15,"offset":14}}]],"message":"Syntax error at line dockerized_labs/broken_auth_lab/templates/lab.html:1:\n `{% extends \"base.html\" %}\n\n{% block title %}` was unexpected","path":"dockerized_labs/broken_auth_lab/templates/lab.html","spans":[{"file":"dockerized_labs/broken_auth_lab/templates/lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":44}},{"file":"dockerized_labs/broken_auth_lab/templates/lab.html","start":{"line":5,"col":1,"offset":0},"end":{"line":7,"col":20,"offset":35}},{"file":"dockerized_labs/broken_auth_lab/templates/lab.html","start":{"line":53,"col":1,"offset":0},"end":{"line":53,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"dockerized_labs/insec_des_lab/templates/result.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":44}},{"path":"dockerized_labs/insec_des_lab/templates/result.html","start":{"line":5,"col":1,"offset":0},"end":{"line":7,"col":20,"offset":35}},{"path":"dockerized_labs/insec_des_lab/templates/result.html","start":{"line":26,"col":1,"offset":0},"end":{"line":26,"col":15,"offset":14}}]],"message":"Syntax error at line dockerized_labs/insec_des_lab/templates/result.html:1:\n `{% extends \"base.html\" %}\n\n{% block title %}` was unexpected","path":"dockerized_labs/insec_des_lab/templates/result.html","spans":[{"file":"dockerized_labs/insec_des_lab/templates/result.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":44}},{"file":"dockerized_labs/insec_des_lab/templates/result.html","start":{"line":5,"col":1,"offset":0},"end":{"line":7,"col":20,"offset":35}},{"file":"dockerized_labs/insec_des_lab/templates/result.html","start":{"line":26,"col":1,"offset":0},"end":{"line":26,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"dockerized_labs/sensitive_data_exposure/templates/index.html","start":{"line":54,"col":111,"offset":0},"end":{"line":54,"col":119,"offset":8}}]],"message":"Syntax error at line dockerized_labs/sensitive_data_exposure/templates/index.html:54:\n `& Try it` was unexpected","path":"dockerized_labs/sensitive_data_exposure/templates/index.html","spans":[{"file":"dockerized_labs/sensitive_data_exposure/templates/index.html","start":{"line":54,"col":111,"offset":0},"end":{"line":54,"col":119,"offset":8}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"dockerized_labs/sensitive_data_exposure/templates/lesson.html","start":{"line":108,"col":43,"offset":0},"end":{"line":108,"col":53,"offset":10}}]],"message":"Syntax error at line dockerized_labs/sensitive_data_exposure/templates/lesson.html:108:\n `& API keys` was unexpected","path":"dockerized_labs/sensitive_data_exposure/templates/lesson.html","spans":[{"file":"dockerized_labs/sensitive_data_exposure/templates/lesson.html","start":{"line":108,"col":43,"offset":0},"end":{"line":108,"col":53,"offset":10}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/A10/a10.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab/A10/a10.html","start":{"line":4,"col":29,"offset":0},"end":{"line":4,"col":41,"offset":12}},{"path":"introduction/templates/Lab/A10/a10.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"path":"introduction/templates/Lab/A10/a10.html","start":{"line":7,"col":28,"offset":0},"end":{"line":7,"col":40,"offset":12}},{"path":"introduction/templates/Lab/A10/a10.html","start":{"line":9,"col":40,"offset":0},"end":{"line":9,"col":59,"offset":19}},{"path":"introduction/templates/Lab/A10/a10.html","start":{"line":70,"col":3,"offset":0},"end":{"line":70,"col":17,"offset":14}}]],"message":"Syntax error at line introduction/templates/Lab/A10/a10.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/A10/a10.html","spans":[{"file":"introduction/templates/Lab/A10/a10.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab/A10/a10.html","start":{"line":4,"col":29,"offset":0},"end":{"line":4,"col":41,"offset":12}},{"file":"introduction/templates/Lab/A10/a10.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"file":"introduction/templates/Lab/A10/a10.html","start":{"line":7,"col":28,"offset":0},"end":{"line":7,"col":40,"offset":12}},{"file":"introduction/templates/Lab/A10/a10.html","start":{"line":9,"col":40,"offset":0},"end":{"line":9,"col":59,"offset":19}},{"file":"introduction/templates/Lab/A10/a10.html","start":{"line":70,"col":3,"offset":0},"end":{"line":70,"col":17,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/A10/a10_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"path":"introduction/templates/Lab/A10/a10_lab.html","start":{"line":5,"col":29,"offset":0},"end":{"line":5,"col":41,"offset":12}},{"path":"introduction/templates/Lab/A10/a10_lab.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"path":"introduction/templates/Lab/A10/a10_lab.html","start":{"line":42,"col":1,"offset":0},"end":{"line":44,"col":15,"offset":20}}]],"message":"Syntax error at line introduction/templates/Lab/A10/a10_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/A10/a10_lab.html","spans":[{"file":"introduction/templates/Lab/A10/a10_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"file":"introduction/templates/Lab/A10/a10_lab.html","start":{"line":5,"col":29,"offset":0},"end":{"line":5,"col":41,"offset":12}},{"file":"introduction/templates/Lab/A10/a10_lab.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"file":"introduction/templates/Lab/A10/a10_lab.html","start":{"line":42,"col":1,"offset":0},"end":{"line":44,"col":15,"offset":20}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/A10/a10_lab2.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"path":"introduction/templates/Lab/A10/a10_lab2.html","start":{"line":5,"col":29,"offset":0},"end":{"line":5,"col":41,"offset":12}},{"path":"introduction/templates/Lab/A10/a10_lab2.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"path":"introduction/templates/Lab/A10/a10_lab2.html","start":{"line":78,"col":1,"offset":0},"end":{"line":78,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/Lab/A10/a10_lab2.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/A10/a10_lab2.html","spans":[{"file":"introduction/templates/Lab/A10/a10_lab2.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"file":"introduction/templates/Lab/A10/a10_lab2.html","start":{"line":5,"col":29,"offset":0},"end":{"line":5,"col":41,"offset":12}},{"file":"introduction/templates/Lab/A10/a10_lab2.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"file":"introduction/templates/Lab/A10/a10_lab2.html","start":{"line":78,"col":1,"offset":0},"end":{"line":78,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/A11/a11.html","start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":77,"offset":76}},{"path":"introduction/templates/Lab/A11/a11.html","start":{"line":3,"col":1,"offset":0},"end":{"line":3,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/Lab/A11/a11.html:1:\n `{% extends 'introduction/base.html' %} {% block content %} {% block title %}` was unexpected","path":"introduction/templates/Lab/A11/a11.html","spans":[{"file":"introduction/templates/Lab/A11/a11.html","start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":77,"offset":76}},{"file":"introduction/templates/Lab/A11/a11.html","start":{"line":3,"col":1,"offset":0},"end":{"line":3,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/A11/a11_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"path":"introduction/templates/Lab/A11/a11_lab.html","start":{"line":6,"col":1,"offset":0},"end":{"line":9,"col":15,"offset":49}},{"path":"introduction/templates/Lab/A11/a11_lab.html","start":{"line":53,"col":1,"offset":0},"end":{"line":53,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/Lab/A11/a11_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/A11/a11_lab.html","spans":[{"file":"introduction/templates/Lab/A11/a11_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"file":"introduction/templates/Lab/A11/a11_lab.html","start":{"line":6,"col":1,"offset":0},"end":{"line":9,"col":15,"offset":49}},{"file":"introduction/templates/Lab/A11/a11_lab.html","start":{"line":53,"col":1,"offset":0},"end":{"line":53,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/A9/a9.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab/A9/a9.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"path":"introduction/templates/Lab/A9/a9.html","start":{"line":94,"col":1,"offset":0},"end":{"line":94,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/Lab/A9/a9.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/A9/a9.html","spans":[{"file":"introduction/templates/Lab/A9/a9.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab/A9/a9.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"file":"introduction/templates/Lab/A9/a9.html","start":{"line":94,"col":1,"offset":0},"end":{"line":94,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/A9/a9_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"path":"introduction/templates/Lab/A9/a9_lab.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"path":"introduction/templates/Lab/A9/a9_lab.html","start":{"line":35,"col":1,"offset":0},"end":{"line":37,"col":15,"offset":20}}]],"message":"Syntax error at line introduction/templates/Lab/A9/a9_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/A9/a9_lab.html","spans":[{"file":"introduction/templates/Lab/A9/a9_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"file":"introduction/templates/Lab/A9/a9_lab.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"file":"introduction/templates/Lab/A9/a9_lab.html","start":{"line":35,"col":1,"offset":0},"end":{"line":37,"col":15,"offset":20}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/A9/a9_lab2.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"path":"introduction/templates/Lab/A9/a9_lab2.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"path":"introduction/templates/Lab/A9/a9_lab2.html","start":{"line":11,"col":17,"offset":0},"end":{"line":11,"col":78,"offset":61}},{"path":"introduction/templates/Lab/A9/a9_lab2.html","start":{"line":12,"col":15,"offset":0},"end":{"line":12,"col":51,"offset":36}}]],"message":"Syntax error at line introduction/templates/Lab/A9/a9_lab2.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/A9/a9_lab2.html","spans":[{"file":"introduction/templates/Lab/A9/a9_lab2.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"file":"introduction/templates/Lab/A9/a9_lab2.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"file":"introduction/templates/Lab/A9/a9_lab2.html","start":{"line":11,"col":17,"offset":0},"end":{"line":11,"col":78,"offset":61}},{"file":"introduction/templates/Lab/A9/a9_lab2.html","start":{"line":12,"col":15,"offset":0},"end":{"line":12,"col":51,"offset":36}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/AUTH/auth_home.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab/AUTH/auth_home.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"path":"introduction/templates/Lab/AUTH/auth_home.html","start":{"line":50,"col":1,"offset":0},"end":{"line":54,"col":15,"offset":24}}]],"message":"Syntax error at line introduction/templates/Lab/AUTH/auth_home.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/AUTH/auth_home.html","spans":[{"file":"introduction/templates/Lab/AUTH/auth_home.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab/AUTH/auth_home.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"file":"introduction/templates/Lab/AUTH/auth_home.html","start":{"line":50,"col":1,"offset":0},"end":{"line":54,"col":15,"offset":24}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/AUTH/auth_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab/AUTH/auth_lab.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"path":"introduction/templates/Lab/AUTH/auth_lab.html","start":{"line":20,"col":1,"offset":0},"end":{"line":20,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/Lab/AUTH/auth_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/AUTH/auth_lab.html","spans":[{"file":"introduction/templates/Lab/AUTH/auth_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab/AUTH/auth_lab.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"file":"introduction/templates/Lab/AUTH/auth_lab.html","start":{"line":20,"col":1,"offset":0},"end":{"line":20,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/AUTH/auth_lab_login.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab/AUTH/auth_lab_login.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"path":"introduction/templates/Lab/AUTH/auth_lab_login.html","start":{"line":23,"col":1,"offset":0},"end":{"line":23,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/Lab/AUTH/auth_lab_login.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/AUTH/auth_lab_login.html","spans":[{"file":"introduction/templates/Lab/AUTH/auth_lab_login.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab/AUTH/auth_lab_login.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"file":"introduction/templates/Lab/AUTH/auth_lab_login.html","start":{"line":23,"col":1,"offset":0},"end":{"line":23,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/AUTH/auth_lab_signup.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab/AUTH/auth_lab_signup.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"path":"introduction/templates/Lab/AUTH/auth_lab_signup.html","start":{"line":25,"col":1,"offset":0},"end":{"line":25,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/Lab/AUTH/auth_lab_signup.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/AUTH/auth_lab_signup.html","spans":[{"file":"introduction/templates/Lab/AUTH/auth_lab_signup.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab/AUTH/auth_lab_signup.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"file":"introduction/templates/Lab/AUTH/auth_lab_signup.html","start":{"line":25,"col":1,"offset":0},"end":{"line":25,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/AUTH/auth_success.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab/AUTH/auth_success.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"path":"introduction/templates/Lab/AUTH/auth_success.html","start":{"line":24,"col":1,"offset":0},"end":{"line":24,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/Lab/AUTH/auth_success.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/AUTH/auth_success.html","spans":[{"file":"introduction/templates/Lab/AUTH/auth_success.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab/AUTH/auth_success.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"file":"introduction/templates/Lab/AUTH/auth_success.html","start":{"line":24,"col":1,"offset":0},"end":{"line":24,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/BrokenAccess/ba.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab/BrokenAccess/ba.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"path":"introduction/templates/Lab/BrokenAccess/ba.html","start":{"line":66,"col":1,"offset":0},"end":{"line":66,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/Lab/BrokenAccess/ba.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/BrokenAccess/ba.html","spans":[{"file":"introduction/templates/Lab/BrokenAccess/ba.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab/BrokenAccess/ba.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"file":"introduction/templates/Lab/BrokenAccess/ba.html","start":{"line":66,"col":1,"offset":0},"end":{"line":66,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/BrokenAccess/ba_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"path":"introduction/templates/Lab/BrokenAccess/ba_lab.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"path":"introduction/templates/Lab/BrokenAccess/ba_lab.html","start":{"line":44,"col":1,"offset":0},"end":{"line":46,"col":15,"offset":20}}]],"message":"Syntax error at line introduction/templates/Lab/BrokenAccess/ba_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/BrokenAccess/ba_lab.html","spans":[{"file":"introduction/templates/Lab/BrokenAccess/ba_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"file":"introduction/templates/Lab/BrokenAccess/ba_lab.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"file":"introduction/templates/Lab/BrokenAccess/ba_lab.html","start":{"line":44,"col":1,"offset":0},"end":{"line":46,"col":15,"offset":20}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/BrokenAuth/bau.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab/BrokenAuth/bau.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"path":"introduction/templates/Lab/BrokenAuth/bau.html","start":{"line":104,"col":1,"offset":0},"end":{"line":104,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/Lab/BrokenAuth/bau.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/BrokenAuth/bau.html","spans":[{"file":"introduction/templates/Lab/BrokenAuth/bau.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab/BrokenAuth/bau.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"file":"introduction/templates/Lab/BrokenAuth/bau.html","start":{"line":104,"col":1,"offset":0},"end":{"line":104,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/BrokenAuth/bau_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab/BrokenAuth/bau_lab.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"path":"introduction/templates/Lab/BrokenAuth/bau_lab.html","start":{"line":34,"col":1,"offset":0},"end":{"line":36,"col":15,"offset":20}}]],"message":"Syntax error at line introduction/templates/Lab/BrokenAuth/bau_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/BrokenAuth/bau_lab.html","spans":[{"file":"introduction/templates/Lab/BrokenAuth/bau_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab/BrokenAuth/bau_lab.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"file":"introduction/templates/Lab/BrokenAuth/bau_lab.html","start":{"line":34,"col":1,"offset":0},"end":{"line":36,"col":15,"offset":20}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/CMD/cmd.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab/CMD/cmd.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"path":"introduction/templates/Lab/CMD/cmd.html","start":{"line":38,"col":69,"offset":0},"end":{"line":38,"col":81,"offset":12}},{"path":"introduction/templates/Lab/CMD/cmd.html","start":{"line":39,"col":65,"offset":0},"end":{"line":39,"col":71,"offset":6}},{"path":"introduction/templates/Lab/CMD/cmd.html","start":{"line":63,"col":59,"offset":0},"end":{"line":63,"col":65,"offset":6}},{"path":"introduction/templates/Lab/CMD/cmd.html","start":{"line":64,"col":43,"offset":0},"end":{"line":64,"col":49,"offset":6}},{"path":"introduction/templates/Lab/CMD/cmd.html","start":{"line":65,"col":27,"offset":0},"end":{"line":65,"col":29,"offset":2}},{"path":"introduction/templates/Lab/CMD/cmd.html","start":{"line":134,"col":1,"offset":0},"end":{"line":134,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/Lab/CMD/cmd.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/CMD/cmd.html","spans":[{"file":"introduction/templates/Lab/CMD/cmd.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab/CMD/cmd.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"file":"introduction/templates/Lab/CMD/cmd.html","start":{"line":38,"col":69,"offset":0},"end":{"line":38,"col":81,"offset":12}},{"file":"introduction/templates/Lab/CMD/cmd.html","start":{"line":39,"col":65,"offset":0},"end":{"line":39,"col":71,"offset":6}},{"file":"introduction/templates/Lab/CMD/cmd.html","start":{"line":63,"col":59,"offset":0},"end":{"line":63,"col":65,"offset":6}},{"file":"introduction/templates/Lab/CMD/cmd.html","start":{"line":64,"col":43,"offset":0},"end":{"line":64,"col":49,"offset":6}},{"file":"introduction/templates/Lab/CMD/cmd.html","start":{"line":65,"col":27,"offset":0},"end":{"line":65,"col":29,"offset":2}},{"file":"introduction/templates/Lab/CMD/cmd.html","start":{"line":134,"col":1,"offset":0},"end":{"line":134,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/CMD/cmd_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab/CMD/cmd_lab.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"path":"introduction/templates/Lab/CMD/cmd_lab.html","start":{"line":33,"col":1,"offset":0},"end":{"line":36,"col":15,"offset":21}}]],"message":"Syntax error at line introduction/templates/Lab/CMD/cmd_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/CMD/cmd_lab.html","spans":[{"file":"introduction/templates/Lab/CMD/cmd_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab/CMD/cmd_lab.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"file":"introduction/templates/Lab/CMD/cmd_lab.html","start":{"line":33,"col":1,"offset":0},"end":{"line":36,"col":15,"offset":21}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/CMD/cmd_lab2.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab/CMD/cmd_lab2.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"path":"introduction/templates/Lab/CMD/cmd_lab2.html","start":{"line":29,"col":1,"offset":0},"end":{"line":32,"col":15,"offset":21}}]],"message":"Syntax error at line introduction/templates/Lab/CMD/cmd_lab2.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/CMD/cmd_lab2.html","spans":[{"file":"introduction/templates/Lab/CMD/cmd_lab2.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab/CMD/cmd_lab2.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"file":"introduction/templates/Lab/CMD/cmd_lab2.html","start":{"line":29,"col":1,"offset":0},"end":{"line":32,"col":15,"offset":21}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/DataExp/data_exp.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab/DataExp/data_exp.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"path":"introduction/templates/Lab/DataExp/data_exp.html","start":{"line":49,"col":1,"offset":0},"end":{"line":49,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/Lab/DataExp/data_exp.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/DataExp/data_exp.html","spans":[{"file":"introduction/templates/Lab/DataExp/data_exp.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab/DataExp/data_exp.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"file":"introduction/templates/Lab/DataExp/data_exp.html","start":{"line":49,"col":1,"offset":0},"end":{"line":49,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/DataExp/data_exp_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"path":"introduction/templates/Lab/DataExp/data_exp_lab.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"path":"introduction/templates/Lab/DataExp/data_exp_lab.html","start":{"line":19,"col":1,"offset":0},"end":{"line":21,"col":15,"offset":20}}]],"message":"Syntax error at line introduction/templates/Lab/DataExp/data_exp_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/DataExp/data_exp_lab.html","spans":[{"file":"introduction/templates/Lab/DataExp/data_exp_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"file":"introduction/templates/Lab/DataExp/data_exp_lab.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"file":"introduction/templates/Lab/DataExp/data_exp_lab.html","start":{"line":19,"col":1,"offset":0},"end":{"line":21,"col":15,"offset":20}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/SQL/sql.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab/SQL/sql.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"path":"introduction/templates/Lab/SQL/sql.html","start":{"line":100,"col":1,"offset":0},"end":{"line":100,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/Lab/SQL/sql.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/SQL/sql.html","spans":[{"file":"introduction/templates/Lab/SQL/sql.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab/SQL/sql.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"file":"introduction/templates/Lab/SQL/sql.html","start":{"line":100,"col":1,"offset":0},"end":{"line":100,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/SQL/sql_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab/SQL/sql_lab.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"path":"introduction/templates/Lab/SQL/sql_lab.html","start":{"line":46,"col":1,"offset":0},"end":{"line":48,"col":15,"offset":20}}]],"message":"Syntax error at line introduction/templates/Lab/SQL/sql_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/SQL/sql_lab.html","spans":[{"file":"introduction/templates/Lab/SQL/sql_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab/SQL/sql_lab.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"file":"introduction/templates/Lab/SQL/sql_lab.html","start":{"line":46,"col":1,"offset":0},"end":{"line":48,"col":15,"offset":20}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/XSS/xss.html","start":{"line":1,"col":1,"offset":0},"end":{"line":2,"col":20,"offset":58}},{"path":"introduction/templates/Lab/XSS/xss.html","start":{"line":58,"col":106,"offset":0},"end":{"line":58,"col":108,"offset":2}},{"path":"introduction/templates/Lab/XSS/xss.html","start":{"line":148,"col":29,"offset":0},"end":{"line":148,"col":38,"offset":9}},{"path":"introduction/templates/Lab/XSS/xss.html","start":{"line":148,"col":45,"offset":0},"end":{"line":148,"col":51,"offset":6}},{"path":"introduction/templates/Lab/XSS/xss.html","start":{"line":149,"col":43,"offset":0},"end":{"line":149,"col":82,"offset":39}},{"path":"introduction/templates/Lab/XSS/xss.html","start":{"line":170,"col":25,"offset":0},"end":{"line":170,"col":37,"offset":12}},{"path":"introduction/templates/Lab/XSS/xss.html","start":{"line":172,"col":31,"offset":0},"end":{"line":172,"col":36,"offset":5}},{"path":"introduction/templates/Lab/XSS/xss.html","start":{"line":174,"col":28,"offset":0},"end":{"line":174,"col":35,"offset":7}},{"path":"introduction/templates/Lab/XSS/xss.html","start":{"line":175,"col":29,"offset":0},"end":{"line":175,"col":38,"offset":9}},{"path":"introduction/templates/Lab/XSS/xss.html","start":{"line":176,"col":29,"offset":0},"end":{"line":176,"col":38,"offset":9}},{"path":"introduction/templates/Lab/XSS/xss.html","start":{"line":205,"col":1,"offset":0},"end":{"line":205,"col":23,"offset":22}}]],"message":"Syntax error at line introduction/templates/Lab/XSS/xss.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}` was unexpected","path":"introduction/templates/Lab/XSS/xss.html","spans":[{"file":"introduction/templates/Lab/XSS/xss.html","start":{"line":1,"col":1,"offset":0},"end":{"line":2,"col":20,"offset":58}},{"file":"introduction/templates/Lab/XSS/xss.html","start":{"line":58,"col":106,"offset":0},"end":{"line":58,"col":108,"offset":2}},{"file":"introduction/templates/Lab/XSS/xss.html","start":{"line":148,"col":29,"offset":0},"end":{"line":148,"col":38,"offset":9}},{"file":"introduction/templates/Lab/XSS/xss.html","start":{"line":148,"col":45,"offset":0},"end":{"line":148,"col":51,"offset":6}},{"file":"introduction/templates/Lab/XSS/xss.html","start":{"line":149,"col":43,"offset":0},"end":{"line":149,"col":82,"offset":39}},{"file":"introduction/templates/Lab/XSS/xss.html","start":{"line":170,"col":25,"offset":0},"end":{"line":170,"col":37,"offset":12}},{"file":"introduction/templates/Lab/XSS/xss.html","start":{"line":172,"col":31,"offset":0},"end":{"line":172,"col":36,"offset":5}},{"file":"introduction/templates/Lab/XSS/xss.html","start":{"line":174,"col":28,"offset":0},"end":{"line":174,"col":35,"offset":7}},{"file":"introduction/templates/Lab/XSS/xss.html","start":{"line":175,"col":29,"offset":0},"end":{"line":175,"col":38,"offset":9}},{"file":"introduction/templates/Lab/XSS/xss.html","start":{"line":176,"col":29,"offset":0},"end":{"line":176,"col":38,"offset":9}},{"file":"introduction/templates/Lab/XSS/xss.html","start":{"line":205,"col":1,"offset":0},"end":{"line":205,"col":23,"offset":22}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/XSS/xss_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab/XSS/xss_lab.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"path":"introduction/templates/Lab/XSS/xss_lab.html","start":{"line":39,"col":1,"offset":0},"end":{"line":41,"col":23,"offset":28}}]],"message":"Syntax error at line introduction/templates/Lab/XSS/xss_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/XSS/xss_lab.html","spans":[{"file":"introduction/templates/Lab/XSS/xss_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab/XSS/xss_lab.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"file":"introduction/templates/Lab/XSS/xss_lab.html","start":{"line":39,"col":1,"offset":0},"end":{"line":41,"col":23,"offset":28}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/XSS/xss_lab_2.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab/XSS/xss_lab_2.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"path":"introduction/templates/Lab/XSS/xss_lab_2.html","start":{"line":52,"col":1,"offset":0},"end":{"line":52,"col":23,"offset":22}}]],"message":"Syntax error at line introduction/templates/Lab/XSS/xss_lab_2.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/XSS/xss_lab_2.html","spans":[{"file":"introduction/templates/Lab/XSS/xss_lab_2.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab/XSS/xss_lab_2.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"file":"introduction/templates/Lab/XSS/xss_lab_2.html","start":{"line":52,"col":1,"offset":0},"end":{"line":52,"col":23,"offset":22}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/XSS/xss_lab_3.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab/XSS/xss_lab_3.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"path":"introduction/templates/Lab/XSS/xss_lab_3.html","start":{"line":28,"col":1,"offset":0},"end":{"line":28,"col":23,"offset":22}}]],"message":"Syntax error at line introduction/templates/Lab/XSS/xss_lab_3.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/XSS/xss_lab_3.html","spans":[{"file":"introduction/templates/Lab/XSS/xss_lab_3.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab/XSS/xss_lab_3.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"file":"introduction/templates/Lab/XSS/xss_lab_3.html","start":{"line":28,"col":1,"offset":0},"end":{"line":28,"col":23,"offset":22}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/XXE/xxe.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab/XXE/xxe.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"path":"introduction/templates/Lab/XXE/xxe.html","start":{"line":57,"col":72,"offset":0},"end":{"line":57,"col":73,"offset":1}},{"path":"introduction/templates/Lab/XXE/xxe.html","start":{"line":59,"col":76,"offset":0},"end":{"line":59,"col":77,"offset":1}},{"path":"introduction/templates/Lab/XXE/xxe.html","start":{"line":60,"col":88,"offset":0},"end":{"line":60,"col":89,"offset":1}},{"path":"introduction/templates/Lab/XXE/xxe.html","start":{"line":61,"col":50,"offset":0},"end":{"line":61,"col":51,"offset":1}},{"path":"introduction/templates/Lab/XXE/xxe.html","start":{"line":62,"col":57,"offset":0},"end":{"line":62,"col":58,"offset":1}},{"path":"introduction/templates/Lab/XXE/xxe.html","start":{"line":63,"col":57,"offset":0},"end":{"line":63,"col":58,"offset":1}},{"path":"introduction/templates/Lab/XXE/xxe.html","start":{"line":63,"col":72,"offset":0},"end":{"line":63,"col":73,"offset":1}},{"path":"introduction/templates/Lab/XXE/xxe.html","start":{"line":64,"col":58,"offset":0},"end":{"line":64,"col":59,"offset":1}},{"path":"introduction/templates/Lab/XXE/xxe.html","start":{"line":98,"col":1,"offset":0},"end":{"line":98,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/Lab/XXE/xxe.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/XXE/xxe.html","spans":[{"file":"introduction/templates/Lab/XXE/xxe.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab/XXE/xxe.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"file":"introduction/templates/Lab/XXE/xxe.html","start":{"line":57,"col":72,"offset":0},"end":{"line":57,"col":73,"offset":1}},{"file":"introduction/templates/Lab/XXE/xxe.html","start":{"line":59,"col":76,"offset":0},"end":{"line":59,"col":77,"offset":1}},{"file":"introduction/templates/Lab/XXE/xxe.html","start":{"line":60,"col":88,"offset":0},"end":{"line":60,"col":89,"offset":1}},{"file":"introduction/templates/Lab/XXE/xxe.html","start":{"line":61,"col":50,"offset":0},"end":{"line":61,"col":51,"offset":1}},{"file":"introduction/templates/Lab/XXE/xxe.html","start":{"line":62,"col":57,"offset":0},"end":{"line":62,"col":58,"offset":1}},{"file":"introduction/templates/Lab/XXE/xxe.html","start":{"line":63,"col":57,"offset":0},"end":{"line":63,"col":58,"offset":1}},{"file":"introduction/templates/Lab/XXE/xxe.html","start":{"line":63,"col":72,"offset":0},"end":{"line":63,"col":73,"offset":1}},{"file":"introduction/templates/Lab/XXE/xxe.html","start":{"line":64,"col":58,"offset":0},"end":{"line":64,"col":59,"offset":1}},{"file":"introduction/templates/Lab/XXE/xxe.html","start":{"line":98,"col":1,"offset":0},"end":{"line":98,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/XXE/xxe_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"path":"introduction/templates/Lab/XXE/xxe_lab.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"path":"introduction/templates/Lab/XXE/xxe_lab.html","start":{"line":35,"col":1,"offset":0},"end":{"line":37,"col":15,"offset":20}}]],"message":"Syntax error at line introduction/templates/Lab/XXE/xxe_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/XXE/xxe_lab.html","spans":[{"file":"introduction/templates/Lab/XXE/xxe_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"file":"introduction/templates/Lab/XXE/xxe_lab.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"file":"introduction/templates/Lab/XXE/xxe_lab.html","start":{"line":35,"col":1,"offset":0},"end":{"line":37,"col":15,"offset":20}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/insec_des/insec_des.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab/insec_des/insec_des.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"path":"introduction/templates/Lab/insec_des/insec_des.html","start":{"line":82,"col":1,"offset":0},"end":{"line":82,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/Lab/insec_des/insec_des.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/insec_des/insec_des.html","spans":[{"file":"introduction/templates/Lab/insec_des/insec_des.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab/insec_des/insec_des.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"file":"introduction/templates/Lab/insec_des/insec_des.html","start":{"line":82,"col":1,"offset":0},"end":{"line":82,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/insec_des/insec_des_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab/insec_des/insec_des_lab.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"path":"introduction/templates/Lab/insec_des/insec_des_lab.html","start":{"line":17,"col":1,"offset":0},"end":{"line":19,"col":23,"offset":28}}]],"message":"Syntax error at line introduction/templates/Lab/insec_des/insec_des_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/insec_des/insec_des_lab.html","spans":[{"file":"introduction/templates/Lab/insec_des/insec_des_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab/insec_des/insec_des_lab.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"file":"introduction/templates/Lab/insec_des/insec_des_lab.html","start":{"line":17,"col":1,"offset":0},"end":{"line":19,"col":23,"offset":28}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/sec_mis/sec_mis.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab/sec_mis/sec_mis.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"path":"introduction/templates/Lab/sec_mis/sec_mis.html","start":{"line":85,"col":1,"offset":0},"end":{"line":85,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/Lab/sec_mis/sec_mis.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/sec_mis/sec_mis.html","spans":[{"file":"introduction/templates/Lab/sec_mis/sec_mis.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab/sec_mis/sec_mis.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"file":"introduction/templates/Lab/sec_mis/sec_mis.html","start":{"line":85,"col":1,"offset":0},"end":{"line":85,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/sec_mis/sec_mis_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"path":"introduction/templates/Lab/sec_mis/sec_mis_lab.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"path":"introduction/templates/Lab/sec_mis/sec_mis_lab.html","start":{"line":30,"col":1,"offset":0},"end":{"line":32,"col":23,"offset":28}}]],"message":"Syntax error at line introduction/templates/Lab/sec_mis/sec_mis_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/sec_mis/sec_mis_lab.html","spans":[{"file":"introduction/templates/Lab/sec_mis/sec_mis_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"file":"introduction/templates/Lab/sec_mis/sec_mis_lab.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"file":"introduction/templates/Lab/sec_mis/sec_mis_lab.html","start":{"line":30,"col":1,"offset":0},"end":{"line":32,"col":23,"offset":28}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/sec_mis/sec_mis_lab3.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"path":"introduction/templates/Lab/sec_mis/sec_mis_lab3.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"path":"introduction/templates/Lab/sec_mis/sec_mis_lab3.html","start":{"line":51,"col":1,"offset":0},"end":{"line":53,"col":23,"offset":28}}]],"message":"Syntax error at line introduction/templates/Lab/sec_mis/sec_mis_lab3.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/sec_mis/sec_mis_lab3.html","spans":[{"file":"introduction/templates/Lab/sec_mis/sec_mis_lab3.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"file":"introduction/templates/Lab/sec_mis/sec_mis_lab3.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"file":"introduction/templates/Lab/sec_mis/sec_mis_lab3.html","start":{"line":51,"col":1,"offset":0},"end":{"line":53,"col":23,"offset":28}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/ssrf/ssrf.html","start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":77,"offset":76}},{"path":"introduction/templates/Lab/ssrf/ssrf.html","start":{"line":3,"col":1,"offset":0},"end":{"line":3,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/Lab/ssrf/ssrf.html:1:\n `{% extends 'introduction/base.html' %} {% block content %} {% block title %}` was unexpected","path":"introduction/templates/Lab/ssrf/ssrf.html","spans":[{"file":"introduction/templates/Lab/ssrf/ssrf.html","start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":77,"offset":76}},{"file":"introduction/templates/Lab/ssrf/ssrf.html","start":{"line":3,"col":1,"offset":0},"end":{"line":3,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/ssrf/ssrf_discussion.html","start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":77,"offset":76}},{"path":"introduction/templates/Lab/ssrf/ssrf_discussion.html","start":{"line":3,"col":1,"offset":0},"end":{"line":3,"col":15,"offset":14}},{"path":"introduction/templates/Lab/ssrf/ssrf_discussion.html","start":{"line":73,"col":209,"offset":0},"end":{"line":73,"col":210,"offset":1}},{"path":"introduction/templates/Lab/ssrf/ssrf_discussion.html","start":{"line":77,"col":209,"offset":0},"end":{"line":77,"col":210,"offset":1}},{"path":"introduction/templates/Lab/ssrf/ssrf_discussion.html","start":{"line":81,"col":210,"offset":0},"end":{"line":81,"col":211,"offset":1}},{"path":"introduction/templates/Lab/ssrf/ssrf_discussion.html","start":{"line":85,"col":210,"offset":0},"end":{"line":85,"col":211,"offset":1}},{"path":"introduction/templates/Lab/ssrf/ssrf_discussion.html","start":{"line":157,"col":1,"offset":0},"end":{"line":157,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/Lab/ssrf/ssrf_discussion.html:1:\n `{% extends 'introduction/base.html' %} {% block content %} {% block title %}` was unexpected","path":"introduction/templates/Lab/ssrf/ssrf_discussion.html","spans":[{"file":"introduction/templates/Lab/ssrf/ssrf_discussion.html","start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":77,"offset":76}},{"file":"introduction/templates/Lab/ssrf/ssrf_discussion.html","start":{"line":3,"col":1,"offset":0},"end":{"line":3,"col":15,"offset":14}},{"file":"introduction/templates/Lab/ssrf/ssrf_discussion.html","start":{"line":73,"col":209,"offset":0},"end":{"line":73,"col":210,"offset":1}},{"file":"introduction/templates/Lab/ssrf/ssrf_discussion.html","start":{"line":77,"col":209,"offset":0},"end":{"line":77,"col":210,"offset":1}},{"file":"introduction/templates/Lab/ssrf/ssrf_discussion.html","start":{"line":81,"col":210,"offset":0},"end":{"line":81,"col":211,"offset":1}},{"file":"introduction/templates/Lab/ssrf/ssrf_discussion.html","start":{"line":85,"col":210,"offset":0},"end":{"line":85,"col":211,"offset":1}},{"file":"introduction/templates/Lab/ssrf/ssrf_discussion.html","start":{"line":157,"col":1,"offset":0},"end":{"line":157,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/ssrf/ssrf_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab/ssrf/ssrf_lab.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/Lab/ssrf/ssrf_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/ssrf/ssrf_lab.html","spans":[{"file":"introduction/templates/Lab/ssrf/ssrf_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab/ssrf/ssrf_lab.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab/ssrf/ssrf_lab2.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab/ssrf/ssrf_lab2.html","start":{"line":5,"col":1,"offset":0},"end":{"line":52,"col":15,"offset":1591}}]],"message":"Syntax error at line introduction/templates/Lab/ssrf/ssrf_lab2.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab/ssrf/ssrf_lab2.html","spans":[{"file":"introduction/templates/Lab/ssrf/ssrf_lab2.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab/ssrf/ssrf_lab2.html","start":{"line":5,"col":1,"offset":0},"end":{"line":52,"col":15,"offset":1591}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"path":"introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access.html","start":{"line":147,"col":1,"offset":0},"end":{"line":147,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access.html","spans":[{"file":"introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"file":"introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access.html","start":{"line":147,"col":1,"offset":0},"end":{"line":147,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_1.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"path":"introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_1.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"path":"introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_1.html","start":{"line":44,"col":1,"offset":0},"end":{"line":46,"col":15,"offset":20}}]],"message":"Syntax error at line introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_1.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_1.html","spans":[{"file":"introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_1.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"file":"introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_1.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"file":"introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_1.html","start":{"line":44,"col":1,"offset":0},"end":{"line":46,"col":15,"offset":20}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_2.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"path":"introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_2.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"path":"introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_2.html","start":{"line":48,"col":1,"offset":0},"end":{"line":53,"col":15,"offset":132}}]],"message":"Syntax error at line introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_2.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_2.html","spans":[{"file":"introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_2.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"file":"introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_2.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"file":"introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_2.html","start":{"line":48,"col":1,"offset":0},"end":{"line":53,"col":15,"offset":132}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_3.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"path":"introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_3.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"path":"introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_3.html","start":{"line":40,"col":1,"offset":0},"end":{"line":42,"col":15,"offset":20}}]],"message":"Syntax error at line introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_3.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_3.html","spans":[{"file":"introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_3.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"file":"introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_3.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"file":"introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_3.html","start":{"line":40,"col":1,"offset":0},"end":{"line":42,"col":15,"offset":20}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure.html","start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":77,"offset":76}},{"path":"introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure.html","start":{"line":3,"col":1,"offset":0},"end":{"line":3,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure.html:1:\n `{% extends 'introduction/base.html' %} {% block content %} {% block title %}` was unexpected","path":"introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure.html","spans":[{"file":"introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure.html","start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":77,"offset":76}},{"file":"introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure.html","start":{"line":3,"col":1,"offset":0},"end":{"line":3,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"path":"introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab.html","start":{"line":6,"col":1,"offset":0},"end":{"line":9,"col":17,"offset":33}}]],"message":"Syntax error at line introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab.html","spans":[{"file":"introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"file":"introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab.html","start":{"line":6,"col":1,"offset":0},"end":{"line":9,"col":17,"offset":33}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab2.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"path":"introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab2.html","start":{"line":6,"col":1,"offset":0},"end":{"line":9,"col":17,"offset":33}}]],"message":"Syntax error at line introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab2.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab2.html","spans":[{"file":"introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab2.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"file":"introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab2.html","start":{"line":6,"col":1,"offset":0},"end":{"line":9,"col":17,"offset":33}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"path":"introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html","start":{"line":6,"col":1,"offset":0},"end":{"line":9,"col":17,"offset":33}},{"path":"introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html","start":{"line":10,"col":36,"offset":0},"end":{"line":14,"col":11,"offset":125}},{"path":"introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html","start":{"line":26,"col":1,"offset":0},"end":{"line":26,"col":17,"offset":16}},{"path":"introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html","start":{"line":28,"col":1,"offset":0},"end":{"line":28,"col":12,"offset":11}},{"path":"introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html","start":{"line":31,"col":1,"offset":0},"end":{"line":31,"col":12,"offset":11}},{"path":"introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html","start":{"line":44,"col":1,"offset":0},"end":{"line":46,"col":15,"offset":20}}]],"message":"Syntax error at line introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html","spans":[{"file":"introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"file":"introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html","start":{"line":6,"col":1,"offset":0},"end":{"line":9,"col":17,"offset":33}},{"file":"introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html","start":{"line":10,"col":36,"offset":0},"end":{"line":14,"col":11,"offset":125}},{"file":"introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html","start":{"line":26,"col":1,"offset":0},"end":{"line":26,"col":17,"offset":16}},{"file":"introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html","start":{"line":28,"col":1,"offset":0},"end":{"line":28,"col":12,"offset":11}},{"file":"introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html","start":{"line":31,"col":1,"offset":0},"end":{"line":31,"col":12,"offset":11}},{"file":"introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html","start":{"line":44,"col":1,"offset":0},"end":{"line":46,"col":15,"offset":20}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab_2021/A3_Injection/injection.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab_2021/A3_Injection/injection.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"path":"introduction/templates/Lab_2021/A3_Injection/injection.html","start":{"line":94,"col":1,"offset":0},"end":{"line":94,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/Lab_2021/A3_Injection/injection.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab_2021/A3_Injection/injection.html","spans":[{"file":"introduction/templates/Lab_2021/A3_Injection/injection.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab_2021/A3_Injection/injection.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"file":"introduction/templates/Lab_2021/A3_Injection/injection.html","start":{"line":94,"col":1,"offset":0},"end":{"line":94,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab_2021/A3_Injection/sql_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab_2021/A3_Injection/sql_lab.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"path":"introduction/templates/Lab_2021/A3_Injection/sql_lab.html","start":{"line":46,"col":1,"offset":0},"end":{"line":48,"col":15,"offset":20}}]],"message":"Syntax error at line introduction/templates/Lab_2021/A3_Injection/sql_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab_2021/A3_Injection/sql_lab.html","spans":[{"file":"introduction/templates/Lab_2021/A3_Injection/sql_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab_2021/A3_Injection/sql_lab.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"file":"introduction/templates/Lab_2021/A3_Injection/sql_lab.html","start":{"line":46,"col":1,"offset":0},"end":{"line":48,"col":15,"offset":20}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab_2021/A3_Injection/ssti.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab_2021/A3_Injection/ssti.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"path":"introduction/templates/Lab_2021/A3_Injection/ssti.html","start":{"line":42,"col":1,"offset":0},"end":{"line":42,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/Lab_2021/A3_Injection/ssti.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab_2021/A3_Injection/ssti.html","spans":[{"file":"introduction/templates/Lab_2021/A3_Injection/ssti.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab_2021/A3_Injection/ssti.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"file":"introduction/templates/Lab_2021/A3_Injection/ssti.html","start":{"line":42,"col":1,"offset":0},"end":{"line":42,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab_2021/A3_Injection/ssti_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab_2021/A3_Injection/ssti_lab.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"path":"introduction/templates/Lab_2021/A3_Injection/ssti_lab.html","start":{"line":28,"col":1,"offset":0},"end":{"line":28,"col":106,"offset":105}}]],"message":"Syntax error at line introduction/templates/Lab_2021/A3_Injection/ssti_lab.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab_2021/A3_Injection/ssti_lab.html","spans":[{"file":"introduction/templates/Lab_2021/A3_Injection/ssti_lab.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab_2021/A3_Injection/ssti_lab.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"file":"introduction/templates/Lab_2021/A3_Injection/ssti_lab.html","start":{"line":28,"col":1,"offset":0},"end":{"line":28,"col":106,"offset":105}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab_2021/A7_auth_failure/a7.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab_2021/A7_auth_failure/a7.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"path":"introduction/templates/Lab_2021/A7_auth_failure/a7.html","start":{"line":98,"col":17,"offset":0},"end":{"line":98,"col":32,"offset":15}},{"path":"introduction/templates/Lab_2021/A7_auth_failure/a7.html","start":{"line":139,"col":1,"offset":0},"end":{"line":143,"col":15,"offset":24}}]],"message":"Syntax error at line introduction/templates/Lab_2021/A7_auth_failure/a7.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab_2021/A7_auth_failure/a7.html","spans":[{"file":"introduction/templates/Lab_2021/A7_auth_failure/a7.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab_2021/A7_auth_failure/a7.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"file":"introduction/templates/Lab_2021/A7_auth_failure/a7.html","start":{"line":98,"col":17,"offset":0},"end":{"line":98,"col":32,"offset":15}},{"file":"introduction/templates/Lab_2021/A7_auth_failure/a7.html","start":{"line":139,"col":1,"offset":0},"end":{"line":143,"col":15,"offset":24}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab_2021/A7_auth_failure/lab2.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab_2021/A7_auth_failure/lab2.html","start":{"line":5,"col":1,"offset":0},"end":{"line":82,"col":15,"offset":3825}}]],"message":"Syntax error at line introduction/templates/Lab_2021/A7_auth_failure/lab2.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab_2021/A7_auth_failure/lab2.html","spans":[{"file":"introduction/templates/Lab_2021/A7_auth_failure/lab2.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab_2021/A7_auth_failure/lab2.html","start":{"line":5,"col":1,"offset":0},"end":{"line":82,"col":15,"offset":3825}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab_2021/A7_auth_failure/lab3.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab_2021/A7_auth_failure/lab3.html","start":{"line":5,"col":1,"offset":0},"end":{"line":79,"col":15,"offset":3055}}]],"message":"Syntax error at line introduction/templates/Lab_2021/A7_auth_failure/lab3.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab_2021/A7_auth_failure/lab3.html","spans":[{"file":"introduction/templates/Lab_2021/A7_auth_failure/lab3.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab_2021/A7_auth_failure/lab3.html","start":{"line":5,"col":1,"offset":0},"end":{"line":79,"col":15,"offset":3055}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/desc.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/desc.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"path":"introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/desc.html","start":{"line":96,"col":1,"offset":0},"end":{"line":96,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/desc.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/desc.html","spans":[{"file":"introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/desc.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/desc.html","start":{"line":5,"col":1,"offset":0},"end":{"line":5,"col":15,"offset":14}},{"file":"introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/desc.html","start":{"line":96,"col":1,"offset":0},"end":{"line":96,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/lab2.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"path":"introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/lab2.html","start":{"line":5,"col":1,"offset":0},"end":{"line":10,"col":22,"offset":73}},{"path":"introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/lab2.html","start":{"line":12,"col":1,"offset":0},"end":{"line":12,"col":11,"offset":10}},{"path":"introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/lab2.html","start":{"line":22,"col":1,"offset":0},"end":{"line":25,"col":106,"offset":119}}]],"message":"Syntax error at line introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/lab2.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/lab2.html","spans":[{"file":"introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/lab2.html","start":{"line":1,"col":1,"offset":0},"end":{"line":3,"col":18,"offset":76}},{"file":"introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/lab2.html","start":{"line":5,"col":1,"offset":0},"end":{"line":10,"col":22,"offset":73}},{"file":"introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/lab2.html","start":{"line":12,"col":1,"offset":0},"end":{"line":12,"col":11,"offset":10}},{"file":"introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/lab2.html","start":{"line":22,"col":1,"offset":0},"end":{"line":25,"col":106,"offset":119}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/introduction/base.html","start":{"line":2,"col":1,"offset":0},"end":{"line":2,"col":18,"offset":17}},{"path":"introduction/templates/introduction/base.html","start":{"line":598,"col":45,"offset":0},"end":{"line":598,"col":57,"offset":12}}]],"message":"Syntax error at line introduction/templates/introduction/base.html:2:\n `{% load static %}` was unexpected","path":"introduction/templates/introduction/base.html","spans":[{"file":"introduction/templates/introduction/base.html","start":{"line":2,"col":1,"offset":0},"end":{"line":2,"col":18,"offset":17}},{"file":"introduction/templates/introduction/base.html","start":{"line":598,"col":45,"offset":0},"end":{"line":598,"col":57,"offset":12}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/mitre/csrf_dashboard.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"path":"introduction/templates/mitre/csrf_dashboard.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"path":"introduction/templates/mitre/csrf_dashboard.html","start":{"line":31,"col":1,"offset":0},"end":{"line":31,"col":23,"offset":22}}]],"message":"Syntax error at line introduction/templates/mitre/csrf_dashboard.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/mitre/csrf_dashboard.html","spans":[{"file":"introduction/templates/mitre/csrf_dashboard.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"file":"introduction/templates/mitre/csrf_dashboard.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"file":"introduction/templates/mitre/csrf_dashboard.html","start":{"line":31,"col":1,"offset":0},"end":{"line":31,"col":23,"offset":22}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/mitre/mitre_lab_17.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"path":"introduction/templates/mitre/mitre_lab_17.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/mitre/mitre_lab_17.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/mitre/mitre_lab_17.html","spans":[{"file":"introduction/templates/mitre/mitre_lab_17.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"file":"introduction/templates/mitre/mitre_lab_17.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/mitre/mitre_lab_25.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"path":"introduction/templates/mitre/mitre_lab_25.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"path":"introduction/templates/mitre/mitre_lab_25.html","start":{"line":47,"col":1,"offset":0},"end":{"line":47,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/mitre/mitre_lab_25.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/mitre/mitre_lab_25.html","spans":[{"file":"introduction/templates/mitre/mitre_lab_25.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"file":"introduction/templates/mitre/mitre_lab_25.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"file":"introduction/templates/mitre/mitre_lab_25.html","start":{"line":47,"col":1,"offset":0},"end":{"line":47,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/mitre/mitre_top14.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"path":"introduction/templates/mitre/mitre_top14.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"path":"introduction/templates/mitre/mitre_top14.html","start":{"line":83,"col":17,"offset":0},"end":{"line":83,"col":32,"offset":15}},{"path":"introduction/templates/mitre/mitre_top14.html","start":{"line":121,"col":5,"offset":0},"end":{"line":123,"col":15,"offset":22}}]],"message":"Syntax error at line introduction/templates/mitre/mitre_top14.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/mitre/mitre_top14.html","spans":[{"file":"introduction/templates/mitre/mitre_top14.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"file":"introduction/templates/mitre/mitre_top14.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"file":"introduction/templates/mitre/mitre_top14.html","start":{"line":83,"col":17,"offset":0},"end":{"line":83,"col":32,"offset":15}},{"file":"introduction/templates/mitre/mitre_top14.html","start":{"line":121,"col":5,"offset":0},"end":{"line":123,"col":15,"offset":22}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/mitre/mitre_top17.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"path":"introduction/templates/mitre/mitre_top17.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"path":"introduction/templates/mitre/mitre_top17.html","start":{"line":33,"col":1,"offset":0},"end":{"line":33,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/mitre/mitre_top17.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/mitre/mitre_top17.html","spans":[{"file":"introduction/templates/mitre/mitre_top17.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"file":"introduction/templates/mitre/mitre_top17.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"file":"introduction/templates/mitre/mitre_top17.html","start":{"line":33,"col":1,"offset":0},"end":{"line":33,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/mitre/mitre_top2.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"path":"introduction/templates/mitre/mitre_top2.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"path":"introduction/templates/mitre/mitre_top2.html","start":{"line":41,"col":1,"offset":0},"end":{"line":41,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/mitre/mitre_top2.html:1:\n `{% extends \"introduction/base.html\" %}\n{% load static %}\n{% block content %}\n{% block title %}` was unexpected","path":"introduction/templates/mitre/mitre_top2.html","spans":[{"file":"introduction/templates/mitre/mitre_top2.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":94}},{"file":"introduction/templates/mitre/mitre_top2.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"file":"introduction/templates/mitre/mitre_top2.html","start":{"line":41,"col":1,"offset":0},"end":{"line":41,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/mitre/mitre_top21.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":19,"offset":99}},{"path":"introduction/templates/mitre/mitre_top21.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"path":"introduction/templates/mitre/mitre_top21.html","start":{"line":53,"col":1,"offset":0},"end":{"line":53,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/mitre/mitre_top21.html:1:\n `{% extends \"introduction/base.html\" %}\n {% load static %} \n {% block content %} \n {% block title %}` was unexpected","path":"introduction/templates/mitre/mitre_top21.html","spans":[{"file":"introduction/templates/mitre/mitre_top21.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":19,"offset":99}},{"file":"introduction/templates/mitre/mitre_top21.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"file":"introduction/templates/mitre/mitre_top21.html","start":{"line":53,"col":1,"offset":0},"end":{"line":53,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/mitre/mitre_top25.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":17,"offset":95}},{"path":"introduction/templates/mitre/mitre_top25.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/mitre/mitre_top25.html:1:\n `{% extends \"introduction/base.html\" %} \n{% load static %} \n{% block content %}\n{%block title %}` was unexpected","path":"introduction/templates/mitre/mitre_top25.html","spans":[{"file":"introduction/templates/mitre/mitre_top25.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":17,"offset":95}},{"file":"introduction/templates/mitre/mitre_top25.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/mitre/mitre_top3.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":97}},{"path":"introduction/templates/mitre/mitre_top3.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/mitre/mitre_top3.html:1:\n `{% extends \"introduction/base.html\" %} \n{% load static %} \n{% block content %} \n{% block title %}` was unexpected","path":"introduction/templates/mitre/mitre_top3.html","spans":[{"file":"introduction/templates/mitre/mitre_top3.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":97}},{"file":"introduction/templates/mitre/mitre_top3.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/mitre/mitre_top4.html","start":{"line":1,"col":1,"offset":0},"end":{"line":2,"col":18,"offset":95}},{"path":"introduction/templates/mitre/mitre_top4.html","start":{"line":4,"col":1,"offset":0},"end":{"line":4,"col":15,"offset":14}},{"path":"introduction/templates/mitre/mitre_top4.html","start":{"line":92,"col":1,"offset":0},"end":{"line":92,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/mitre/mitre_top4.html:1:\n `{% extends \"introduction/base.html\" %} {% load static %} {% block content %} \n{% block title %}` was unexpected","path":"introduction/templates/mitre/mitre_top4.html","spans":[{"file":"introduction/templates/mitre/mitre_top4.html","start":{"line":1,"col":1,"offset":0},"end":{"line":2,"col":18,"offset":95}},{"file":"introduction/templates/mitre/mitre_top4.html","start":{"line":4,"col":1,"offset":0},"end":{"line":4,"col":15,"offset":14}},{"file":"introduction/templates/mitre/mitre_top4.html","start":{"line":92,"col":1,"offset":0},"end":{"line":92,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/mitre/mitre_top6.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":97}},{"path":"introduction/templates/mitre/mitre_top6.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"path":"introduction/templates/mitre/mitre_top6.html","start":{"line":77,"col":61,"offset":0},"end":{"line":77,"col":73,"offset":12}},{"path":"introduction/templates/mitre/mitre_top6.html","start":{"line":78,"col":57,"offset":0},"end":{"line":78,"col":63,"offset":6}},{"path":"introduction/templates/mitre/mitre_top6.html","start":{"line":102,"col":51,"offset":0},"end":{"line":102,"col":57,"offset":6}},{"path":"introduction/templates/mitre/mitre_top6.html","start":{"line":103,"col":35,"offset":0},"end":{"line":103,"col":41,"offset":6}},{"path":"introduction/templates/mitre/mitre_top6.html","start":{"line":104,"col":19,"offset":0},"end":{"line":104,"col":21,"offset":2}},{"path":"introduction/templates/mitre/mitre_top6.html","start":{"line":125,"col":1,"offset":0},"end":{"line":125,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/mitre/mitre_top6.html:1:\n `{% extends \"introduction/base.html\" %} \n{% load static %} \n{% block content %} \n{% block title %}` was unexpected","path":"introduction/templates/mitre/mitre_top6.html","spans":[{"file":"introduction/templates/mitre/mitre_top6.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":97}},{"file":"introduction/templates/mitre/mitre_top6.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"file":"introduction/templates/mitre/mitre_top6.html","start":{"line":77,"col":61,"offset":0},"end":{"line":77,"col":73,"offset":12}},{"file":"introduction/templates/mitre/mitre_top6.html","start":{"line":78,"col":57,"offset":0},"end":{"line":78,"col":63,"offset":6}},{"file":"introduction/templates/mitre/mitre_top6.html","start":{"line":102,"col":51,"offset":0},"end":{"line":102,"col":57,"offset":6}},{"file":"introduction/templates/mitre/mitre_top6.html","start":{"line":103,"col":35,"offset":0},"end":{"line":103,"col":41,"offset":6}},{"file":"introduction/templates/mitre/mitre_top6.html","start":{"line":104,"col":19,"offset":0},"end":{"line":104,"col":21,"offset":2}},{"file":"introduction/templates/mitre/mitre_top6.html","start":{"line":125,"col":1,"offset":0},"end":{"line":125,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/mitre/mitre_top8.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":97}},{"path":"introduction/templates/mitre/mitre_top8.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"path":"introduction/templates/mitre/mitre_top8.html","start":{"line":44,"col":1,"offset":0},"end":{"line":44,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/mitre/mitre_top8.html:1:\n `{% extends \"introduction/base.html\" %} \n{% load static %} \n{% block content %} \n{% block title %}` was unexpected","path":"introduction/templates/mitre/mitre_top8.html","spans":[{"file":"introduction/templates/mitre/mitre_top8.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":97}},{"file":"introduction/templates/mitre/mitre_top8.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"file":"introduction/templates/mitre/mitre_top8.html","start":{"line":44,"col":1,"offset":0},"end":{"line":44,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/mitre/mitre_top9.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":17,"offset":96}},{"path":"introduction/templates/mitre/mitre_top9.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"path":"introduction/templates/mitre/mitre_top9.html","start":{"line":44,"col":1,"offset":0},"end":{"line":44,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/mitre/mitre_top9.html:1:\n `{% extends \"introduction/base.html\" %} \n{% load static %} \n{% block content %} \n{%block title %}` was unexpected","path":"introduction/templates/mitre/mitre_top9.html","spans":[{"file":"introduction/templates/mitre/mitre_top9.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":17,"offset":96}},{"file":"introduction/templates/mitre/mitre_top9.html","start":{"line":6,"col":1,"offset":0},"end":{"line":6,"col":15,"offset":14}},{"file":"introduction/templates/mitre/mitre_top9.html","start":{"line":44,"col":1,"offset":0},"end":{"line":44,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/playground/A7/index.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":77}},{"path":"introduction/templates/playground/A7/index.html","start":{"line":6,"col":1,"offset":0},"end":{"line":7,"col":18,"offset":32}},{"path":"introduction/templates/playground/A7/index.html","start":{"line":61,"col":1,"offset":0},"end":{"line":61,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/playground/A7/index.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n\n{% block title %}` was unexpected","path":"introduction/templates/playground/A7/index.html","spans":[{"file":"introduction/templates/playground/A7/index.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":77}},{"file":"introduction/templates/playground/A7/index.html","start":{"line":6,"col":1,"offset":0},"end":{"line":7,"col":18,"offset":32}},{"file":"introduction/templates/playground/A7/index.html","start":{"line":61,"col":1,"offset":0},"end":{"line":61,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/playground/A9/index.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":77}},{"path":"introduction/templates/playground/A9/index.html","start":{"line":5,"col":29,"offset":0},"end":{"line":5,"col":41,"offset":12}},{"path":"introduction/templates/playground/A9/index.html","start":{"line":6,"col":1,"offset":0},"end":{"line":7,"col":18,"offset":32}},{"path":"introduction/templates/playground/A9/index.html","start":{"line":16,"col":64,"offset":0},"end":{"line":16,"col":77,"offset":13}},{"path":"introduction/templates/playground/A9/index.html","start":{"line":40,"col":31,"offset":0},"end":{"line":52,"col":13,"offset":226}},{"path":"introduction/templates/playground/A9/index.html","start":{"line":102,"col":1,"offset":0},"end":{"line":102,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/playground/A9/index.html:1:\n `{% extends 'introduction/base.html' %}\n{% block content %}\n\n{% block title %}` was unexpected","path":"introduction/templates/playground/A9/index.html","spans":[{"file":"introduction/templates/playground/A9/index.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":18,"offset":77}},{"file":"introduction/templates/playground/A9/index.html","start":{"line":5,"col":29,"offset":0},"end":{"line":5,"col":41,"offset":12}},{"file":"introduction/templates/playground/A9/index.html","start":{"line":6,"col":1,"offset":0},"end":{"line":7,"col":18,"offset":32}},{"file":"introduction/templates/playground/A9/index.html","start":{"line":16,"col":64,"offset":0},"end":{"line":16,"col":77,"offset":13}},{"file":"introduction/templates/playground/A9/index.html","start":{"line":40,"col":31,"offset":0},"end":{"line":52,"col":13,"offset":226}},{"file":"introduction/templates/playground/A9/index.html","start":{"line":102,"col":1,"offset":0},"end":{"line":102,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/registration/login.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":25,"offset":112}},{"path":"introduction/templates/registration/login.html","start":{"line":37,"col":1,"offset":0},"end":{"line":37,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/registration/login.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %}\n{% load crispy_forms_tags %}\n{% load socialaccount %}` was unexpected","path":"introduction/templates/registration/login.html","spans":[{"file":"introduction/templates/registration/login.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":25,"offset":112}},{"file":"introduction/templates/registration/login.html","start":{"line":37,"col":1,"offset":0},"end":{"line":37,"col":15,"offset":14}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"introduction/templates/registration/register.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":29,"offset":89}},{"path":"introduction/templates/registration/register.html","start":{"line":25,"col":1,"offset":0},"end":{"line":25,"col":15,"offset":14}}]],"message":"Syntax error at line introduction/templates/registration/register.html:1:\n `{% extends \"introduction/base.html\" %}\n{% block content %} \n\n{% load crispy_forms_tags %}` was unexpected","path":"introduction/templates/registration/register.html","spans":[{"file":"introduction/templates/registration/register.html","start":{"line":1,"col":1,"offset":0},"end":{"line":4,"col":29,"offset":89}},{"file":"introduction/templates/registration/register.html","start":{"line":25,"col":1,"offset":0},"end":{"line":25,"col":15,"offset":14}}]}],"paths":{"scanned":[".all-contributorsrc",".github/workflows/flake8.yml",".github/workflows/hadolint.yml",".gitignore",".vscode/settings.json","CHANGELOG.md","Dockerfile","LICENSE.md","Procfile","PyGoatBot.py","README.md","Solutions/img/img4.png","Solutions/img/pic1.png","Solutions/img/pic2.png","Solutions/img/pic3.png","Solutions/solution.md","challenge/README.md","challenge/__init__.py","challenge/admin.py","challenge/apps.py","challenge/challenge.json","challenge/management/commands/populate_challenge.py","challenge/management/commands/populate_challenges.py","challenge/migrations/0001_initial.py","challenge/migrations/0002_challenge_docker_port.py","challenge/migrations/0003_alter_challenge_docker_image_alter_challenge_id_and_more.py","challenge/migrations/__init__.py","challenge/models.py","challenge/templates/chal-not-found.html","challenge/templates/challenge.html","challenge/tests.py","challenge/urls.py","challenge/utility.py","challenge/views.py","chatbot/README.md","chatbot/pygoatbot.ipynb","docker-compose.yml","dockerized_labs/broken_auth_lab/Dockerfile","dockerized_labs/broken_auth_lab/README.md","dockerized_labs/broken_auth_lab/app.py","dockerized_labs/broken_auth_lab/docker-compose.yml","dockerized_labs/broken_auth_lab/requirements.txt","dockerized_labs/broken_auth_lab/static/style.css","dockerized_labs/broken_auth_lab/templates/base.html","dockerized_labs/broken_auth_lab/templates/dashboard.html","dockerized_labs/broken_auth_lab/templates/index.html","dockerized_labs/broken_auth_lab/templates/lab.html","dockerized_labs/broken_auth_lab/templates/reset.html","dockerized_labs/insec_des_lab/.dockerignore","dockerized_labs/insec_des_lab/Dockerfile","dockerized_labs/insec_des_lab/README.md","dockerized_labs/insec_des_lab/docker-compose.yml","dockerized_labs/insec_des_lab/main.py","dockerized_labs/insec_des_lab/requirements.txt","dockerized_labs/insec_des_lab/static/style.css","dockerized_labs/insec_des_lab/templates/base.html","dockerized_labs/insec_des_lab/templates/index.html","dockerized_labs/insec_des_lab/templates/result.html","dockerized_labs/sensitive_data_exposure/Dockerfile","dockerized_labs/sensitive_data_exposure/README.md","dockerized_labs/sensitive_data_exposure/dataexposure/__init__.py","dockerized_labs/sensitive_data_exposure/dataexposure/forms.py","dockerized_labs/sensitive_data_exposure/dataexposure/migrations/0001_initial.py","dockerized_labs/sensitive_data_exposure/dataexposure/migrations/__init__.py","dockerized_labs/sensitive_data_exposure/dataexposure/models.py","dockerized_labs/sensitive_data_exposure/dataexposure/urls.py","dockerized_labs/sensitive_data_exposure/dataexposure/views.py","dockerized_labs/sensitive_data_exposure/docker-compose.yml","dockerized_labs/sensitive_data_exposure/entrypoint.sh","dockerized_labs/sensitive_data_exposure/manage.py","dockerized_labs/sensitive_data_exposure/requirements.txt","dockerized_labs/sensitive_data_exposure/sensitive_data_lab/__init__.py","dockerized_labs/sensitive_data_exposure/sensitive_data_lab/settings.py","dockerized_labs/sensitive_data_exposure/sensitive_data_lab/urls.py","dockerized_labs/sensitive_data_exposure/sensitive_data_lab/wsgi.py","dockerized_labs/sensitive_data_exposure/templates/about.html","dockerized_labs/sensitive_data_exposure/templates/base.html","dockerized_labs/sensitive_data_exposure/templates/index.html","dockerized_labs/sensitive_data_exposure/templates/lesson.html","dockerized_labs/sensitive_data_exposure/templates/login.html","dockerized_labs/sensitive_data_exposure/templates/profile.html","dockerized_labs/sensitive_data_exposure/templates/register.html","docs/dev_guide.md","gh-md-toc","installer.sh","introduction/__init__.py","introduction/admin.py","introduction/apis.py","introduction/apps.py","introduction/forms.py","introduction/lab_code/test.py","introduction/migrations/0001_initial.py","introduction/migrations/0002_auto_20210414_1510.py","introduction/migrations/0003_password_user.py","introduction/migrations/0004_auto_20210415_1722.py","introduction/migrations/0005_auto_20210415_1748.py","introduction/migrations/0006_comments.py","introduction/migrations/0007_auto_20210418_0022.py","introduction/migrations/0008_otp.py","introduction/migrations/0009_auto_20210517_2047.py","introduction/migrations/0010_authlogin.py","introduction/migrations/0011_tickits.py","introduction/migrations/0012_alter_tickits_user.py","introduction/migrations/0013_alter_comments_id_alter_faang_id_alter_info_id_and_more.py","introduction/migrations/0014_sql_lab_table.py","introduction/migrations/0015_blogs.py","introduction/migrations/0016_alter_blogs_blog_id.py","introduction/migrations/0017_cf_user.py","introduction/migrations/0018_cf_user_password2.py","introduction/migrations/0019_af_admin.py","introduction/migrations/0020_af_session_id_alter_af_admin_lockout_cooldown.py","introduction/migrations/0021_csrf_user_tbl.py","introduction/migrations/__init__.py","introduction/mitre.py","introduction/models.py","introduction/playground/A6/soln.py","introduction/playground/A6/utility.py","introduction/playground/A9/api.py","introduction/playground/A9/archive.py","introduction/playground/A9/main.py","introduction/playground/__init__.py","introduction/playground/readme.md","introduction/playground/ssrf/__init__.py","introduction/playground/ssrf/main.py","introduction/playground/ssrf/secret.txt","introduction/playground/ssrf/templates/Lab/ssrf/blogs/blog1.txt","introduction/playground/ssrf/templates/Lab/ssrf/blogs/blog2.txt","introduction/playground/ssrf/templates/Lab/ssrf/blogs/blog3.txt","introduction/playground/ssrf/templates/Lab/ssrf/blogs/blog4.txt","introduction/playground/ssrf/test.py","introduction/static/Lab/icons/pygoat-mini.png","introduction/static/Lab/icons/pygoat-mini.svg","introduction/static/Lab/icons/pygoat-small.png","introduction/static/Lab/icons/pygoat-small.svg","introduction/static/Lab/icons/pygoat.png","introduction/static/Lab/icons/pygoat.svg","introduction/static/Lab/image/xxe.jpg","introduction/static/Lab/ssrf.css","introduction/static/Lab/ssrf.js","introduction/static/Lab/ssti.css","introduction/static/Lab/xss.js","introduction/static/css/common.css","introduction/static/css/dark-challenges.css","introduction/static/css/dark-theme.css","introduction/static/css/home.css","introduction/static/css/light.css","introduction/static/css/playground.css","introduction/static/css/style.css","introduction/static/fake.txt","introduction/static/google.jpg","introduction/static/js/a6.js","introduction/static/js/a7.js","introduction/static/js/a9.js","introduction/static/real.txt","introduction/templates/Lab/A10/a10.html","introduction/templates/Lab/A10/a10_lab.html","introduction/templates/Lab/A10/a10_lab2.html","introduction/templates/Lab/A10/debug.log","introduction/templates/Lab/A11/a11.html","introduction/templates/Lab/A11/a11_lab.html","introduction/templates/Lab/A9/a9.html","introduction/templates/Lab/A9/a9_lab.html","introduction/templates/Lab/A9/a9_lab2.html","introduction/templates/Lab/AUTH/auth_home.html","introduction/templates/Lab/AUTH/auth_lab.html","introduction/templates/Lab/AUTH/auth_lab_login.html","introduction/templates/Lab/AUTH/auth_lab_signup.html","introduction/templates/Lab/AUTH/auth_success.html","introduction/templates/Lab/BrokenAccess/ba.html","introduction/templates/Lab/BrokenAccess/ba_lab.html","introduction/templates/Lab/BrokenAuth/bau.html","introduction/templates/Lab/BrokenAuth/bau_lab.html","introduction/templates/Lab/BrokenAuth/otp.html","introduction/templates/Lab/CMD/cmd.html","introduction/templates/Lab/CMD/cmd_lab.html","introduction/templates/Lab/CMD/cmd_lab2.html","introduction/templates/Lab/DataExp/data_exp.html","introduction/templates/Lab/DataExp/data_exp_lab.html","introduction/templates/Lab/DataExp/robots.txt","introduction/templates/Lab/SQL/sql.html","introduction/templates/Lab/SQL/sql_lab.html","introduction/templates/Lab/XSS/xss.html","introduction/templates/Lab/XSS/xss_lab.html","introduction/templates/Lab/XSS/xss_lab_2.html","introduction/templates/Lab/XSS/xss_lab_3.html","introduction/templates/Lab/XXE/xxe.html","introduction/templates/Lab/XXE/xxe_lab.html","introduction/templates/Lab/insec_des/insec_des.html","introduction/templates/Lab/insec_des/insec_des_lab.html","introduction/templates/Lab/sec_mis/sec_mis.html","introduction/templates/Lab/sec_mis/sec_mis_lab.html","introduction/templates/Lab/sec_mis/sec_mis_lab3.html","introduction/templates/Lab/ssrf/blogs/blog1.txt","introduction/templates/Lab/ssrf/blogs/blog2.txt","introduction/templates/Lab/ssrf/blogs/blog3.txt","introduction/templates/Lab/ssrf/blogs/blog4.txt","introduction/templates/Lab/ssrf/secret.txt","introduction/templates/Lab/ssrf/ssrf.html","introduction/templates/Lab/ssrf/ssrf_discussion.html","introduction/templates/Lab/ssrf/ssrf_lab.html","introduction/templates/Lab/ssrf/ssrf_lab2.html","introduction/templates/Lab/ssrf/ssrf_target.html","introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access.html","introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_1.html","introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_2.html","introduction/templates/Lab_2021/A1_BrokenAccessControl/broken_access_lab_3.html","introduction/templates/Lab_2021/A1_BrokenAccessControl/secret.html","introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure.html","introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab.html","introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab2.html","introduction/templates/Lab_2021/A2_Crypto_failur/crypto_failure_lab3.html","introduction/templates/Lab_2021/A3_Injection/Blogs/0db9c0e7093d.html","introduction/templates/Lab_2021/A3_Injection/Blogs/9d73d120683d.html","introduction/templates/Lab_2021/A3_Injection/Blogs/a2538af1b5e4.html","introduction/templates/Lab_2021/A3_Injection/injection.html","introduction/templates/Lab_2021/A3_Injection/sql_lab.html","introduction/templates/Lab_2021/A3_Injection/ssti.html","introduction/templates/Lab_2021/A3_Injection/ssti_lab.html","introduction/templates/Lab_2021/A7_auth_failure/a7.html","introduction/templates/Lab_2021/A7_auth_failure/lab2.html","introduction/templates/Lab_2021/A7_auth_failure/lab3.html","introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/desc.html","introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/lab2.html","introduction/templates/Lab_2021/A8_software_and_data_integrity_failure/lab3.html","introduction/templates/introduction/base.html","introduction/templates/introduction/home.html","introduction/templates/mitre/csrf_dashboard.html","introduction/templates/mitre/csrf_lab_login.html","introduction/templates/mitre/mitre_lab_17.html","introduction/templates/mitre/mitre_lab_25.html","introduction/templates/mitre/mitre_top1.html","introduction/templates/mitre/mitre_top10.html","introduction/templates/mitre/mitre_top11.html","introduction/templates/mitre/mitre_top12.html","introduction/templates/mitre/mitre_top13.html","introduction/templates/mitre/mitre_top14.html","introduction/templates/mitre/mitre_top15.html","introduction/templates/mitre/mitre_top16.html","introduction/templates/mitre/mitre_top17.html","introduction/templates/mitre/mitre_top18.html","introduction/templates/mitre/mitre_top19.html","introduction/templates/mitre/mitre_top2.html","introduction/templates/mitre/mitre_top20.html","introduction/templates/mitre/mitre_top21.html","introduction/templates/mitre/mitre_top22.html","introduction/templates/mitre/mitre_top23.html","introduction/templates/mitre/mitre_top24.html","introduction/templates/mitre/mitre_top25.html","introduction/templates/mitre/mitre_top3.html","introduction/templates/mitre/mitre_top4.html","introduction/templates/mitre/mitre_top5.html","introduction/templates/mitre/mitre_top6.html","introduction/templates/mitre/mitre_top7.html","introduction/templates/mitre/mitre_top8.html","introduction/templates/mitre/mitre_top9.html","introduction/templates/playground/A6/index.html","introduction/templates/playground/A7/index.html","introduction/templates/playground/A9/index.html","introduction/templates/registration/login.html","introduction/templates/registration/logout.html","introduction/templates/registration/register.html","introduction/tests.py","introduction/urls.py","introduction/utility.py","introduction/views.py","introduction/xee_see.txt","manage.py","pygoat/__init__.py","pygoat/asgi.py","pygoat/settings.py","pygoat/urls.py","pygoat/wsgi.py","requirements.txt","setup.py","uninstaller.py","uninstaller.sh"]},"time":{"rules":[],"rules_parse_time":7.187302112579346,"profiling_times":{"config_time":9.097522735595703,"core_time":14.958431959152222,"ignores_time":0.002341032028198242,"total_time":24.05905532836914},"parsing_time":{"total_time":0.0,"per_file_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_files":[]},"scanning_time":{"total_time":38.247055768966675,"per_file_time":{"mean":0.04960707622434072,"std_dev":0.05944898739459157},"very_slow_stats":{"time_ratio":0.15004870440570797,"count_ratio":0.0012970168612191958},"very_slow_files":[{"fpath":"introduction/views.py","ftime":5.738921165466309}]},"matching_time":{"total_time":0.0,"per_file_and_rule_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_rules_on_files":[]},"tainting_time":{"total_time":0.0,"per_def_and_rule_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_rules_on_defs":[]},"fixpoint_timeouts":[],"prefiltering":{"project_level_time":0.0,"file_level_time":0.0,"rules_with_project_prefilters_ratio":0.0,"rules_with_file_prefilters_ratio":0.9893975073229567,"rules_selected_ratio":0.04039974728619838,"rules_matched_ratio":0.04039974728619838},"targets":[],"total_bytes":0,"max_memory_bytes":8252530048},"engine_requested":"OSS","interfile_languages_used":[],"skipped_rules":[]}