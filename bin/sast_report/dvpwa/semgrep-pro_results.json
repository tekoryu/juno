{"version":"1.139.0","results":[{"check_id":"yaml.docker-compose.security.no-new-privileges.no-new-privileges","path":"docker-compose.yml","start":{"line":11,"col":3,"offset":130},"end":{"line":11,"col":8,"offset":135},"extra":{"metavars":{"$SERVICE":{"start":{"line":11,"col":3,"offset":130},"end":{"line":11,"col":8,"offset":135},"abstract_content":"redis"}},"message":"Service 'redis' allows for privilege escalation via setuid or setgid binaries. Add 'no-new-privileges:true' in 'security_opt' to prevent this.","metadata":{"cwe":["CWE-732: Incorrect Permission Assignment for Critical Resource"],"owasp":["A05:2021 - Security Misconfiguration","A06:2017 - Security Misconfiguration"],"references":["https://raesene.github.io/blog/2019/06/01/docker-capabilities-and-no-new-privs/","https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt","https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"],"category":"security","technology":["docker-compose"],"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/yaml.docker-compose.security.no-new-privileges.no-new-privileges","shortlink":"https://sg.run/0n8q","semgrep.dev":{"rule":{"origin":"community","r_id":10054,"rule_id":"qNUoWr","rv_id":947034,"url":"https://semgrep.dev/playground/r/o5TZz4P/yaml.docker-compose.security.no-new-privileges.no-new-privileges","version_id":"o5TZz4P"}}},"severity":"WARNING","fingerprint":"b00e41db3b230eb9d919aec810266ce3c60beda0953061c5c61677ee86a4a27f27f661f03a778901ef30b669bfdddbb52e9991445cabe542db94577c7895bab8_0","lines":"  redis:","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service","path":"docker-compose.yml","start":{"line":11,"col":3,"offset":130},"end":{"line":11,"col":8,"offset":135},"extra":{"metavars":{"$SERVICE":{"start":{"line":11,"col":3,"offset":130},"end":{"line":11,"col":8,"offset":135},"abstract_content":"redis"}},"message":"Service 'redis' is running with a writable root filesystem. This may allow malicious applications to download and run additional payloads, or modify container files. If an application inside a container has to save something temporarily consider using a tmpfs. Add 'read_only: true' to this service to prevent this.","metadata":{"cwe":["CWE-732: Incorrect Permission Assignment for Critical Resource"],"owasp":["A05:2021 - Security Misconfiguration","A06:2017 - Security Misconfiguration"],"references":["https://docs.docker.com/compose/compose-file/compose-file-v3/#domainname-hostname-ipc-mac_address-privileged-read_only-shm_size-stdin_open-tty-user-working_dir","https://blog.atomist.com/security-of-docker-kubernetes/","https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-8-set-filesystem-and-volumes-to-read-only"],"category":"security","technology":["docker-compose"],"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service","shortlink":"https://sg.run/e4JE","semgrep.dev":{"rule":{"origin":"community","r_id":10132,"rule_id":"v8U5vN","rv_id":947038,"url":"https://semgrep.dev/playground/r/X0TLZd0/yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service","version_id":"X0TLZd0"}}},"severity":"WARNING","fingerprint":"6482b9f7e2e98023c96e2fe80f0d39089ce283e74fea4b68ad1c6ac83e03681b160ef8c06c13ac8869d4af35806afef2480d8e3ba16f98faa5c4f2a5f86b31f5_0","lines":"  redis:","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.formatted-sql-query.formatted-sql-query","path":"sqli/dao/student.py","start":{"line":45,"col":19,"offset":1377},"end":{"line":45,"col":33,"offset":1391},"extra":{"metavars":{"$DB":{"start":{"line":45,"col":19,"offset":1377},"end":{"line":45,"col":22,"offset":1380},"abstract_content":"cur","propagated_value":{"svalue_start":{"line":44,"col":20,"offset":1337},"svalue_end":{"line":44,"col":33,"offset":1350},"svalue_abstract_content":"conn.cursor()"}},"$SQL":{"start":{"line":45,"col":31,"offset":1389},"end":{"line":45,"col":32,"offset":1390},"abstract_content":"q"}},"message":"Detected possible formatted SQL query. Use parameterized queries instead.","metadata":{"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"references":["https://stackoverflow.com/questions/775296/mysql-parameterized-queries"],"category":"security","technology":["python"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/python.lang.security.audit.formatted-sql-query.formatted-sql-query","shortlink":"https://sg.run/EkWw","semgrep.dev":{"rule":{"origin":"community","r_id":9637,"rule_id":"3qUP9k","rv_id":946343,"url":"https://semgrep.dev/playground/r/e1T98KK/python.lang.security.audit.formatted-sql-query.formatted-sql-query","version_id":"e1T98KK"}}},"severity":"WARNING","fingerprint":"2b3a4efa389f65bffe2f7a1fcaaf55a34b88e6eadb2f1b42971c4e25710084d2b53dec3dbeeaa08ccbfa7bb73ea17a6fc0fe7eebbec98aba62f44214bc627f83_0","lines":"            await cur.execute(q)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.sqlalchemy.security.sqlalchemy-execute-raw-query.sqlalchemy-execute-raw-query","path":"sqli/dao/student.py","start":{"line":45,"col":19,"offset":1377},"end":{"line":45,"col":33,"offset":1391},"extra":{"metavars":{"$SQL":{"start":{"line":42,"col":14,"offset":1234},"end":{"line":43,"col":35,"offset":1299},"abstract_content":"\"INSERT INTO students (name) \"\"VALUES ('%(name)s')\""},"$CONNECTION":{"start":{"line":45,"col":19,"offset":1377},"end":{"line":45,"col":22,"offset":1380},"abstract_content":"cur","propagated_value":{"svalue_start":{"line":44,"col":20,"offset":1337},"svalue_end":{"line":44,"col":33,"offset":1350},"svalue_abstract_content":"conn.cursor()"}},"$QUERY":{"start":{"line":45,"col":31,"offset":1389},"end":{"line":45,"col":32,"offset":1390},"abstract_content":"q"}},"message":"Avoiding SQL string concatenation: untrusted input concatenated with raw SQL query can result in SQL Injection. In order to execute raw query safely, prepared statement should be used. SQLAlchemy provides TextualSQL to easily used prepared statement with named parameters. For complex SQL composition, use SQL Expression Language or Schema Definition Language. In most cases, SQLAlchemy ORM will be a better option.","metadata":{"cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://docs.sqlalchemy.org/en/14/core/tutorial.html#using-textual-sql","https://www.tutorialspoint.com/sqlalchemy/sqlalchemy_quick_guide.htm","https://docs.sqlalchemy.org/en/14/core/tutorial.html#using-more-specific-text-with-table-expression-literal-column-and-expression-column"],"category":"security","technology":["sqlalchemy"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/python.sqlalchemy.security.sqlalchemy-execute-raw-query.sqlalchemy-execute-raw-query","shortlink":"https://sg.run/2b1L","semgrep.dev":{"rule":{"origin":"community","r_id":10563,"rule_id":"oqUz5y","rv_id":946452,"url":"https://semgrep.dev/playground/r/8KTKj19/python.sqlalchemy.security.sqlalchemy-execute-raw-query.sqlalchemy-execute-raw-query","version_id":"8KTKj19"}}},"severity":"ERROR","fingerprint":"604f3eb4e603fe8912a017362201f4a8a00888043baf0b9a7b8c486d7a4e88a0906ab2dffb0415ab3ffe13394a0bac3d10838a3e3890bc0efd397742f9325f49_0","lines":"            await cur.execute(q)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"python.lang.security.audit.md5-used-as-password.md5-used-as-password","path":"sqli/dao/user.py","start":{"line":41,"col":33,"offset":1198},"end":{"line":41,"col":74,"offset":1239},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":40,"offset":39},"abstract_content":"md5(password.encode('utf-8')).hexdigest"},"$FUNCTION":{"start":{"line":41,"col":33,"offset":1198},"end":{"line":41,"col":72,"offset":1237},"abstract_content":"md5(password.encode('utf-8')).hexdigest"}},"message":"It looks like MD5 is used as a password hash. MD5 is not considered a secure password hash because it can be cracked by an attacker in a short amount of time. Use a suitable password hashing function such as scrypt. You can use `hashlib.scrypt`.","metadata":{"cwe":["CWE-327: Use of a Broken or Risky Cryptographic Algorithm"],"owasp":["A03:2017 - Sensitive Data Exposure","A02:2021 - Cryptographic Failures"],"references":["https://tools.ietf.org/html/rfc6151","https://crypto.stackexchange.com/questions/44151/how-does-the-flame-malware-take-advantage-of-md5-collision","https://pycryptodome.readthedocs.io/en/latest/src/hash/sha3_256.html","https://security.stackexchange.com/questions/211/how-to-securely-hash-passwords","https://github.com/returntocorp/semgrep-rules/issues/1609","https://docs.python.org/3/library/hashlib.html#hashlib.scrypt"],"category":"security","technology":["pycryptodome","hashlib","md5"],"subcategory":["vuln"],"likelihood":"HIGH","impact":"LOW","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/python.lang.security.audit.md5-used-as-password.md5-used-as-password","shortlink":"https://sg.run/5DwD","semgrep.dev":{"rule":{"origin":"community","r_id":14703,"rule_id":"6JU1w1","rv_id":946368,"url":"https://semgrep.dev/playground/r/l4Tx9Rp/python.lang.security.audit.md5-used-as-password.md5-used-as-password","version_id":"l4Tx9Rp"}}},"severity":"WARNING","fingerprint":"b1187c096b053e7a4dabd18563df2ef38396bb642e24a7cb13c8adcdc1116b44d28a07619bea48fd32ebdac99ee96ff78d5289d5da48a923ccee14dcb6505327_0","lines":"        return self.pwd_hash == md5(password.encode('utf-8')).hexdigest()","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"sqli/dao/user.py","start":{"line":41,"col":33,"offset":1198},"end":{"line":41,"col":36,"offset":1201}},"md5"]],"intermediate_vars":[],"taint_sink":["CliLoc",[{"path":"sqli/dao/user.py","start":{"line":41,"col":33,"offset":1198},"end":{"line":41,"col":74,"offset":1239}},"md5(password.encode('utf-8')).hexdigest()"]]},"engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp","path":"sqli/static/js/materialize.js","start":{"line":565,"col":94,"offset":32796},"end":{"line":565,"col":158,"offset":32860},"extra":{"metavars":{"$ARG":{"start":{"line":564,"col":38,"offset":32698},"end":{"line":564,"col":39,"offset":32699},"abstract_content":"t"}},"message":"RegExp() called with a `t` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.","metadata":{"owasp":["A05:2021 - Security Misconfiguration","A06:2017 - Security Misconfiguration"],"cwe":["CWE-1333: Inefficient Regular Expression Complexity"],"references":["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"],"source-rule-url":"https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js","category":"security","technology":["javascript"],"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Denial-of-Service (DoS)"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp","shortlink":"https://sg.run/gr65","semgrep.dev":{"rule":{"origin":"community","r_id":12685,"rule_id":"zdU1gD","rv_id":945869,"url":"https://semgrep.dev/playground/r/A8TJz19/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp","version_id":"A8TJz19"}}},"severity":"WARNING","fingerprint":"eecdfb512d6252aad644a59071cfab45e94270152f32ca6e2fe781b4584d97b88441d8af7368eab56f58511e59d695d4ab67baa5f6f7a99a15bba71f6a655300_0","lines":"          e.classList ? e.classList.remove(t) : e.className = e.className.toString().replace(new RegExp(\"(^|\\\\s)\" + t.split(\" \").join(\"|\") + \"(\\\\s|$)\", \"gi\"), \" \");","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"sqli/static/js/materialize.js","start":{"line":564,"col":38,"offset":32698},"end":{"line":564,"col":39,"offset":32699}},"t"]],"intermediate_vars":[{"location":{"path":"sqli/static/js/materialize.js","start":{"line":564,"col":38,"offset":32698},"end":{"line":564,"col":39,"offset":32699}},"content":"t"}],"taint_sink":["CliLoc",[{"path":"sqli/static/js/materialize.js","start":{"line":565,"col":94,"offset":32796},"end":{"line":565,"col":158,"offset":32860}},"new RegExp(\"(^|\\\\s)\" + t.split(\" \").join(\"|\") + \"(\\\\s|$)\", \"gi\")"]]},"engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","path":"sqli/static/js/materialize.js","start":{"line":645,"col":318,"offset":40960},"end":{"line":645,"col":353,"offset":40995},"extra":{"metavars":{"$LOG":{"start":{"line":645,"col":314,"offset":40956},"end":{"line":645,"col":317,"offset":40959},"abstract_content":"log"},"$X":{"start":{"line":645,"col":318,"offset":40960},"end":{"line":645,"col":333,"offset":40975},"abstract_content":"\"Unit ratios: \""},"$STR":{"start":{"line":645,"col":318,"offset":40960},"end":{"line":645,"col":353,"offset":40995},"abstract_content":"\"Unit ratios: \"+JSON.stringify(l)"},"$Y":{"start":{"line":645,"col":336,"offset":40978},"end":{"line":645,"col":353,"offset":40995},"abstract_content":"JSON.stringify(l)"},"$PARAM":{"start":{"line":645,"col":355,"offset":40997},"end":{"line":645,"col":356,"offset":40998},"abstract_content":"o"}},"message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","metadata":{"cwe":["CWE-134: Use of Externally-Controlled Format String"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["javascript"],"subcategory":["audit"],"likelihood":"MEDIUM","impact":"LOW","confidence":"LOW","references":["https://cwe.mitre.org/data/definitions/134.html"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Validation"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","shortlink":"https://sg.run/7Y5R","semgrep.dev":{"rule":{"origin":"community","r_id":13582,"rule_id":"ReU3OJ","rv_id":945885,"url":"https://semgrep.dev/playground/r/1QToKA3/javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","version_id":"1QToKA3"}}},"severity":"INFO","fingerprint":"8df2d57c4a94f78efa613a28447baef6f078c580d4d5f7d43a381b8ce1b118bc2f1d1f517cb0cf25a0ca574c892dfe9803af07fc6f10f435008a8bcc82c3acc7_0","lines":"            }return null === L.remToPx && (L.remToPx = parseFloat(S.getPropertyValue(r.body, \"fontSize\")) || 16), null === L.vwToPx && (L.vwToPx = parseFloat(t.innerWidth) / 100, L.vhToPx = parseFloat(t.innerHeight) / 100), l.remToPx = L.remToPx, l.vwToPx = L.vwToPx, l.vhToPx = L.vhToPx, b.debug >= 1 && console.log(\"Unit ratios: \" + JSON.stringify(l), o), l;","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"sqli/static/js/materialize.js","start":{"line":645,"col":318,"offset":40960},"end":{"line":645,"col":353,"offset":40995}},"\"Unit ratios: \" + JSON.stringify(l)"]],"intermediate_vars":[],"taint_sink":["CliLoc",[{"path":"sqli/static/js/materialize.js","start":{"line":645,"col":318,"offset":40960},"end":{"line":645,"col":353,"offset":40995}},"\"Unit ratios: \" + JSON.stringify(l)"]]},"engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","path":"sqli/static/js/materialize.js","start":{"line":661,"col":184,"offset":42743},"end":{"line":661,"col":246,"offset":42805},"extra":{"metavars":{"$LOG":{"start":{"line":661,"col":180,"offset":42739},"end":{"line":661,"col":183,"offset":42742},"abstract_content":"log"},"$X":{"start":{"line":661,"col":184,"offset":42743},"end":{"line":661,"col":211,"offset":42770},"abstract_content":"\"reverse tweensContainer (\""},"$STR":{"start":{"line":661,"col":184,"offset":42743},"end":{"line":661,"col":246,"offset":42805},"abstract_content":"\"reverse tweensContainer (\"+H+\"): \"+JSON.stringify(E[H])"},"$Y":{"start":{"line":661,"col":214,"offset":42773},"end":{"line":661,"col":215,"offset":42774},"abstract_content":"H"},"$PARAM":{"start":{"line":661,"col":248,"offset":42807},"end":{"line":661,"col":249,"offset":42808},"abstract_content":"o"}},"message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","metadata":{"cwe":["CWE-134: Use of Externally-Controlled Format String"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["javascript"],"subcategory":["audit"],"likelihood":"MEDIUM","impact":"LOW","confidence":"LOW","references":["https://cwe.mitre.org/data/definitions/134.html"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Validation"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","shortlink":"https://sg.run/7Y5R","semgrep.dev":{"rule":{"origin":"community","r_id":13582,"rule_id":"ReU3OJ","rv_id":945885,"url":"https://semgrep.dev/playground/r/1QToKA3/javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","version_id":"1QToKA3"}}},"severity":"INFO","fingerprint":"0858d5be9128509cdb48aa67b976590f07f2c9f08bf2dfaa6fc9f14a69cb628b3a7cd6b7dc6d0cccc8975f21453a787f6fdb30807937f61a79af663a14c9b4aa_0","lines":"                var N = E[H].startValue;E[H].startValue = E[H].currentValue = E[H].endValue, E[H].endValue = N, m.isEmptyObject(v) || (E[H].easing = s.easing), b.debug && console.log(\"reverse tweensContainer (\" + H + \"): \" + JSON.stringify(E[H]), o);","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"sqli/static/js/materialize.js","start":{"line":661,"col":184,"offset":42743},"end":{"line":661,"col":215,"offset":42774}},"\"reverse tweensContainer (\" + H"]],"intermediate_vars":[],"taint_sink":["CliLoc",[{"path":"sqli/static/js/materialize.js","start":{"line":661,"col":184,"offset":42743},"end":{"line":661,"col":246,"offset":42805}},"\"reverse tweensContainer (\" + H + \"): \" + JSON.stringify(E[H])"]]},"engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","path":"sqli/static/js/materialize.js","start":{"line":699,"col":157,"offset":45783},"end":{"line":699,"col":211,"offset":45837},"extra":{"metavars":{"$X":{"start":{"line":682,"col":236,"offset":44114},"end":{"line":682,"col":249,"offset":44127},"abstract_content":"E[z].endValue"},"$Y":{"start":{"line":682,"col":252,"offset":44130},"end":{"line":682,"col":265,"offset":44143},"abstract_content":"E[z].unitType"},"$LOG":{"start":{"line":699,"col":153,"offset":45779},"end":{"line":699,"col":156,"offset":45782},"abstract_content":"log"},"$STR":{"start":{"line":699,"col":157,"offset":45783},"end":{"line":699,"col":211,"offset":45837},"abstract_content":"\"tweensContainer (\"+z+\"): \"+JSON.stringify(l[z])"},"$PARAM":{"start":{"line":699,"col":213,"offset":45839},"end":{"line":699,"col":214,"offset":45840},"abstract_content":"o"}},"message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","metadata":{"cwe":["CWE-134: Use of Externally-Controlled Format String"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["javascript"],"subcategory":["audit"],"likelihood":"MEDIUM","impact":"LOW","confidence":"LOW","references":["https://cwe.mitre.org/data/definitions/134.html"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Validation"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","shortlink":"https://sg.run/7Y5R","semgrep.dev":{"rule":{"origin":"community","r_id":13582,"rule_id":"ReU3OJ","rv_id":945885,"url":"https://semgrep.dev/playground/r/1QToKA3/javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","version_id":"1QToKA3"}}},"severity":"INFO","fingerprint":"ee226117da2830e1d707fae1640de050647fea74342f86ad58cb3048b91d641501c6316424255bebcb52a0966d070e1710de034e8ce5961838221e0826b2c20c_0","lines":"                    q = M / q;}l[z] = { rootPropertyValue: B, startValue: M, currentValue: M, endValue: q, unitType: G, easing: $ }, b.debug && console.log(\"tweensContainer (\" + z + \"): \" + JSON.stringify(l[z]), o);","is_ignored":false,"validation_state":"NO_VALIDATOR","dataflow_trace":{"taint_source":["CliLoc",[{"path":"sqli/static/js/materialize.js","start":{"line":682,"col":236,"offset":44114},"end":{"line":682,"col":265,"offset":44143}},"E[z].endValue + E[z].unitType"]],"intermediate_vars":[{"location":{"path":"sqli/static/js/materialize.js","start":{"line":682,"col":232,"offset":44110},"end":{"line":682,"col":233,"offset":44111}},"content":"M"},{"location":{"path":"sqli/static/js/materialize.js","start":{"line":699,"col":32,"offset":45658},"end":{"line":699,"col":33,"offset":45659}},"content":"l"}],"taint_sink":["CliLoc",[{"path":"sqli/static/js/materialize.js","start":{"line":699,"col":157,"offset":45783},"end":{"line":699,"col":211,"offset":45837}},"\"tweensContainer (\" + z + \"): \" + JSON.stringify(l[z])"]]},"engine_kind":"OSS"}},{"check_id":"javascript.browser.security.insecure-document-method.insecure-document-method","path":"sqli/static/js/materialize.js","start":{"line":3444,"col":11,"offset":147699},"end":{"line":3444,"col":42,"offset":147730},"extra":{"metavars":{"$EL":{"start":{"line":3444,"col":11,"offset":147699},"end":{"line":3444,"col":16,"offset":147704},"abstract_content":"toast"},"$HTML":{"start":{"line":3444,"col":29,"offset":147717},"end":{"line":3444,"col":41,"offset":147729},"abstract_content":"this.message"}},"message":"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities","metadata":{"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"category":"security","technology":["browser"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","references":["https://owasp.org/Top10/A03_2021-Injection"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cross-Site-Scripting (XSS)"],"source":"https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method","shortlink":"https://sg.run/LwA9","semgrep.dev":{"rule":{"origin":"community","r_id":9239,"rule_id":"ReUg41","rv_id":945779,"url":"https://semgrep.dev/playground/r/zyTlk9P/javascript.browser.security.insecure-document-method.insecure-document-method","version_id":"zyTlk9P"}}},"severity":"ERROR","fingerprint":"f8ca483deed494d85ec6ceddc8f9a3bf423224df9e7a75df09a3a4de480ba12a262aef7b72519bf64d1826fab95481ff4924d073b467639dd3f387d007462edf_0","lines":"          toast.innerHTML = this.message;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}}],"errors":[{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm","message":"Internal matching error when running javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm on sqli/static/js/init.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"sqli/static/js/init.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.express.web.cors-default-config-express.cors-default-config-express","message":"Internal matching error when running javascript.express.web.cors-default-config-express.cors-default-config-express on sqli/static/js/init.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"sqli/static/js/init.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.koa.web.cors-default-config-koa.cors-default-config-koa","message":"Internal matching error when running javascript.koa.web.cors-default-config-koa.cors-default-config-koa on sqli/static/js/init.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"sqli/static/js/init.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm","message":"Internal matching error when running javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm on sqli/static/js/materialize.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"sqli/static/js/materialize.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.express.web.cors-default-config-express.cors-default-config-express","message":"Internal matching error when running javascript.express.web.cors-default-config-express.cors-default-config-express on sqli/static/js/materialize.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"sqli/static/js/materialize.js"},{"code":2,"level":"warn","type":"Internal matching error","rule_id":"javascript.koa.web.cors-default-config-koa.cors-default-config-koa","message":"Internal matching error when running javascript.koa.web.cors-default-config-koa.cors-default-config-koa on sqli/static/js/materialize.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine","path":"sqli/static/js/materialize.js"}],"paths":{"scanned":[".gitignore","Dockerfile.app","Dockerfile.db","LICENSE","README.rst","bandit.json","config/dev.yaml","docker-compose.yml","migrations/000-init-schema.sql","migrations/001-fixtures.sql","recreate.sh","requirements.txt","run.py","semgrep.json","sqli/__init__.py","sqli/app.py","sqli/dao/__init__.py","sqli/dao/course.py","sqli/dao/mark.py","sqli/dao/review.py","sqli/dao/student.py","sqli/dao/user.py","sqli/middlewares.py","sqli/routes.py","sqli/schema/__init__.py","sqli/schema/config.py","sqli/schema/forms.py","sqli/services/__init__.py","sqli/services/db.py","sqli/services/redis.py","sqli/static/css/materialize.css","sqli/static/css/materialize.min.css","sqli/static/fonts/roboto/Roboto-Bold.woff","sqli/static/fonts/roboto/Roboto-Bold.woff2","sqli/static/fonts/roboto/Roboto-Light.woff","sqli/static/fonts/roboto/Roboto-Light.woff2","sqli/static/fonts/roboto/Roboto-Medium.woff","sqli/static/fonts/roboto/Roboto-Medium.woff2","sqli/static/fonts/roboto/Roboto-Regular.woff","sqli/static/fonts/roboto/Roboto-Regular.woff2","sqli/static/fonts/roboto/Roboto-Thin.woff","sqli/static/fonts/roboto/Roboto-Thin.woff2","sqli/static/js/init.js","sqli/static/js/materialize.js","sqli/templates/base.jinja2","sqli/templates/course.jinja2","sqli/templates/courses.jinja2","sqli/templates/errors/40x.jinja2","sqli/templates/errors/50x.jinja2","sqli/templates/evaluate.jinja2","sqli/templates/index.jinja2","sqli/templates/review.jinja2","sqli/templates/student.jinja2","sqli/templates/students.jinja2","sqli/utils/__init__.py","sqli/utils/auth.py","sqli/utils/jinja2.py","sqli/views.py"]},"time":{"rules":[],"rules_parse_time":7.1420159339904785,"profiling_times":{"config_time":10.809439182281494,"core_time":72.91779446601868,"ignores_time":0.002146482467651367,"total_time":83.72994446754456},"parsing_time":{"total_time":0.0,"per_file_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_files":[]},"scanning_time":{"total_time":72.19450545310974,"per_file_time":{"mean":0.5013507323132618,"std_dev":28.473197904275562},"very_slow_stats":{"time_ratio":0.8905192383381234,"count_ratio":0.006944444444444444},"very_slow_files":[{"fpath":"sqli/static/js/materialize.js","ftime":64.29059600830078}]},"matching_time":{"total_time":0.0,"per_file_and_rule_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_rules_on_files":[]},"tainting_time":{"total_time":0.0,"per_def_and_rule_time":{"mean":0.0,"std_dev":0.0},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_rules_on_defs":[]},"fixpoint_timeouts":[{"error_type":"Fixpoint timeout","severity":"warn","message":"Fixpoint timeout while performing taint analysis at sqli/static/js/materialize.js:1:0 [rules: 44, first: javascript.nestjs.os.child-process-nestjs.child-process-nestjs]","location":{"path":"sqli/static/js/materialize.js","start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":1,"offset":0}}}],"prefiltering":{"project_level_time":0.0,"file_level_time":0.0,"rules_with_project_prefilters_ratio":0.0,"rules_with_file_prefilters_ratio":0.9893011609378557,"rules_selected_ratio":0.06797177327566584,"rules_matched_ratio":0.06797177327566584},"targets":[],"total_bytes":0,"max_memory_bytes":8252530048},"engine_requested":"OSS","interfile_languages_used":[],"skipped_rules":[]}